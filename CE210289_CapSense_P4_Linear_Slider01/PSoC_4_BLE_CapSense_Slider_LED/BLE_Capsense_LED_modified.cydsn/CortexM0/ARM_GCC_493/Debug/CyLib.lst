ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	cydelayFreqHz
  18              		.data
  19              		.align	2
  20              		.type	cydelayFreqHz, %object
  21              		.size	cydelayFreqHz, 4
  22              	cydelayFreqHz:
  23 0000 001BB700 		.word	12000000
  24              		.global	cydelayFreqKhz
  25              		.align	2
  26              		.type	cydelayFreqKhz, %object
  27              		.size	cydelayFreqKhz, 4
  28              	cydelayFreqKhz:
  29 0004 E02E0000 		.word	12000
  30              		.global	cydelayFreqMhz
  31              		.type	cydelayFreqMhz, %object
  32              		.size	cydelayFreqMhz, 1
  33              	cydelayFreqMhz:
  34 0008 0C       		.byte	12
  35              		.global	cydelay32kMs
  36 0009 000000   		.align	2
  37              		.type	cydelay32kMs, %object
  38              		.size	cydelay32kMs, 4
  39              	cydelay32kMs:
  40 000c 00007017 		.word	393216000
  41              		.bss
  42              		.align	2
  43              	CySysTickCallbacks:
  44 0000 00000000 		.space	20
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	CySysTickInitVar
  46              		.align	2
  47              		.type	CySysTickInitVar, %object
  48              		.size	CySysTickInitVar, 4
  49              	CySysTickInitVar:
  50 0014 00000000 		.space	4
  51              		.global	cyImoFreqMhz2Reg
  52              		.section	.rodata
  53              		.align	2
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 2


  54              		.type	cyImoFreqMhz2Reg, %object
  55              		.size	cyImoFreqMhz2Reg, 46
  56              	cyImoFreqMhz2Reg:
  57 0000 03       		.byte	3
  58 0001 04       		.byte	4
  59 0002 05       		.byte	5
  60 0003 06       		.byte	6
  61 0004 07       		.byte	7
  62 0005 08       		.byte	8
  63 0006 09       		.byte	9
  64 0007 0A       		.byte	10
  65 0008 0B       		.byte	11
  66 0009 0C       		.byte	12
  67 000a 0E       		.byte	14
  68 000b 0F       		.byte	15
  69 000c 10       		.byte	16
  70 000d 11       		.byte	17
  71 000e 12       		.byte	18
  72 000f 13       		.byte	19
  73 0010 14       		.byte	20
  74 0011 15       		.byte	21
  75 0012 16       		.byte	22
  76 0013 17       		.byte	23
  77 0014 18       		.byte	24
  78 0015 19       		.byte	25
  79 0016 1B       		.byte	27
  80 0017 1C       		.byte	28
  81 0018 1D       		.byte	29
  82 0019 1E       		.byte	30
  83 001a 1F       		.byte	31
  84 001b 20       		.byte	32
  85 001c 21       		.byte	33
  86 001d 22       		.byte	34
  87 001e 23       		.byte	35
  88 001f 25       		.byte	37
  89 0020 26       		.byte	38
  90 0021 27       		.byte	39
  91 0022 28       		.byte	40
  92 0023 29       		.byte	41
  93 0024 2A       		.byte	42
  94 0025 2B       		.byte	43
  95 0026 2E       		.byte	46
  96 0027 2F       		.byte	47
  97 0028 30       		.byte	48
  98 0029 31       		.byte	49
  99 002a 32       		.byte	50
 100 002b 33       		.byte	51
 101 002c 34       		.byte	52
 102 002d 35       		.byte	53
 103 002e 0000     		.section	.text.CySysClkImoStart,"ax",%progbits
 104              		.align	2
 105              		.global	CySysClkImoStart
 106              		.code	16
 107              		.thumb_func
 108              		.type	CySysClkImoStart, %function
 109              	CySysClkImoStart:
 110              	.LFB2:
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 3


 111              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CyLib.c **** * File Name: CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * Version 5.30
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** *  Description:
   6:Generated_Source\PSoC4/CyLib.c **** *   Provides a system API for the Clocking, Interrupts, SysTick, and Voltage
   7:Generated_Source\PSoC4/CyLib.c **** *   Detect.
   8:Generated_Source\PSoC4/CyLib.c **** *
   9:Generated_Source\PSoC4/CyLib.c **** *  Note:
  10:Generated_Source\PSoC4/CyLib.c **** *   Documentation of the API's in this file is located in the PSoC 4 System
  11:Generated_Source\PSoC4/CyLib.c **** *   Reference Guide provided with PSoC Creator.
  12:Generated_Source\PSoC4/CyLib.c **** *
  13:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2015, Cypress Semiconductor Corporation.  All rights reserved.
  15:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  18:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  19:Generated_Source\PSoC4/CyLib.c **** 
  20:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLib.c **** 
  22:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  23:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  24:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  25:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  26:Generated_Source\PSoC4/CyLib.c **** 
  27:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  29:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  30:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  31:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  32:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** 
  35:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  36:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 4


  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
  87:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** *
  95:Generated_Source\PSoC4/CyLib.c **** * Summary:
  96:Generated_Source\PSoC4/CyLib.c **** *  Enables the IMO.
  97:Generated_Source\PSoC4/CyLib.c **** *
  98:Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M / PSoC 4200M devices, this function will also enable WCO lock
  99:Generated_Source\PSoC4/CyLib.c **** *  if selected in the Design Wide Resources tab.
 100:Generated_Source\PSoC4/CyLib.c **** *
 101:Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200L devices, this function will also enable USB lock if selected
 102:Generated_Source\PSoC4/CyLib.c **** *  in the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 105:Generated_Source\PSoC4/CyLib.c **** *  None
 106:Generated_Source\PSoC4/CyLib.c **** *
 107:Generated_Source\PSoC4/CyLib.c **** * Return:
 108:Generated_Source\PSoC4/CyLib.c **** *  None
 109:Generated_Source\PSoC4/CyLib.c **** *
 110:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 111:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 112:Generated_Source\PSoC4/CyLib.c **** {
 112              		.loc 1 112 0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 5


 113              		.cfi_startproc
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 113:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 120              		.loc 1 113 0
 121 0004 044B     		ldr	r3, .L2
 122 0006 044A     		ldr	r2, .L2
 123 0008 1268     		ldr	r2, [r2]
 124 000a 8021     		mov	r1, #128
 125 000c 0906     		lsl	r1, r1, #24
 126 000e 0A43     		orr	r2, r1
 127 0010 1A60     		str	r2, [r3]
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 116:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 117:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 118:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 119:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 120:Generated_Source\PSoC4/CyLib.c **** 
 121:Generated_Source\PSoC4/CyLib.c **** 
 122:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 123:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 124:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 125:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 126:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 127:Generated_Source\PSoC4/CyLib.c **** 
 128:Generated_Source\PSoC4/CyLib.c **** }
 128              		.loc 1 128 0
 129 0012 BD46     		mov	sp, r7
 130              		@ sp needed
 131 0014 80BD     		pop	{r7, pc}
 132              	.L3:
 133 0016 C046     		.align	2
 134              	.L2:
 135 0018 08010B40 		.word	1074462984
 136              		.cfi_endproc
 137              	.LFE2:
 138              		.size	CySysClkImoStart, .-CySysClkImoStart
 139              		.section	.text.CySysClkImoStop,"ax",%progbits
 140              		.align	2
 141              		.global	CySysClkImoStop
 142              		.code	16
 143              		.thumb_func
 144              		.type	CySysClkImoStop, %function
 145              	CySysClkImoStop:
 146              	.LFB3:
 129:Generated_Source\PSoC4/CyLib.c **** 
 130:Generated_Source\PSoC4/CyLib.c **** 
 131:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 132:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 133:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** * Summary:
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 6


 136:Generated_Source\PSoC4/CyLib.c **** *  Disables the IMO.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices, this function will also disable WCO lock.
 139:Generated_Source\PSoC4/CyLib.c **** *
 140:Generated_Source\PSoC4/CyLib.c **** *  For PSoC PSoC 4200L devices, this function will also disable USB lock.
 141:Generated_Source\PSoC4/CyLib.c **** *
 142:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 143:Generated_Source\PSoC4/CyLib.c **** *  None
 144:Generated_Source\PSoC4/CyLib.c **** *
 145:Generated_Source\PSoC4/CyLib.c **** * Return:
 146:Generated_Source\PSoC4/CyLib.c **** *  None
 147:Generated_Source\PSoC4/CyLib.c **** *
 148:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 149:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 150:Generated_Source\PSoC4/CyLib.c **** {
 147              		.loc 1 150 0
 148              		.cfi_startproc
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
 151:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 153:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 154:Generated_Source\PSoC4/CyLib.c **** 
 155:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 156:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 157:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 158:Generated_Source\PSoC4/CyLib.c **** 
 159:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 155              		.loc 1 159 0
 156 0004 034B     		ldr	r3, .L5
 157 0006 034A     		ldr	r2, .L5
 158 0008 1268     		ldr	r2, [r2]
 159 000a 5200     		lsl	r2, r2, #1
 160 000c 5208     		lsr	r2, r2, #1
 161 000e 1A60     		str	r2, [r3]
 160:Generated_Source\PSoC4/CyLib.c **** }
 162              		.loc 1 160 0
 163 0010 BD46     		mov	sp, r7
 164              		@ sp needed
 165 0012 80BD     		pop	{r7, pc}
 166              	.L6:
 167              		.align	2
 168              	.L5:
 169 0014 08010B40 		.word	1074462984
 170              		.cfi_endproc
 171              	.LFE3:
 172              		.size	CySysClkImoStop, .-CySysClkImoStop
 173              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 174              		.align	2
 175              		.global	CySysClkWriteHfclkDirect
 176              		.code	16
 177              		.thumb_func
 178              		.type	CySysClkWriteHfclkDirect, %function
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 7


 179              	CySysClkWriteHfclkDirect:
 180              	.LFB4:
 161:Generated_Source\PSoC4/CyLib.c **** 
 162:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 163:Generated_Source\PSoC4/CyLib.c **** 
 164:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 165:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 166:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 169:Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to WCO lock feature. This function works only if the WCO is
 170:Generated_Source\PSoC4/CyLib.c ****     *  already enabled. If the WCO is not enabled then this function returns
 171:Generated_Source\PSoC4/CyLib.c ****     *  without enabling the lock feature.
 172:Generated_Source\PSoC4/CyLib.c ****     *
 173:Generated_Source\PSoC4/CyLib.c ****     *  It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 174:Generated_Source\PSoC4/CyLib.c ****     *  CyDelay() function. The delay interval is measured based on the system
 175:Generated_Source\PSoC4/CyLib.c ****     *  frequency defined by PSoC Creator at build time. If System clock frequency
 176:Generated_Source\PSoC4/CyLib.c ****     *  is changed in runtime, the CyDelayFreq() with the appropriate parameter
 177:Generated_Source\PSoC4/CyLib.c ****     *  should be called.
 178:Generated_Source\PSoC4/CyLib.c ****     *
 179:Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 180:Generated_Source\PSoC4/CyLib.c ****     *  but not both.
 181:Generated_Source\PSoC4/CyLib.c ****     *
 182:Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 183:Generated_Source\PSoC4/CyLib.c ****     *
 184:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 185:Generated_Source\PSoC4/CyLib.c ****     *  None
 186:Generated_Source\PSoC4/CyLib.c ****     *
 187:Generated_Source\PSoC4/CyLib.c ****     * Return:
 188:Generated_Source\PSoC4/CyLib.c ****     *  None
 189:Generated_Source\PSoC4/CyLib.c ****     *
 190:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 191:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 192:Generated_Source\PSoC4/CyLib.c ****     {
 193:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 194:Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 195:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 196:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 197:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 198:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 199:Generated_Source\PSoC4/CyLib.c **** 
 200:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 201:Generated_Source\PSoC4/CyLib.c ****         {
 202:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 203:Generated_Source\PSoC4/CyLib.c **** 
 204:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 205:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 206:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 207:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 208:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 209:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 210:Generated_Source\PSoC4/CyLib.c **** 
 211:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 212:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 213:Generated_Source\PSoC4/CyLib.c ****             {
 214:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 215:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 8


 216:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 217:Generated_Source\PSoC4/CyLib.c ****                     break;
 218:Generated_Source\PSoC4/CyLib.c ****                 }
 219:Generated_Source\PSoC4/CyLib.c ****             }
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 222:Generated_Source\PSoC4/CyLib.c ****             if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:Generated_Source\PSoC4/CyLib.c ****             {
 224:Generated_Source\PSoC4/CyLib.c **** 			    CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_M
 225:Generated_Source\PSoC4/CyLib.c **** 			             				    CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:Generated_Source\PSoC4/CyLib.c ****             }
 227:Generated_Source\PSoC4/CyLib.c **** 
 228:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 229:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 230:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 231:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 234:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 235:Generated_Source\PSoC4/CyLib.c **** 
 236:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 237:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 238:Generated_Source\PSoC4/CyLib.c **** 
 239:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 240:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 241:Generated_Source\PSoC4/CyLib.c ****             {
 242:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 243:Generated_Source\PSoC4/CyLib.c ****             }
 244:Generated_Source\PSoC4/CyLib.c ****             else
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 247:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 248:Generated_Source\PSoC4/CyLib.c **** 
 249:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 250:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 253:Generated_Source\PSoC4/CyLib.c ****             }
 254:Generated_Source\PSoC4/CyLib.c **** 
 255:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 256:Generated_Source\PSoC4/CyLib.c **** 
 257:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 258:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 260:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 261:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 264:Generated_Source\PSoC4/CyLib.c ****         }
 265:Generated_Source\PSoC4/CyLib.c ****     }
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 269:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 270:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 271:Generated_Source\PSoC4/CyLib.c ****     *
 272:Generated_Source\PSoC4/CyLib.c ****     * Summary:
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 9


 273:Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to WCO lock feature.
 274:Generated_Source\PSoC4/CyLib.c ****     *
 275:Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 276:Generated_Source\PSoC4/CyLib.c ****     *
 277:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 278:Generated_Source\PSoC4/CyLib.c ****     *  None
 279:Generated_Source\PSoC4/CyLib.c ****     *
 280:Generated_Source\PSoC4/CyLib.c ****     * Return:
 281:Generated_Source\PSoC4/CyLib.c ****     *  None
 282:Generated_Source\PSoC4/CyLib.c ****     *
 283:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 284:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 285:Generated_Source\PSoC4/CyLib.c ****     {
 286:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 287:Generated_Source\PSoC4/CyLib.c ****     }
 288:Generated_Source\PSoC4/CyLib.c **** 
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 291:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 292:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 293:Generated_Source\PSoC4/CyLib.c ****     *
 294:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 295:Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 298:Generated_Source\PSoC4/CyLib.c ****     *
 299:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 300:Generated_Source\PSoC4/CyLib.c ****     *  None
 301:Generated_Source\PSoC4/CyLib.c ****     *
 302:Generated_Source\PSoC4/CyLib.c ****     * Return:
 303:Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to WCO lock is enabled, and 0 if IMO to WCO lock is disabled.
 304:Generated_Source\PSoC4/CyLib.c ****     *
 305:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 306:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 307:Generated_Source\PSoC4/CyLib.c ****     {
 308:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 309:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 310:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 311:Generated_Source\PSoC4/CyLib.c ****     }
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 314:Generated_Source\PSoC4/CyLib.c **** 
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 320:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 323:Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to USB lock feature.
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     *  This function must be called before CySysClkWriteImoFreq().
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     *  This function is called from CySysClkImoStart() function if USB lock
 328:Generated_Source\PSoC4/CyLib.c ****     *  selected in the Design Wide Resources tab.
 329:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 10


 330:Generated_Source\PSoC4/CyLib.c ****     *  This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 331:Generated_Source\PSoC4/CyLib.c ****     *  devices, the IMO can lock to either WCO or USB, but not both.
 332:Generated_Source\PSoC4/CyLib.c ****     *
 333:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 334:Generated_Source\PSoC4/CyLib.c ****     *  None
 335:Generated_Source\PSoC4/CyLib.c ****     *
 336:Generated_Source\PSoC4/CyLib.c ****     * Return:
 337:Generated_Source\PSoC4/CyLib.c ****     *  None
 338:Generated_Source\PSoC4/CyLib.c ****     *
 339:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 340:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 341:Generated_Source\PSoC4/CyLib.c ****     {
 342:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 343:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 344:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 345:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 346:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 347:Generated_Source\PSoC4/CyLib.c **** 
 348:Generated_Source\PSoC4/CyLib.c ****         /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 349:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 350:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 351:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 352:Generated_Source\PSoC4/CyLib.c **** 
 353:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 354:Generated_Source\PSoC4/CyLib.c ****     }
 355:Generated_Source\PSoC4/CyLib.c **** 
 356:Generated_Source\PSoC4/CyLib.c **** 
 357:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 358:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 359:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 360:Generated_Source\PSoC4/CyLib.c ****     *
 361:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 362:Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to USB lock feature.
 363:Generated_Source\PSoC4/CyLib.c ****     *
 364:Generated_Source\PSoC4/CyLib.c ****     *  This function is called from CySysClkImoStop() function if USB lock selected
 365:Generated_Source\PSoC4/CyLib.c ****     *  in the Design Wide Resources tab.
 366:Generated_Source\PSoC4/CyLib.c ****     *
 367:Generated_Source\PSoC4/CyLib.c ****     *  This is applicable for PSoC 4200L family of devices only.
 368:Generated_Source\PSoC4/CyLib.c ****     *
 369:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 370:Generated_Source\PSoC4/CyLib.c ****     *  None
 371:Generated_Source\PSoC4/CyLib.c ****     *
 372:Generated_Source\PSoC4/CyLib.c ****     * Return:
 373:Generated_Source\PSoC4/CyLib.c ****     *  None
 374:Generated_Source\PSoC4/CyLib.c ****     *
 375:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 376:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 377:Generated_Source\PSoC4/CyLib.c ****     {
 378:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 379:Generated_Source\PSoC4/CyLib.c **** 
 380:Generated_Source\PSoC4/CyLib.c ****         /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 381:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 382:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 383:Generated_Source\PSoC4/CyLib.c ****     }
 384:Generated_Source\PSoC4/CyLib.c **** 
 385:Generated_Source\PSoC4/CyLib.c **** 
 386:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 11


 387:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 388:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 389:Generated_Source\PSoC4/CyLib.c ****     *
 390:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 391:Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to USB lock enable state.
 392:Generated_Source\PSoC4/CyLib.c ****     *
 393:Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4200L devices only.
 394:Generated_Source\PSoC4/CyLib.c ****     *
 395:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 396:Generated_Source\PSoC4/CyLib.c ****     *  None
 397:Generated_Source\PSoC4/CyLib.c ****     *
 398:Generated_Source\PSoC4/CyLib.c ****     * Return:
 399:Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to USB lock is enabled, and 0 if IMO to USB lock is disabled.
 400:Generated_Source\PSoC4/CyLib.c ****     *
 401:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 403:Generated_Source\PSoC4/CyLib.c ****     {
 404:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 405:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 406:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 407:Generated_Source\PSoC4/CyLib.c ****     }
 408:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 409:Generated_Source\PSoC4/CyLib.c **** 
 410:Generated_Source\PSoC4/CyLib.c **** 
 411:Generated_Source\PSoC4/CyLib.c **** 
 412:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 413:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 414:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 415:Generated_Source\PSoC4/CyLib.c **** *
 416:Generated_Source\PSoC4/CyLib.c **** * Summary:
 417:Generated_Source\PSoC4/CyLib.c **** *  Selects the direct source for the HFCLK.
 418:Generated_Source\PSoC4/CyLib.c **** *
 419:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 420:Generated_Source\PSoC4/CyLib.c **** *  clkSelect: One of the available HFCLK direct sources:
 421:Generated_Source\PSoC4/CyLib.c **** *   Define                    Source
 422:Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_IMO     IMO
 423:Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_EXTCLK  External clock pin
 424:Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_ECO     External crystal oscillator
 425:Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4100-BL / PSoC 4200-BL)
 426:Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_PLL0    PLL#0
 427:Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4200L)
 428:Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_PLL1    PLL#1
 429:Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4200L)
 430:Generated_Source\PSoC4/CyLib.c **** *
 431:Generated_Source\PSoC4/CyLib.c **** * Return:
 432:Generated_Source\PSoC4/CyLib.c **** *  None
 433:Generated_Source\PSoC4/CyLib.c **** *
 434:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 435:Generated_Source\PSoC4/CyLib.c **** *  The new source must be running and stable before calling this function.
 436:Generated_Source\PSoC4/CyLib.c **** *
 437:Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000:
 438:Generated_Source\PSoC4/CyLib.c **** *  The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 439:Generated_Source\PSoC4/CyLib.c **** *  be selected in a way to not to exceed 16 MHz for the System clock.
 440:Generated_Source\PSoC4/CyLib.c **** *
 441:Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during device operation, call
 442:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 443:Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 12


 444:Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 445:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 446:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 447:Generated_Source\PSoC4/CyLib.c **** *
 448:Generated_Source\PSoC4/CyLib.c **** *  Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 449:Generated_Source\PSoC4/CyLib.c **** *  maximum permissible value for HFCLK.
 450:Generated_Source\PSoC4/CyLib.c **** *
 451:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 452:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 453:Generated_Source\PSoC4/CyLib.c **** {
 181              		.loc 1 453 0
 182              		.cfi_startproc
 183 0000 90B5     		push	{r4, r7, lr}
 184              		.cfi_def_cfa_offset 12
 185              		.cfi_offset 4, -12
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 85B0     		sub	sp, sp, #20
 189              		.cfi_def_cfa_offset 32
 190 0004 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 192 0006 7860     		str	r0, [r7, #4]
 454:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 455:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 193              		.loc 1 457 0
 194 0008 0F23     		mov	r3, #15
 195 000a FC18     		add	r4, r7, r3
 196 000c FFF7FEFF 		bl	CyEnterCriticalSection
 197 0010 031C     		mov	r3, r0
 198 0012 2370     		strb	r3, [r4]
 458:Generated_Source\PSoC4/CyLib.c **** 
 459:Generated_Source\PSoC4/CyLib.c **** 
 460:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 199              		.loc 1 460 0
 200 0014 0B4B     		ldr	r3, .L8
 201 0016 1B68     		ldr	r3, [r3]
 202 0018 0722     		mov	r2, #7
 203 001a 9343     		bic	r3, r2
 204 001c BB60     		str	r3, [r7, #8]
 461:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 462:Generated_Source\PSoC4/CyLib.c **** 
 463:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 464:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 465:Generated_Source\PSoC4/CyLib.c ****     {
 466:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 467:Generated_Source\PSoC4/CyLib.c ****     }
 468:Generated_Source\PSoC4/CyLib.c ****     else
 469:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 470:Generated_Source\PSoC4/CyLib.c ****     {
 471:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 205              		.loc 1 471 0
 206 001e 7B68     		ldr	r3, [r7, #4]
 207 0020 0722     		mov	r2, #7
 208 0022 1340     		and	r3, r2
 209 0024 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 13


 210 0026 1343     		orr	r3, r2
 211 0028 BB60     		str	r3, [r7, #8]
 472:Generated_Source\PSoC4/CyLib.c ****     }
 473:Generated_Source\PSoC4/CyLib.c **** 
 474:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 212              		.loc 1 474 0
 213 002a 064B     		ldr	r3, .L8
 214 002c BA68     		ldr	r2, [r7, #8]
 215 002e 1A60     		str	r2, [r3]
 475:Generated_Source\PSoC4/CyLib.c **** 
 476:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 216              		.loc 1 476 0
 217 0030 0F23     		mov	r3, #15
 218 0032 FB18     		add	r3, r7, r3
 219 0034 1B78     		ldrb	r3, [r3]
 220 0036 181C     		mov	r0, r3
 221 0038 FFF7FEFF 		bl	CyExitCriticalSection
 477:Generated_Source\PSoC4/CyLib.c **** }
 222              		.loc 1 477 0
 223 003c BD46     		mov	sp, r7
 224 003e 05B0     		add	sp, sp, #20
 225              		@ sp needed
 226 0040 90BD     		pop	{r4, r7, pc}
 227              	.L9:
 228 0042 C046     		.align	2
 229              	.L8:
 230 0044 00010B40 		.word	1074462976
 231              		.cfi_endproc
 232              	.LFE4:
 233              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 234              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 235              		.align	2
 236              		.global	CySysClkGetSysclkSource
 237              		.code	16
 238              		.thumb_func
 239              		.type	CySysClkGetSysclkSource, %function
 240              	CySysClkGetSysclkSource:
 241              	.LFB5:
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c **** 
 480:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 481:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 482:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 483:Generated_Source\PSoC4/CyLib.c **** *
 484:Generated_Source\PSoC4/CyLib.c **** * Summary:
 485:Generated_Source\PSoC4/CyLib.c **** *  Returns the source of the System clock.
 486:Generated_Source\PSoC4/CyLib.c **** *
 487:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 488:Generated_Source\PSoC4/CyLib.c **** *  None
 489:Generated_Source\PSoC4/CyLib.c **** *
 490:Generated_Source\PSoC4/CyLib.c **** * Return:
 491:Generated_Source\PSoC4/CyLib.c **** *  The same as CySysClkWriteHfclkDirect() function parameters.
 492:Generated_Source\PSoC4/CyLib.c **** *
 493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 494:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 495:Generated_Source\PSoC4/CyLib.c **** {
 242              		.loc 1 495 0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 14


 243              		.cfi_startproc
 244 0000 90B5     		push	{r4, r7, lr}
 245              		.cfi_def_cfa_offset 12
 246              		.cfi_offset 4, -12
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 83B0     		sub	sp, sp, #12
 250              		.cfi_def_cfa_offset 24
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 496:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 497:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 498:Generated_Source\PSoC4/CyLib.c **** 
 499:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 253              		.loc 1 499 0
 254 0006 FC1D     		add	r4, r7, #7
 255 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 256 000c 031C     		mov	r3, r0
 257 000e 2370     		strb	r3, [r4]
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 502:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 503:Generated_Source\PSoC4/CyLib.c ****     {
 504:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 505:Generated_Source\PSoC4/CyLib.c ****     }
 506:Generated_Source\PSoC4/CyLib.c ****     else
 507:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 508:Generated_Source\PSoC4/CyLib.c ****     {
 509:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 258              		.loc 1 509 0
 259 0010 074B     		ldr	r3, .L12
 260 0012 1B68     		ldr	r3, [r3]
 261 0014 0722     		mov	r2, #7
 262 0016 1340     		and	r3, r2
 263 0018 3B60     		str	r3, [r7]
 510:Generated_Source\PSoC4/CyLib.c ****     }
 511:Generated_Source\PSoC4/CyLib.c **** 
 512:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 264              		.loc 1 512 0
 265 001a FB1D     		add	r3, r7, #7
 266 001c 1B78     		ldrb	r3, [r3]
 267 001e 181C     		mov	r0, r3
 268 0020 FFF7FEFF 		bl	CyExitCriticalSection
 513:Generated_Source\PSoC4/CyLib.c **** 
 514:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 269              		.loc 1 514 0
 270 0024 3B68     		ldr	r3, [r7]
 515:Generated_Source\PSoC4/CyLib.c **** }
 271              		.loc 1 515 0
 272 0026 181C     		mov	r0, r3
 273 0028 BD46     		mov	sp, r7
 274 002a 03B0     		add	sp, sp, #12
 275              		@ sp needed
 276 002c 90BD     		pop	{r4, r7, pc}
 277              	.L13:
 278 002e C046     		.align	2
 279              	.L12:
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 15


 280 0030 00010B40 		.word	1074462976
 281              		.cfi_endproc
 282              	.LFE5:
 283              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 284              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 285              		.align	2
 286              		.global	CySysClkWriteSysclkDiv
 287              		.code	16
 288              		.thumb_func
 289              		.type	CySysClkWriteSysclkDiv, %function
 290              	CySysClkWriteSysclkDiv:
 291              	.LFB6:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** 
 518:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 519:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 520:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 521:Generated_Source\PSoC4/CyLib.c **** *
 522:Generated_Source\PSoC4/CyLib.c **** * Summary:
 523:Generated_Source\PSoC4/CyLib.c **** *  Selects the prescaler divide amount for SYSCLK from HFCLK.
 524:Generated_Source\PSoC4/CyLib.c **** *
 525:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 526:Generated_Source\PSoC4/CyLib.c **** *  divider: Power of 2 prescaler selection
 527:Generated_Source\PSoC4/CyLib.c **** *
 528:Generated_Source\PSoC4/CyLib.c **** *   Define                        Description
 529:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 530:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 531:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 532:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 533:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 534:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 535:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 536:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Return:
 539:Generated_Source\PSoC4/CyLib.c **** *  None
 540:Generated_Source\PSoC4/CyLib.c **** *
 541:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 542:Generated_Source\PSoC4/CyLib.c **** *  4000 Family:
 543:Generated_Source\PSoC4/CyLib.c **** *  The SYS_CLK has the speed of 16 MHz, so dividers HF_CLK and SYS_CLK
 544:Generated_Source\PSoC4/CyLib.c **** *  dividers should be selected in a way, not to exceed 16 MHz for SYS_CLK.
 545:Generated_Source\PSoC4/CyLib.c **** *
 546:Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 547:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 548:Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 549:Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 550:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 551:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 552:Generated_Source\PSoC4/CyLib.c **** *
 553:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 554:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 555:Generated_Source\PSoC4/CyLib.c **** {
 292              		.loc 1 555 0
 293              		.cfi_startproc
 294 0000 90B5     		push	{r4, r7, lr}
 295              		.cfi_def_cfa_offset 12
 296              		.cfi_offset 4, -12
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 16


 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 85B0     		sub	sp, sp, #20
 300              		.cfi_def_cfa_offset 32
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
 556:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 557:Generated_Source\PSoC4/CyLib.c **** 
 558:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 304              		.loc 1 558 0
 305 0008 0F23     		mov	r3, #15
 306 000a FC18     		add	r4, r7, r3
 307 000c FFF7FEFF 		bl	CyEnterCriticalSection
 308 0010 031C     		mov	r3, r0
 309 0012 2370     		strb	r3, [r4]
 559:Generated_Source\PSoC4/CyLib.c **** 
 560:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 310              		.loc 1 560 0
 311 0014 094B     		ldr	r3, .L15
 312 0016 7A68     		ldr	r2, [r7, #4]
 313 0018 0721     		mov	r1, #7
 314 001a 0A40     		and	r2, r1
 315 001c D104     		lsl	r1, r2, #19
 561:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 562:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 316              		.loc 1 562 0
 317 001e 074A     		ldr	r2, .L15
 318 0020 1268     		ldr	r2, [r2]
 319 0022 0748     		ldr	r0, .L15+4
 320 0024 0240     		and	r2, r0
 561:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 321              		.loc 1 561 0
 322 0026 0A43     		orr	r2, r1
 560:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 323              		.loc 1 560 0
 324 0028 1A60     		str	r2, [r3]
 563:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 564:Generated_Source\PSoC4/CyLib.c **** 
 565:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 325              		.loc 1 565 0
 326 002a 0F23     		mov	r3, #15
 327 002c FB18     		add	r3, r7, r3
 328 002e 1B78     		ldrb	r3, [r3]
 329 0030 181C     		mov	r0, r3
 330 0032 FFF7FEFF 		bl	CyExitCriticalSection
 566:Generated_Source\PSoC4/CyLib.c **** }
 331              		.loc 1 566 0
 332 0036 BD46     		mov	sp, r7
 333 0038 05B0     		add	sp, sp, #20
 334              		@ sp needed
 335 003a 90BD     		pop	{r4, r7, pc}
 336              	.L16:
 337              		.align	2
 338              	.L15:
 339 003c 00010B40 		.word	1074462976
 340 0040 FFFFC7FF 		.word	-3670017
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 17


 341              		.cfi_endproc
 342              	.LFE6:
 343              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 344              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 345              		.align	2
 346              		.global	CySysClkWriteImoFreq
 347              		.code	16
 348              		.thumb_func
 349              		.type	CySysClkWriteImoFreq, %function
 350              	CySysClkWriteImoFreq:
 351              	.LFB7:
 567:Generated_Source\PSoC4/CyLib.c **** 
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 570:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 571:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * Summary:
 574:Generated_Source\PSoC4/CyLib.c **** *  Sets the frequency of the IMO.
 575:Generated_Source\PSoC4/CyLib.c **** *
 576:Generated_Source\PSoC4/CyLib.c **** *  If IMO is currently driving the HFCLK, and if the HFCLK frequency decreases,
 577:Generated_Source\PSoC4/CyLib.c **** *  you can call CySysFlashSetWaitCycles () to improve CPU performance. See
 578:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles () for more information.
 579:Generated_Source\PSoC4/CyLib.c **** *
 580:Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4000 family of devices, maximum HFCLK frequency is 16 MHz. If IMO is
 581:Generated_Source\PSoC4/CyLib.c **** *  configured to frequencies above 16 MHz, ensure to set the appropriate HFCLK
 582:Generated_Source\PSoC4/CyLib.c **** *  predivider value first.
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 585:Generated_Source\PSoC4/CyLib.c **** *  then this API will disable the lock, write the new IMO frequency and then
 586:Generated_Source\PSoC4/CyLib.c **** *  re-enable the lock.
 587:Generated_Source\PSoC4/CyLib.c **** *
 588:Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200L device families, this function enables the USB lock when 24 or
 589:Generated_Source\PSoC4/CyLib.c **** *  48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 590:Generated_Source\PSoC4/CyLib.c **** *  Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 591:Generated_Source\PSoC4/CyLib.c **** *  lock is disabled during IMO frequency change.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is compiled
 594:Generated_Source\PSoC4/CyLib.c **** *  in debug mode.
 595:Generated_Source\PSoC4/CyLib.c **** *
 596:Generated_Source\PSoC4/CyLib.c **** * Parameters:
 597:Generated_Source\PSoC4/CyLib.c **** *  All PSoC 4 families excluding PSoC 4000: Valid range [3-48] with step size
 598:Generated_Source\PSoC4/CyLib.c **** *  equals 1.
 599:Generated_Source\PSoC4/CyLib.c **** *
 600:Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: Valid range [24-48] with step size equals 4.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is
 603:Generated_Source\PSoC4/CyLib.c **** *  compiled in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * Return:
 606:Generated_Source\PSoC4/CyLib.c **** *  None
 607:Generated_Source\PSoC4/CyLib.c **** *
 608:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 609:Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 610:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 611:Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 612:Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 18


 613:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 614:Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 617:Generated_Source\PSoC4/CyLib.c **** *  and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 618:Generated_Source\PSoC4/CyLib.c **** *  the System clock.
 619:Generated_Source\PSoC4/CyLib.c **** *
 620:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 621:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 622:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 623:Generated_Source\PSoC4/CyLib.c ****     {
 352              		.loc 1 623 0
 353              		.cfi_startproc
 354 0000 90B5     		push	{r4, r7, lr}
 355              		.cfi_def_cfa_offset 12
 356              		.cfi_offset 4, -12
 357              		.cfi_offset 7, -8
 358              		.cfi_offset 14, -4
 359 0002 85B0     		sub	sp, sp, #20
 360              		.cfi_def_cfa_offset 32
 361 0004 00AF     		add	r7, sp, #0
 362              		.cfi_def_cfa_register 7
 363 0006 7860     		str	r0, [r7, #4]
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 625:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 627:Generated_Source\PSoC4/CyLib.c ****         #else
 628:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 633:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 634:Generated_Source\PSoC4/CyLib.c **** 
 635:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 636:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 637:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 640:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 641:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 642:Generated_Source\PSoC4/CyLib.c **** 
 643:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 644:Generated_Source\PSoC4/CyLib.c **** 
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 364              		.loc 1 646 0
 365 0008 0C23     		mov	r3, #12
 366 000a FC18     		add	r4, r7, r3
 367 000c FFF7FEFF 		bl	CyEnterCriticalSection
 368 0010 031C     		mov	r3, r0
 369 0012 2370     		strb	r3, [r4]
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 649:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 650:Generated_Source\PSoC4/CyLib.c ****             {
 651:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 19


 652:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 653:Generated_Source\PSoC4/CyLib.c ****             }
 654:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 655:Generated_Source\PSoC4/CyLib.c **** 
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 658:Generated_Source\PSoC4/CyLib.c **** 
 659:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 660:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 661:Generated_Source\PSoC4/CyLib.c ****                 {
 662:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 663:Generated_Source\PSoC4/CyLib.c **** 
 664:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 665:Generated_Source\PSoC4/CyLib.c ****                 {
 666:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 667:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 668:Generated_Source\PSoC4/CyLib.c ****                 }
 669:Generated_Source\PSoC4/CyLib.c **** 
 670:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 671:Generated_Source\PSoC4/CyLib.c ****                 }
 672:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 673:Generated_Source\PSoC4/CyLib.c **** 
 674:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 675:Generated_Source\PSoC4/CyLib.c **** 
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 678:Generated_Source\PSoC4/CyLib.c **** 
 679:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 680:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 684:Generated_Source\PSoC4/CyLib.c **** 
 685:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 686:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 687:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 688:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 689:Generated_Source\PSoC4/CyLib.c **** 
 690:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 692:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 693:Generated_Source\PSoC4/CyLib.c **** 
 694:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 695:Generated_Source\PSoC4/CyLib.c **** 
 696:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 370              		.loc 1 696 0
 371 0014 7B68     		ldr	r3, [r7, #4]
 372 0016 022B     		cmp	r3, #2
 373 0018 00D8     		bhi	.LCB233
 374 001a B4E0     		b	.L18	@long jump
 375              	.LCB233:
 376              		.loc 1 696 0 is_stmt 0 discriminator 1
 377 001c 7B68     		ldr	r3, [r7, #4]
 378 001e 302B     		cmp	r3, #48
 379 0020 00D9     		bls	.LCB236
 380 0022 B0E0     		b	.L18	@long jump
 381              	.LCB236:
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 20


 697:Generated_Source\PSoC4/CyLib.c ****         {
 698:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 382              		.loc 1 698 0 is_stmt 1
 383 0024 5E4B     		ldr	r3, .L29
 384 0026 1B78     		ldrb	r3, [r3]
 385 0028 DBB2     		uxtb	r3, r3
 386 002a 1A1E     		sub	r2, r3, #0
 387 002c 7B68     		ldr	r3, [r7, #4]
 388 002e 9A42     		cmp	r2, r3
 389 0030 0AD3     		bcc	.L19
 699:Generated_Source\PSoC4/CyLib.c ****             {
 700:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 390              		.loc 1 700 0
 391 0032 5C4A     		ldr	r2, .L29+4
 392 0034 0F23     		mov	r3, #15
 393 0036 FB18     		add	r3, r7, r3
 394 0038 1278     		ldrb	r2, [r2]
 395 003a 1A70     		strb	r2, [r3]
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 396              		.loc 1 701 0
 397 003c 5A4A     		ldr	r2, .L29+8
 398 003e 0E23     		mov	r3, #14
 399 0040 FB18     		add	r3, r7, r3
 400 0042 1278     		ldrb	r2, [r2]
 401 0044 1A70     		strb	r2, [r3]
 402 0046 3FE0     		b	.L20
 403              	.L19:
 702:Generated_Source\PSoC4/CyLib.c ****             }
 703:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 404              		.loc 1 703 0
 405 0048 584B     		ldr	r3, .L29+12
 406 004a 1B78     		ldrb	r3, [r3]
 407 004c DBB2     		uxtb	r3, r3
 408 004e 1A1E     		sub	r2, r3, #0
 409 0050 7B68     		ldr	r3, [r7, #4]
 410 0052 9A42     		cmp	r2, r3
 411 0054 0AD3     		bcc	.L21
 704:Generated_Source\PSoC4/CyLib.c ****             {
 705:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 412              		.loc 1 705 0
 413 0056 564A     		ldr	r2, .L29+16
 414 0058 0F23     		mov	r3, #15
 415 005a FB18     		add	r3, r7, r3
 416 005c 1278     		ldrb	r2, [r2]
 417 005e 1A70     		strb	r2, [r3]
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 418              		.loc 1 706 0
 419 0060 544A     		ldr	r2, .L29+20
 420 0062 0E23     		mov	r3, #14
 421 0064 FB18     		add	r3, r7, r3
 422 0066 1278     		ldrb	r2, [r2]
 423 0068 1A70     		strb	r2, [r3]
 424 006a 2DE0     		b	.L20
 425              	.L21:
 707:Generated_Source\PSoC4/CyLib.c ****             }
 708:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 426              		.loc 1 708 0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 21


 427 006c 524B     		ldr	r3, .L29+24
 428 006e 1B78     		ldrb	r3, [r3]
 429 0070 DBB2     		uxtb	r3, r3
 430 0072 1A1E     		sub	r2, r3, #0
 431 0074 7B68     		ldr	r3, [r7, #4]
 432 0076 9A42     		cmp	r2, r3
 433 0078 0AD3     		bcc	.L22
 709:Generated_Source\PSoC4/CyLib.c ****             {
 710:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 434              		.loc 1 710 0
 435 007a 504A     		ldr	r2, .L29+28
 436 007c 0F23     		mov	r3, #15
 437 007e FB18     		add	r3, r7, r3
 438 0080 1278     		ldrb	r2, [r2]
 439 0082 1A70     		strb	r2, [r3]
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 440              		.loc 1 711 0
 441 0084 4E4A     		ldr	r2, .L29+32
 442 0086 0E23     		mov	r3, #14
 443 0088 FB18     		add	r3, r7, r3
 444 008a 1278     		ldrb	r2, [r2]
 445 008c 1A70     		strb	r2, [r3]
 446 008e 1BE0     		b	.L20
 447              	.L22:
 712:Generated_Source\PSoC4/CyLib.c ****             }
 713:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 448              		.loc 1 713 0
 449 0090 4C4B     		ldr	r3, .L29+36
 450 0092 1B78     		ldrb	r3, [r3]
 451 0094 DBB2     		uxtb	r3, r3
 452 0096 1A1E     		sub	r2, r3, #0
 453 0098 7B68     		ldr	r3, [r7, #4]
 454 009a 9A42     		cmp	r2, r3
 455 009c 0AD3     		bcc	.L23
 714:Generated_Source\PSoC4/CyLib.c ****             {
 715:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 456              		.loc 1 715 0
 457 009e 4A4A     		ldr	r2, .L29+40
 458 00a0 0F23     		mov	r3, #15
 459 00a2 FB18     		add	r3, r7, r3
 460 00a4 1278     		ldrb	r2, [r2]
 461 00a6 1A70     		strb	r2, [r3]
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 462              		.loc 1 716 0
 463 00a8 484A     		ldr	r2, .L29+44
 464 00aa 0E23     		mov	r3, #14
 465 00ac FB18     		add	r3, r7, r3
 466 00ae 1278     		ldrb	r2, [r2]
 467 00b0 1A70     		strb	r2, [r3]
 468 00b2 09E0     		b	.L20
 469              	.L23:
 717:Generated_Source\PSoC4/CyLib.c ****             }
 718:Generated_Source\PSoC4/CyLib.c ****             else
 719:Generated_Source\PSoC4/CyLib.c ****             {
 720:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 470              		.loc 1 720 0
 471 00b4 464A     		ldr	r2, .L29+48
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 22


 472 00b6 0F23     		mov	r3, #15
 473 00b8 FB18     		add	r3, r7, r3
 474 00ba 1278     		ldrb	r2, [r2]
 475 00bc 1A70     		strb	r2, [r3]
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 476              		.loc 1 721 0
 477 00be 454A     		ldr	r2, .L29+52
 478 00c0 0E23     		mov	r3, #14
 479 00c2 FB18     		add	r3, r7, r3
 480 00c4 1278     		ldrb	r2, [r2]
 481 00c6 1A70     		strb	r2, [r3]
 482              	.L20:
 722:Generated_Source\PSoC4/CyLib.c ****             }
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 725:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 483              		.loc 1 725 0
 484 00c8 7B68     		ldr	r3, [r7, #4]
 485 00ca DA1E     		sub	r2, r3, #3
 486 00cc 0B23     		mov	r3, #11
 487 00ce FB18     		add	r3, r7, r3
 488 00d0 4149     		ldr	r1, .L29+56
 489 00d2 8A5C     		ldrb	r2, [r1, r2]
 490 00d4 1A70     		strb	r2, [r3]
 726:Generated_Source\PSoC4/CyLib.c **** 
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 729:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 730:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 731:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 732:Generated_Source\PSoC4/CyLib.c ****             *
 733:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 734:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 735:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 736:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 737:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 491              		.loc 1 737 0
 492 00d6 0B23     		mov	r3, #11
 493 00d8 FB18     		add	r3, r7, r3
 494 00da 1B78     		ldrb	r3, [r3]
 495 00dc 2F2B     		cmp	r3, #47
 496 00de 0DD9     		bls	.L24
 497              		.loc 1 737 0 is_stmt 0 discriminator 1
 498 00e0 7B68     		ldr	r3, [r7, #4]
 499 00e2 2A2B     		cmp	r3, #42
 500 00e4 0AD9     		bls	.L24
 738:Generated_Source\PSoC4/CyLib.c ****             {
 739:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 740:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 501              		.loc 1 740 0 is_stmt 1
 502 00e6 3D4B     		ldr	r3, .L29+60
 503 00e8 1922     		mov	r2, #25
 504 00ea 1A60     		str	r2, [r3]
 741:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 742:Generated_Source\PSoC4/CyLib.c **** 
 743:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 505              		.loc 1 743 0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 23


 506 00ec 0520     		mov	r0, #5
 507 00ee FFF7FEFF 		bl	CyDelayCycles
 744:Generated_Source\PSoC4/CyLib.c **** 
 745:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 508              		.loc 1 745 0
 509 00f2 0D23     		mov	r3, #13
 510 00f4 FB18     		add	r3, r7, r3
 511 00f6 1922     		mov	r2, #25
 512 00f8 1A70     		strb	r2, [r3]
 513 00fa 07E0     		b	.L25
 514              	.L24:
 746:Generated_Source\PSoC4/CyLib.c ****             }
 747:Generated_Source\PSoC4/CyLib.c ****             else
 748:Generated_Source\PSoC4/CyLib.c ****             {
 749:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 515              		.loc 1 749 0
 516 00fc 374B     		ldr	r3, .L29+60
 517 00fe 1B68     		ldr	r3, [r3]
 518 0100 DAB2     		uxtb	r2, r3
 519 0102 0D23     		mov	r3, #13
 520 0104 FB18     		add	r3, r7, r3
 521 0106 3F21     		mov	r1, #63
 522 0108 0A40     		and	r2, r1
 523 010a 1A70     		strb	r2, [r3]
 524              	.L25:
 750:Generated_Source\PSoC4/CyLib.c ****             }
 751:Generated_Source\PSoC4/CyLib.c **** 
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 754:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 755:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 756:Generated_Source\PSoC4/CyLib.c ****             *
 757:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 758:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 759:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 760:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 761:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 525              		.loc 1 761 0
 526 010c 0B23     		mov	r3, #11
 527 010e FA18     		add	r2, r7, r3
 528 0110 0D23     		mov	r3, #13
 529 0112 FB18     		add	r3, r7, r3
 530 0114 1278     		ldrb	r2, [r2]
 531 0116 1B78     		ldrb	r3, [r3]
 532 0118 9A42     		cmp	r2, r3
 533 011a 08D2     		bcs	.L26
 762:Generated_Source\PSoC4/CyLib.c ****             {
 763:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 764:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 534              		.loc 1 764 0
 535 011c 2F4B     		ldr	r3, .L29+60
 536 011e 7A68     		ldr	r2, [r7, #4]
 537 0120 033A     		sub	r2, r2, #3
 538 0122 2D49     		ldr	r1, .L29+56
 539 0124 8A5C     		ldrb	r2, [r1, r2]
 540 0126 1A60     		str	r2, [r3]
 765:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 24


 541              		.loc 1 765 0
 542 0128 0520     		mov	r0, #5
 543 012a FFF7FEFF 		bl	CyDelayCycles
 544              	.L26:
 766:Generated_Source\PSoC4/CyLib.c ****             }
 767:Generated_Source\PSoC4/CyLib.c **** 
 768:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 771:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 772:Generated_Source\PSoC4/CyLib.c ****                 {
 773:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 774:Generated_Source\PSoC4/CyLib.c ****                 }
 775:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 776:Generated_Source\PSoC4/CyLib.c ****                 {
 777:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 778:Generated_Source\PSoC4/CyLib.c ****                 }
 779:Generated_Source\PSoC4/CyLib.c ****                 else
 780:Generated_Source\PSoC4/CyLib.c ****                 {
 781:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 782:Generated_Source\PSoC4/CyLib.c ****                 }
 783:Generated_Source\PSoC4/CyLib.c ****             #else
 784:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 545              		.loc 1 784 0
 546 012e 7B68     		ldr	r3, [r7, #4]
 547 0130 284A     		ldr	r2, .L29+52
 548 0132 9A18     		add	r2, r3, r2
 549 0134 0A23     		mov	r3, #10
 550 0136 FB18     		add	r3, r7, r3
 551 0138 1278     		ldrb	r2, [r2]
 552 013a 1A70     		strb	r2, [r3]
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:Generated_Source\PSoC4/CyLib.c **** 
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 553              		.loc 1 788 0
 554 013c 284B     		ldr	r3, .L29+64
 555 013e 0A22     		mov	r2, #10
 556 0140 BA18     		add	r2, r7, r2
 557 0142 1278     		ldrb	r2, [r2]
 558 0144 1A60     		str	r2, [r3]
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 559              		.loc 1 789 0
 560 0146 274B     		ldr	r3, .L29+68
 561 0148 0F22     		mov	r2, #15
 562 014a BA18     		add	r2, r7, r2
 563 014c 1278     		ldrb	r2, [r2]
 564 014e 1A60     		str	r2, [r3]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 565              		.loc 1 790 0
 566 0150 254B     		ldr	r3, .L29+72
 567 0152 0E22     		mov	r2, #14
 568 0154 BA18     		add	r2, r7, r2
 569 0156 1278     		ldrb	r2, [r2]
 570 0158 1A60     		str	r2, [r3]
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 571              		.loc 1 791 0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 25


 572 015a 0520     		mov	r0, #5
 573 015c FFF7FEFF 		bl	CyDelayUs
 792:Generated_Source\PSoC4/CyLib.c **** 
 793:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 574              		.loc 1 793 0
 575 0160 0B23     		mov	r3, #11
 576 0162 FA18     		add	r2, r7, r3
 577 0164 0D23     		mov	r3, #13
 578 0166 FB18     		add	r3, r7, r3
 579 0168 1278     		ldrb	r2, [r2]
 580 016a 1B78     		ldrb	r3, [r3]
 581 016c 9A42     		cmp	r2, r3
 582 016e 09D9     		bls	.L27
 794:Generated_Source\PSoC4/CyLib.c ****             {
 795:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 796:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 583              		.loc 1 796 0
 584 0170 1A4B     		ldr	r3, .L29+60
 585 0172 7A68     		ldr	r2, [r7, #4]
 586 0174 033A     		sub	r2, r2, #3
 587 0176 1849     		ldr	r1, .L29+56
 588 0178 8A5C     		ldrb	r2, [r1, r2]
 589 017a 1A60     		str	r2, [r3]
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 590              		.loc 1 797 0
 591 017c 0520     		mov	r0, #5
 592 017e FFF7FEFF 		bl	CyDelayCycles
 793:Generated_Source\PSoC4/CyLib.c ****             {
 593              		.loc 1 793 0
 594 0182 03E0     		b	.L28
 595              	.L27:
 596 0184 02E0     		b	.L28
 597              	.L18:
 798:Generated_Source\PSoC4/CyLib.c ****             }
 799:Generated_Source\PSoC4/CyLib.c ****         }
 800:Generated_Source\PSoC4/CyLib.c ****         else
 801:Generated_Source\PSoC4/CyLib.c ****         {
 802:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 803:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 598              		.loc 1 803 0 discriminator 1
 599 0186 0020     		mov	r0, #0
 600 0188 FFF7FEFF 		bl	CyHalt
 601              	.L28:
 804:Generated_Source\PSoC4/CyLib.c ****         }
 805:Generated_Source\PSoC4/CyLib.c **** 
 806:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 809:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 810:Generated_Source\PSoC4/CyLib.c ****             {
 811:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 812:Generated_Source\PSoC4/CyLib.c ****             }
 813:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 814:Generated_Source\PSoC4/CyLib.c **** 
 815:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 816:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 817:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 26


 818:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 819:Generated_Source\PSoC4/CyLib.c ****             }
 820:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 821:Generated_Source\PSoC4/CyLib.c **** 
 822:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 602              		.loc 1 822 0
 603 018c 0C23     		mov	r3, #12
 604 018e FB18     		add	r3, r7, r3
 605 0190 1B78     		ldrb	r3, [r3]
 606 0192 181C     		mov	r0, r3
 607 0194 FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/CyLib.c ****     }
 608              		.loc 1 823 0
 609 0198 BD46     		mov	sp, r7
 610 019a 05B0     		add	sp, sp, #20
 611              		@ sp needed
 612 019c 90BD     		pop	{r4, r7, pc}
 613              	.L30:
 614 019e C046     		.align	2
 615              	.L29:
 616 01a0 40F3FF0F 		.word	268432192
 617 01a4 41F3FF0F 		.word	268432193
 618 01a8 42F3FF0F 		.word	268432194
 619 01ac 43F3FF0F 		.word	268432195
 620 01b0 44F3FF0F 		.word	268432196
 621 01b4 45F3FF0F 		.word	268432197
 622 01b8 46F3FF0F 		.word	268432198
 623 01bc 47F3FF0F 		.word	268432199
 624 01c0 48F3FF0F 		.word	268432200
 625 01c4 49F3FF0F 		.word	268432201
 626 01c8 4AF3FF0F 		.word	268432202
 627 01cc 4BF3FF0F 		.word	268432203
 628 01d0 4CF3FF0F 		.word	268432204
 629 01d4 4DF3FF0F 		.word	268432205
 630 01d8 00000000 		.word	cyImoFreqMhz2Reg
 631 01dc 2CFF0B40 		.word	1074528044
 632 01e0 28FF0B40 		.word	1074528040
 633 01e4 1CFF0B40 		.word	1074528028
 634 01e8 20FF0B40 		.word	1074528032
 635              		.cfi_endproc
 636              	.LFE7:
 637              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 638              		.section	.text.CySysClkEcoStart,"ax",%progbits
 639              		.align	2
 640              		.global	CySysClkEcoStart
 641              		.code	16
 642              		.thumb_func
 643              		.type	CySysClkEcoStart, %function
 644              	CySysClkEcoStart:
 645              	.LFB8:
 824:Generated_Source\PSoC4/CyLib.c **** 
 825:Generated_Source\PSoC4/CyLib.c **** #else
 826:Generated_Source\PSoC4/CyLib.c **** 
 827:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 828:Generated_Source\PSoC4/CyLib.c ****     {
 829:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 830:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 27


 831:Generated_Source\PSoC4/CyLib.c ****         if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 832:Generated_Source\PSoC4/CyLib.c ****         {
 833:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 834:Generated_Source\PSoC4/CyLib.c **** 
 835:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 836:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 837:Generated_Source\PSoC4/CyLib.c **** 
 838:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 839:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (CY_SYS_CLK_IMO_TRIM1_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM1_
 840:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM1_
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 843:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 844:Generated_Source\PSoC4/CyLib.c **** 
 845:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 846:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 847:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 848:Generated_Source\PSoC4/CyLib.c **** 
 849:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 852:Generated_Source\PSoC4/CyLib.c ****             {
 853:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 854:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 855:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 856:Generated_Source\PSoC4/CyLib.c **** 
 857:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 858:Generated_Source\PSoC4/CyLib.c **** 
 859:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 860:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 861:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 862:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 863:Generated_Source\PSoC4/CyLib.c ****             }
 864:Generated_Source\PSoC4/CyLib.c **** 
 865:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 866:Generated_Source\PSoC4/CyLib.c ****         }
 867:Generated_Source\PSoC4/CyLib.c ****         else
 868:Generated_Source\PSoC4/CyLib.c ****         {
 869:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 870:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 871:Generated_Source\PSoC4/CyLib.c ****         }
 872:Generated_Source\PSoC4/CyLib.c ****     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 875:Generated_Source\PSoC4/CyLib.c **** 
 876:Generated_Source\PSoC4/CyLib.c **** 
 877:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 878:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 879:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 880:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 881:Generated_Source\PSoC4/CyLib.c ****     *
 882:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 883:Generated_Source\PSoC4/CyLib.c ****     *  Selects the pre-scaler divider value for HFCLK from IMO.
 884:Generated_Source\PSoC4/CyLib.c ****     *
 885:Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK predivider allows the device to divide the HFCLK selection mux
 886:Generated_Source\PSoC4/CyLib.c ****     *  input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 887:Generated_Source\PSoC4/CyLib.c ****     *  powers of 2 between 1 and 8.
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 28


 888:Generated_Source\PSoC4/CyLib.c ****     *
 889:Generated_Source\PSoC4/CyLib.c ****     *  Note HFCLK's frequency cannot exceed 16 MHz. This API is applicable for
 890:Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4000 family of devices only.
 891:Generated_Source\PSoC4/CyLib.c ****     *
 892:Generated_Source\PSoC4/CyLib.c ****     *
 893:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 894:Generated_Source\PSoC4/CyLib.c ****     *  divider: HF clock divider value
 895:Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 896:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 897:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 898:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 899:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 900:Generated_Source\PSoC4/CyLib.c ****     *
 901:Generated_Source\PSoC4/CyLib.c ****     * Return:
 902:Generated_Source\PSoC4/CyLib.c ****     *  None
 903:Generated_Source\PSoC4/CyLib.c ****     *
 904:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 905:Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 906:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 907:Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 908:Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 909:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 910:Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 911:Generated_Source\PSoC4/CyLib.c ****     *
 912:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 913:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 914:Generated_Source\PSoC4/CyLib.c ****     {
 915:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 916:Generated_Source\PSoC4/CyLib.c **** 
 917:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 920:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 921:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 922:Generated_Source\PSoC4/CyLib.c **** 
 923:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 924:Generated_Source\PSoC4/CyLib.c ****     }
 925:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c **** 
 928:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 929:Generated_Source\PSoC4/CyLib.c **** 
 930:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 931:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 932:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 933:Generated_Source\PSoC4/CyLib.c ****     *
 934:Generated_Source\PSoC4/CyLib.c ****     * Summary:
 935:Generated_Source\PSoC4/CyLib.c ****     *  Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 936:Generated_Source\PSoC4/CyLib.c ****     *  for the ECO startup time.
 937:Generated_Source\PSoC4/CyLib.c ****     *
 938:Generated_Source\PSoC4/CyLib.c ****     *  The timeout interval is measured based on the system frequency defined by
 939:Generated_Source\PSoC4/CyLib.c ****     *  PSoC Creator at build time. If System clock frequency is changed in
 940:Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
 941:Generated_Source\PSoC4/CyLib.c ****     *
 942:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 943:Generated_Source\PSoC4/CyLib.c ****     *  timeoutUs: Timeout in microseconds. If zero is specified, the function
 944:Generated_Source\PSoC4/CyLib.c ****     *             starts the crystal and returns CYRET_SUCCESS. If non-zero
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 29


 945:Generated_Source\PSoC4/CyLib.c ****     *             value is passed, the CYRET_SUCCESS is returned once crystal
 946:Generated_Source\PSoC4/CyLib.c ****     *             is oscillating and amplitude reached 60% and it does not mean
 947:Generated_Source\PSoC4/CyLib.c ****     *             24 MHz crystal is within 50 ppm. If it is not oscillating or
 948:Generated_Source\PSoC4/CyLib.c ****     *             amplitude didn't reach 60% after specified amount of time, the
 949:Generated_Source\PSoC4/CyLib.c ****     *             CYRET_TIMEOUT is returned.
 950:Generated_Source\PSoC4/CyLib.c ****     *
 951:Generated_Source\PSoC4/CyLib.c ****     * Return:
 952:Generated_Source\PSoC4/CyLib.c ****     *   CYRET_SUCCESS - Completed successfully. The ECO is oscillating and amplitude
 953:Generated_Source\PSoC4/CyLib.c ****     *                   reached 60% and it does not mean 24 MHz crystal is within
 954:Generated_Source\PSoC4/CyLib.c ****     *                   50 ppm.
 955:Generated_Source\PSoC4/CyLib.c ****     *   CYRET_TIMEOUT - Timeout occurred.
 956:Generated_Source\PSoC4/CyLib.c ****     *
 957:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 958:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 959:Generated_Source\PSoC4/CyLib.c ****     {
 646              		.loc 1 959 0
 647              		.cfi_startproc
 648 0000 80B5     		push	{r7, lr}
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 7, -8
 651              		.cfi_offset 14, -4
 652 0002 84B0     		sub	sp, sp, #16
 653              		.cfi_def_cfa_offset 24
 654 0004 00AF     		add	r7, sp, #0
 655              		.cfi_def_cfa_register 7
 656 0006 7860     		str	r0, [r7, #4]
 960:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 657              		.loc 1 960 0
 658 0008 0023     		mov	r3, #0
 659 000a FB60     		str	r3, [r7, #12]
 961:Generated_Source\PSoC4/CyLib.c **** 
 962:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 963:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 964:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 660              		.loc 1 964 0
 661 000c 154B     		ldr	r3, .L37
 662 000e 154A     		ldr	r2, .L37
 663 0010 1268     		ldr	r2, [r2]
 664 0012 0121     		mov	r1, #1
 665 0014 0A43     		orr	r2, r1
 666 0016 1A60     		str	r2, [r3]
 965:Generated_Source\PSoC4/CyLib.c **** 
 966:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 967:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 667              		.loc 1 967 0
 668 0018 134B     		ldr	r3, .L37+4
 669 001a 144A     		ldr	r2, .L37+8
 670 001c 1A60     		str	r2, [r3]
 968:Generated_Source\PSoC4/CyLib.c **** 
 969:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 970:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 671              		.loc 1 970 0
 672 001e 144B     		ldr	r3, .L37+12
 673 0020 134A     		ldr	r2, .L37+12
 674 0022 1268     		ldr	r2, [r2]
 675 0024 8021     		mov	r1, #128
 676 0026 0902     		lsl	r1, r1, #8
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 30


 677 0028 0A43     		orr	r2, r1
 678 002a 1A60     		str	r2, [r3]
 971:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 972:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 973:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 974:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 975:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 976:Generated_Source\PSoC4/CyLib.c **** 
 977:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 679              		.loc 1 977 0
 680 002c 7B68     		ldr	r3, [r7, #4]
 681 002e 002B     		cmp	r3, #0
 682 0030 12D0     		beq	.L32
 978:Generated_Source\PSoC4/CyLib.c ****         {
 979:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 683              		.loc 1 979 0
 684 0032 1023     		mov	r3, #16
 685 0034 FB60     		str	r3, [r7, #12]
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 686              		.loc 1 981 0
 687 0036 0CE0     		b	.L33
 688              	.L35:
 982:Generated_Source\PSoC4/CyLib.c ****             {
 983:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 689              		.loc 1 983 0
 690 0038 0120     		mov	r0, #1
 691 003a FFF7FEFF 		bl	CyDelayUs
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 692              		.loc 1 985 0
 693 003e FFF7FEFF 		bl	CySysClkEcoReadStatus
 694 0042 031E     		sub	r3, r0, #0
 695 0044 02D0     		beq	.L34
 986:Generated_Source\PSoC4/CyLib.c ****                 {
 987:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 696              		.loc 1 987 0
 697 0046 0023     		mov	r3, #0
 698 0048 FB60     		str	r3, [r7, #12]
 988:Generated_Source\PSoC4/CyLib.c ****                     break;
 699              		.loc 1 988 0
 700 004a 05E0     		b	.L32
 701              	.L34:
 981:Generated_Source\PSoC4/CyLib.c ****             {
 702              		.loc 1 981 0
 703 004c 7B68     		ldr	r3, [r7, #4]
 704 004e 013B     		sub	r3, r3, #1
 705 0050 7B60     		str	r3, [r7, #4]
 706              	.L33:
 981:Generated_Source\PSoC4/CyLib.c ****             {
 707              		.loc 1 981 0 is_stmt 0 discriminator 1
 708 0052 7B68     		ldr	r3, [r7, #4]
 709 0054 002B     		cmp	r3, #0
 710 0056 EFD1     		bne	.L35
 711              	.L32:
 989:Generated_Source\PSoC4/CyLib.c ****                 }
 990:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 31


 991:Generated_Source\PSoC4/CyLib.c **** 
 992:Generated_Source\PSoC4/CyLib.c ****         }
 993:Generated_Source\PSoC4/CyLib.c **** 
 994:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 712              		.loc 1 994 0 is_stmt 1
 713 0058 FB68     		ldr	r3, [r7, #12]
 995:Generated_Source\PSoC4/CyLib.c ****     }
 714              		.loc 1 995 0
 715 005a 181C     		mov	r0, r3
 716 005c BD46     		mov	sp, r7
 717 005e 04B0     		add	sp, sp, #16
 718              		@ sp needed
 719 0060 80BD     		pop	{r7, pc}
 720              	.L38:
 721 0062 C046     		.align	2
 722              	.L37:
 723 0064 60F02E40 		.word	1076818016
 724 0068 78002E40 		.word	1076756600
 725 006c 02200000 		.word	8194
 726 0070 10002E40 		.word	1076756496
 727              		.cfi_endproc
 728              	.LFE8:
 729              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 730              		.section	.text.CySysClkEcoStop,"ax",%progbits
 731              		.align	2
 732              		.global	CySysClkEcoStop
 733              		.code	16
 734              		.thumb_func
 735              		.type	CySysClkEcoStop, %function
 736              	CySysClkEcoStop:
 737              	.LFB9:
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1000:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1003:Generated_Source\PSoC4/CyLib.c ****     *  Stops the megahertz crystal.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1006:Generated_Source\PSoC4/CyLib.c ****     *  None
1007:Generated_Source\PSoC4/CyLib.c ****     *
1008:Generated_Source\PSoC4/CyLib.c ****     * Return:
1009:Generated_Source\PSoC4/CyLib.c ****     *  None
1010:Generated_Source\PSoC4/CyLib.c ****     *
1011:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1012:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1013:Generated_Source\PSoC4/CyLib.c ****     {
 738              		.loc 1 1013 0
 739              		.cfi_startproc
 740 0000 80B5     		push	{r7, lr}
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 7, -8
 743              		.cfi_offset 14, -4
 744 0002 00AF     		add	r7, sp, #0
 745              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 32


1014:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1015:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1016:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 746              		.loc 1 1016 0
 747 0004 064B     		ldr	r3, .L40
 748 0006 064A     		ldr	r2, .L40
 749 0008 1268     		ldr	r2, [r2]
 750 000a 0121     		mov	r1, #1
 751 000c 8A43     		bic	r2, r1
 752 000e 1A60     		str	r2, [r3]
1017:Generated_Source\PSoC4/CyLib.c **** 
1018:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1019:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 753              		.loc 1 1019 0
 754 0010 044B     		ldr	r3, .L40+4
 755 0012 044A     		ldr	r2, .L40+4
 756 0014 1268     		ldr	r2, [r2]
 757 0016 0449     		ldr	r1, .L40+8
 758 0018 0A40     		and	r2, r1
 759 001a 1A60     		str	r2, [r3]
1020:Generated_Source\PSoC4/CyLib.c ****         #else
1021:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1022:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1023:Generated_Source\PSoC4/CyLib.c ****     }
 760              		.loc 1 1023 0
 761 001c BD46     		mov	sp, r7
 762              		@ sp needed
 763 001e 80BD     		pop	{r7, pc}
 764              	.L41:
 765              		.align	2
 766              	.L40:
 767 0020 60F02E40 		.word	1076818016
 768 0024 10002E40 		.word	1076756496
 769 0028 FF7FFFFF 		.word	-32769
 770              		.cfi_endproc
 771              	.LFE9:
 772              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 773              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 774              		.align	2
 775              		.global	CySysClkEcoReadStatus
 776              		.code	16
 777              		.thumb_func
 778              		.type	CySysClkEcoReadStatus, %function
 779              	CySysClkEcoReadStatus:
 780              	.LFB10:
1024:Generated_Source\PSoC4/CyLib.c **** 
1025:Generated_Source\PSoC4/CyLib.c **** 
1026:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1027:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1028:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1029:Generated_Source\PSoC4/CyLib.c ****     *
1030:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1031:Generated_Source\PSoC4/CyLib.c ****     *  Reads the status bit for the megahertz crystal.
1032:Generated_Source\PSoC4/CyLib.c ****     *
1033:Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4100 BLE/PSoC 4200 BLE devices, the status bit is the XO_AMP_DETECT
1034:Generated_Source\PSoC4/CyLib.c ****     *  bit in FSM register.
1035:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 33


1036:Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1037:Generated_Source\PSoC4/CyLib.c ****     *  ECO_STATUS register.
1038:Generated_Source\PSoC4/CyLib.c ****     *
1039:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1040:Generated_Source\PSoC4/CyLib.c ****     *  None
1041:Generated_Source\PSoC4/CyLib.c ****     *
1042:Generated_Source\PSoC4/CyLib.c ****     * Return:
1043:Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4100 BLE/PSoC 4200 BLE:
1044:Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that ECO output reached 50 ppm and is oscillating in valid
1045:Generated_Source\PSoC4/CyLib.c ****     *  range.
1046:Generated_Source\PSoC4/CyLib.c ****     *
1047:Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4200L:
1048:Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that ECO is running.
1049:Generated_Source\PSoC4/CyLib.c ****     *
1050:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1051:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1052:Generated_Source\PSoC4/CyLib.c ****     {
 781              		.loc 1 1052 0
 782              		.cfi_startproc
 783 0000 80B5     		push	{r7, lr}
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 7, -8
 786              		.cfi_offset 14, -4
 787 0002 82B0     		sub	sp, sp, #8
 788              		.cfi_def_cfa_offset 16
 789 0004 00AF     		add	r7, sp, #0
 790              		.cfi_def_cfa_register 7
1053:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1054:Generated_Source\PSoC4/CyLib.c **** 
1055:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1056:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 791              		.loc 1 1056 0
 792 0006 054B     		ldr	r3, .L44
 793 0008 1B68     		ldr	r3, [r3]
 794 000a 0122     		mov	r2, #1
 795 000c 1340     		and	r3, r2
 796 000e 7B60     		str	r3, [r7, #4]
1057:Generated_Source\PSoC4/CyLib.c ****         #else
1058:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1059:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1060:Generated_Source\PSoC4/CyLib.c **** 
1061:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 797              		.loc 1 1061 0
 798 0010 7B68     		ldr	r3, [r7, #4]
1062:Generated_Source\PSoC4/CyLib.c ****     }
 799              		.loc 1 1062 0
 800 0012 181C     		mov	r0, r3
 801 0014 BD46     		mov	sp, r7
 802 0016 02B0     		add	sp, sp, #8
 803              		@ sp needed
 804 0018 80BD     		pop	{r7, pc}
 805              	.L45:
 806 001a C046     		.align	2
 807              	.L44:
 808 001c 0C002E40 		.word	1076756492
 809              		.cfi_endproc
 810              	.LFE10:
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 34


 811              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 812              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 813              		.align	2
 814              		.global	CySysClkWriteEcoDiv
 815              		.code	16
 816              		.thumb_func
 817              		.type	CySysClkWriteEcoDiv, %function
 818              	CySysClkWriteEcoDiv:
 819              	.LFB11:
1063:Generated_Source\PSoC4/CyLib.c **** 
1064:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1065:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1066:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1067:Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1068:Generated_Source\PSoC4/CyLib.c ****         *
1069:Generated_Source\PSoC4/CyLib.c ****         * Summary:
1070:Generated_Source\PSoC4/CyLib.c ****         *  Selects value for the ECO divider.
1071:Generated_Source\PSoC4/CyLib.c ****         *
1072:Generated_Source\PSoC4/CyLib.c ****         *  The ECO must not be the HFCLK clock source when this function is called.
1073:Generated_Source\PSoC4/CyLib.c ****         *  The HFCLK source can be changed to the other clock source by call to the
1074:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1075:Generated_Source\PSoC4/CyLib.c ****         *  function will not have any effect if compiler in release mode, and halt the
1076:Generated_Source\PSoC4/CyLib.c ****         *  CPU when compiler in debug mode.
1077:Generated_Source\PSoC4/CyLib.c ****         *
1078:Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1079:Generated_Source\PSoC4/CyLib.c ****         *  divider: Power of 2 divider selection.
1080:Generated_Source\PSoC4/CyLib.c ****         *
1081:Generated_Source\PSoC4/CyLib.c ****         *   Define                        Description
1082:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV1             HFCLK = ECO / 1
1083:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV2             HFCLK = ECO / 2
1084:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV4             HFCLK = ECO / 4
1085:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV8             HFCLK = ECO / 8
1086:Generated_Source\PSoC4/CyLib.c ****         *
1087:Generated_Source\PSoC4/CyLib.c ****         * Return:
1088:Generated_Source\PSoC4/CyLib.c ****         *  None
1089:Generated_Source\PSoC4/CyLib.c ****         *
1090:Generated_Source\PSoC4/CyLib.c ****         * Side Effects:
1091:Generated_Source\PSoC4/CyLib.c ****         *  If the SYSCLK clock frequency increases during the device operation, call
1092:Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1093:Generated_Source\PSoC4/CyLib.c ****         *  of clock cycles the cache will wait before sampling data comes back from
1094:Generated_Source\PSoC4/CyLib.c ****         *  Flash. If the SYSCLK clock frequency decreases, you can call
1095:Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() to improve the CPU performance. See
1096:Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() description for more information.
1097:Generated_Source\PSoC4/CyLib.c ****         *
1098:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1099:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1100:Generated_Source\PSoC4/CyLib.c ****         {
 820              		.loc 1 1100 0
 821              		.cfi_startproc
 822 0000 90B5     		push	{r4, r7, lr}
 823              		.cfi_def_cfa_offset 12
 824              		.cfi_offset 4, -12
 825              		.cfi_offset 7, -8
 826              		.cfi_offset 14, -4
 827 0002 85B0     		sub	sp, sp, #20
 828              		.cfi_def_cfa_offset 32
 829 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 35


 830              		.cfi_def_cfa_register 7
 831 0006 7860     		str	r0, [r7, #4]
1101:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1102:Generated_Source\PSoC4/CyLib.c **** 
1103:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
 832              		.loc 1 1103 0
 833 0008 114B     		ldr	r3, .L49
 834 000a 1B68     		ldr	r3, [r3]
 835 000c 0722     		mov	r2, #7
 836 000e 1340     		and	r3, r2
 837 0010 022B     		cmp	r3, #2
 838 0012 16D0     		beq	.L47
1104:Generated_Source\PSoC4/CyLib.c ****             {
1105:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
 839              		.loc 1 1105 0
 840 0014 0F23     		mov	r3, #15
 841 0016 FC18     		add	r4, r7, r3
 842 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 843 001c 031C     		mov	r3, r0
 844 001e 2370     		strb	r3, [r4]
1106:Generated_Source\PSoC4/CyLib.c **** 
1107:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 845              		.loc 1 1107 0
 846 0020 0C4B     		ldr	r3, .L49+4
 847 0022 7A68     		ldr	r2, [r7, #4]
 848 0024 0321     		mov	r1, #3
 849 0026 1140     		and	r1, r2
1108:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 850              		.loc 1 1108 0
 851 0028 0A4A     		ldr	r2, .L49+4
 852 002a 1268     		ldr	r2, [r2]
 853 002c 0320     		mov	r0, #3
 854 002e 8243     		bic	r2, r0
1107:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 855              		.loc 1 1107 0
 856 0030 0A43     		orr	r2, r1
 857 0032 1A60     		str	r2, [r3]
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 858              		.loc 1 1110 0
 859 0034 0F23     		mov	r3, #15
 860 0036 FB18     		add	r3, r7, r3
 861 0038 1B78     		ldrb	r3, [r3]
 862 003a 181C     		mov	r0, r3
 863 003c FFF7FEFF 		bl	CyExitCriticalSection
 864 0040 02E0     		b	.L46
 865              	.L47:
1111:Generated_Source\PSoC4/CyLib.c ****             }
1112:Generated_Source\PSoC4/CyLib.c ****             else
1113:Generated_Source\PSoC4/CyLib.c ****             {
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1115:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
 866              		.loc 1 1115 0 discriminator 1
 867 0042 0020     		mov	r0, #0
 868 0044 FFF7FEFF 		bl	CyHalt
 869              	.L46:
1116:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 36


1117:Generated_Source\PSoC4/CyLib.c ****         }
 870              		.loc 1 1117 0
 871 0048 BD46     		mov	sp, r7
 872 004a 05B0     		add	sp, sp, #20
 873              		@ sp needed
 874 004c 90BD     		pop	{r4, r7, pc}
 875              	.L50:
 876 004e C046     		.align	2
 877              	.L49:
 878 0050 00010B40 		.word	1074462976
 879 0054 64F02E40 		.word	1076818020
 880              		.cfi_endproc
 881              	.LFE11:
 882              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 883              		.section	.text.CySysLvdEnable,"ax",%progbits
 884              		.align	2
 885              		.global	CySysLvdEnable
 886              		.code	16
 887              		.thumb_func
 888              		.type	CySysLvdEnable, %function
 889              	CySysLvdEnable:
 890              	.LFB12:
1118:Generated_Source\PSoC4/CyLib.c **** 
1119:Generated_Source\PSoC4/CyLib.c ****     #else
1120:Generated_Source\PSoC4/CyLib.c **** 
1121:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1122:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1123:Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1124:Generated_Source\PSoC4/CyLib.c ****         *
1125:Generated_Source\PSoC4/CyLib.c ****         * Summary:
1126:Generated_Source\PSoC4/CyLib.c ****         *  Selects trim setting values for ECO. This API is available only for PSoC
1127:Generated_Source\PSoC4/CyLib.c ****         *  4200L devices only.
1128:Generated_Source\PSoC4/CyLib.c ****         *
1129:Generated_Source\PSoC4/CyLib.c ****         *  The following parameters can be trimmed for ECO. The affected registers are
1130:Generated_Source\PSoC4/CyLib.c ****         *  ECO_TRIM0 and ECO_TRIM1.
1131:Generated_Source\PSoC4/CyLib.c ****         *
1132:Generated_Source\PSoC4/CyLib.c ****         *  Watchdog trim - This bit field sets the error threshold below the steady
1133:Generated_Source\PSoC4/CyLib.c ****         *  state amplitude level.
1134:Generated_Source\PSoC4/CyLib.c ****         *
1135:Generated_Source\PSoC4/CyLib.c ****         *  Amplitude trim - This bit field is to set the crystal drive level when
1136:Generated_Source\PSoC4/CyLib.c ****         *  ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1137:Generated_Source\PSoC4/CyLib.c ****         *  driving a crystal beyond its rated limit can permanently damage the crystal.
1138:Generated_Source\PSoC4/CyLib.c ****         *
1139:Generated_Source\PSoC4/CyLib.c ****         *  Filter frequency trim - This bit field sets LPF frequency trim and affects
1140:Generated_Source\PSoC4/CyLib.c ****         *  the 3rd harmonic content.
1141:Generated_Source\PSoC4/CyLib.c ****         *
1142:Generated_Source\PSoC4/CyLib.c ****         *  Feedback resistor trim - This bit field sets the feedback resistor trim and
1143:Generated_Source\PSoC4/CyLib.c ****         *  impacts the oscillation amplitude.
1144:Generated_Source\PSoC4/CyLib.c ****         *
1145:Generated_Source\PSoC4/CyLib.c ****         *  Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1146:Generated_Source\PSoC4/CyLib.c ****         *  the startup time of the crystal.
1147:Generated_Source\PSoC4/CyLib.c ****         *
1148:Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1149:Generated_Source\PSoC4/CyLib.c ****         *  wDTrim: Watchdog trim
1150:Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1151:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1152:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 37


1153:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1154:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1155:Generated_Source\PSoC4/CyLib.c ****         *
1156:Generated_Source\PSoC4/CyLib.c ****         *  aTrim: Amplitude trim
1157:Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1158:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1159:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1160:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1161:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1162:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1163:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1164:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1165:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1166:Generated_Source\PSoC4/CyLib.c ****         *
1167:Generated_Source\PSoC4/CyLib.c ****         *  fTrim: Filter frequency trim
1168:Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1169:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:Generated_Source\PSoC4/CyLib.c ****         *
1174:Generated_Source\PSoC4/CyLib.c ****         *  rTrim: Feedback resistor trim
1175:Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1176:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1177:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1178:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1179:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz        *
1180:Generated_Source\PSoC4/CyLib.c ****         *
1181:Generated_Source\PSoC4/CyLib.c ****         *  gTrim: Amplifier gain trim. Calculate the minimum required gm
1182:Generated_Source\PSoC4/CyLib.c ****         *         (trans-conductance value). Divide the calculated gm value by
1183:Generated_Source\PSoC4/CyLib.c ****         *         4.5 to obtain an integer value 'result'. For more information
1184:Generated_Source\PSoC4/CyLib.c ****         *         please refer to the device TRM.
1185:Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1186:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM0       If result = 1
1187:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM1       If result = 0
1188:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM2       If result = 2
1189:Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM2       If result = 3
1190:Generated_Source\PSoC4/CyLib.c **** 
1191:Generated_Source\PSoC4/CyLib.c ****         * Return:
1192:Generated_Source\PSoC4/CyLib.c ****         *  None
1193:Generated_Source\PSoC4/CyLib.c ****         *
1194:Generated_Source\PSoC4/CyLib.c ****         * Side Effects:
1195:Generated_Source\PSoC4/CyLib.c ****         *  Use care when setting the amplitude trim field because driving a crystal
1196:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1197:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1198:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1199:Generated_Source\PSoC4/CyLib.c ****         {
1200:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1201:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1202:Generated_Source\PSoC4/CyLib.c **** 
1203:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1204:Generated_Source\PSoC4/CyLib.c **** 
1205:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1206:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1207:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1208:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1209:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 38


1210:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1211:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1212:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1213:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1214:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1215:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1216:Generated_Source\PSoC4/CyLib.c **** 
1217:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1218:Generated_Source\PSoC4/CyLib.c **** 
1219:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1220:Generated_Source\PSoC4/CyLib.c ****         }
1221:Generated_Source\PSoC4/CyLib.c **** 
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1224:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1225:Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1226:Generated_Source\PSoC4/CyLib.c ****         *
1227:Generated_Source\PSoC4/CyLib.c ****         * Summary:
1228:Generated_Source\PSoC4/CyLib.c ****         *  Selects trim setting values for ECO based on crystal parameters. Use care
1229:Generated_Source\PSoC4/CyLib.c ****         *  when setting the driveLevel parameter because driving a crystal beyond its
1230:Generated_Source\PSoC4/CyLib.c ****         *  rated limit can permanently damage the crystal.
1231:Generated_Source\PSoC4/CyLib.c ****         *
1232:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4200L devices only.
1233:Generated_Source\PSoC4/CyLib.c ****         *
1234:Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1235:Generated_Source\PSoC4/CyLib.c ****         *  freq: frequency of the crystal in kHz.
1236:Generated_Source\PSoC4/CyLib.c ****         *  cLoad: crystal load capacitance in pF.
1237:Generated_Source\PSoC4/CyLib.c ****         *  esr: equivalent series resistance of the crystal in ohm.
1238:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1239:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1240:Generated_Source\PSoC4/CyLib.c ****         *
1241:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1242:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1243:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1244:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1245:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1246:Generated_Source\PSoC4/CyLib.c ****         *
1247:Generated_Source\PSoC4/CyLib.c ****         * Return:
1248:Generated_Source\PSoC4/CyLib.c ****         *  status:
1249:Generated_Source\PSoC4/CyLib.c ****         *  CYRET_SUCCESS - ECO configuration completed successfully.
1250:Generated_Source\PSoC4/CyLib.c ****         *  CYRET_BAD_PARAM - One or more invalid parameters
1251:Generated_Source\PSoC4/CyLib.c ****         *
1252:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1253:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1254:Generated_Source\PSoC4/CyLib.c ****         {
1255:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1256:Generated_Source\PSoC4/CyLib.c **** 
1257:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1258:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1259:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1260:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1261:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1262:Generated_Source\PSoC4/CyLib.c **** 
1263:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c **** 
1266:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 39


1267:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1268:Generated_Source\PSoC4/CyLib.c ****             {
1269:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1270:Generated_Source\PSoC4/CyLib.c ****             }
1271:Generated_Source\PSoC4/CyLib.c ****             else
1272:Generated_Source\PSoC4/CyLib.c ****             {
1273:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1274:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1275:Generated_Source\PSoC4/CyLib.c **** 
1276:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1277:Generated_Source\PSoC4/CyLib.c ****                 {
1278:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1279:Generated_Source\PSoC4/CyLib.c ****                 }
1280:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1281:Generated_Source\PSoC4/CyLib.c ****                 {
1282:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1283:Generated_Source\PSoC4/CyLib.c ****                 }
1284:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1285:Generated_Source\PSoC4/CyLib.c ****                 {
1286:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1287:Generated_Source\PSoC4/CyLib.c ****                 }
1288:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1289:Generated_Source\PSoC4/CyLib.c ****                 {
1290:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1291:Generated_Source\PSoC4/CyLib.c ****                 }
1292:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1293:Generated_Source\PSoC4/CyLib.c ****                 {
1294:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1295:Generated_Source\PSoC4/CyLib.c ****                 }
1296:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1297:Generated_Source\PSoC4/CyLib.c ****                 {
1298:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1299:Generated_Source\PSoC4/CyLib.c ****                 }
1300:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1301:Generated_Source\PSoC4/CyLib.c ****                 {
1302:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1303:Generated_Source\PSoC4/CyLib.c ****                 }
1304:Generated_Source\PSoC4/CyLib.c ****                 else
1305:Generated_Source\PSoC4/CyLib.c ****                 {
1306:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1307:Generated_Source\PSoC4/CyLib.c ****                 }
1308:Generated_Source\PSoC4/CyLib.c **** 
1309:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1310:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1311:Generated_Source\PSoC4/CyLib.c **** 
1312:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1313:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1314:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1315:Generated_Source\PSoC4/CyLib.c ****                 {
1316:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1317:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1318:Generated_Source\PSoC4/CyLib.c ****                 }
1319:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1320:Generated_Source\PSoC4/CyLib.c ****                 {
1321:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1322:Generated_Source\PSoC4/CyLib.c ****                 }
1323:Generated_Source\PSoC4/CyLib.c ****                 else
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 40


1324:Generated_Source\PSoC4/CyLib.c ****                 {
1325:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1326:Generated_Source\PSoC4/CyLib.c ****                 }
1327:Generated_Source\PSoC4/CyLib.c **** 
1328:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1329:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1330:Generated_Source\PSoC4/CyLib.c ****                 {
1331:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1332:Generated_Source\PSoC4/CyLib.c ****                 }
1333:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1334:Generated_Source\PSoC4/CyLib.c ****                 {
1335:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1336:Generated_Source\PSoC4/CyLib.c ****                 }
1337:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1338:Generated_Source\PSoC4/CyLib.c ****                 {
1339:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1340:Generated_Source\PSoC4/CyLib.c ****                 }
1341:Generated_Source\PSoC4/CyLib.c ****                 else
1342:Generated_Source\PSoC4/CyLib.c ****                 {
1343:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1344:Generated_Source\PSoC4/CyLib.c ****                 }
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1347:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1348:Generated_Source\PSoC4/CyLib.c **** 
1349:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1352:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1353:Generated_Source\PSoC4/CyLib.c ****                 {
1354:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1355:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1356:Generated_Source\PSoC4/CyLib.c ****                 }
1357:Generated_Source\PSoC4/CyLib.c ****                 else
1358:Generated_Source\PSoC4/CyLib.c ****                 {
1359:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1360:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1361:Generated_Source\PSoC4/CyLib.c ****                     */
1362:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1363:Generated_Source\PSoC4/CyLib.c ****                 }
1364:Generated_Source\PSoC4/CyLib.c ****             }
1365:Generated_Source\PSoC4/CyLib.c **** 
1366:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1367:Generated_Source\PSoC4/CyLib.c ****         }
1368:Generated_Source\PSoC4/CyLib.c **** 
1369:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1370:Generated_Source\PSoC4/CyLib.c **** 
1371:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1372:Generated_Source\PSoC4/CyLib.c **** 
1373:Generated_Source\PSoC4/CyLib.c **** 
1374:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1377:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1378:Generated_Source\PSoC4/CyLib.c ****     *
1379:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1380:Generated_Source\PSoC4/CyLib.c ****     *  Enables the PLL. Optionally waits for it to become stable. Waits at least
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 41


1381:Generated_Source\PSoC4/CyLib.c ****     *  250 us or until it is detected that the PLL is stable.
1382:Generated_Source\PSoC4/CyLib.c ****     *
1383:Generated_Source\PSoC4/CyLib.c ****     *  Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1384:Generated_Source\PSoC4/CyLib.c ****     *  once the PLL is locked if the wait parameter is 1).
1385:Generated_Source\PSoC4/CyLib.c ****     *
1386:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1387:Generated_Source\PSoC4/CyLib.c ****     *
1388:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1389:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1390:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1391:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1392:Generated_Source\PSoC4/CyLib.c ****     *
1393:Generated_Source\PSoC4/CyLib.c ****     *  wait:
1394:Generated_Source\PSoC4/CyLib.c ****     *  0 - Return immediately after configuration.
1395:Generated_Source\PSoC4/CyLib.c ****     *  1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1396:Generated_Source\PSoC4/CyLib.c ****     *  implement the timeout feature.
1397:Generated_Source\PSoC4/CyLib.c ****     *
1398:Generated_Source\PSoC4/CyLib.c ****     * Return:
1399:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - Completed successfully.
1400:Generated_Source\PSoC4/CyLib.c ****     *
1401:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_TIMEOUT - The timeout occurred without detecting a stable clock.  If the
1402:Generated_Source\PSoC4/CyLib.c ****     *  input source of the clock is jittery, then the lock indication may not occur.
1403:Generated_Source\PSoC4/CyLib.c ****     *  However, after the timeout has expired, the generated PLL clock can still be
1404:Generated_Source\PSoC4/CyLib.c ****     *  used.
1405:Generated_Source\PSoC4/CyLib.c ****     *
1406:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1407:Generated_Source\PSoC4/CyLib.c ****     *
1408:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1409:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1410:Generated_Source\PSoC4/CyLib.c ****     {
1411:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1412:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1413:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1414:Generated_Source\PSoC4/CyLib.c **** 
1415:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1416:Generated_Source\PSoC4/CyLib.c ****         {
1417:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1418:Generated_Source\PSoC4/CyLib.c **** 
1419:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1420:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1421:Generated_Source\PSoC4/CyLib.c **** 
1422:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1423:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1424:Generated_Source\PSoC4/CyLib.c **** 
1425:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1426:Generated_Source\PSoC4/CyLib.c **** 
1427:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1428:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1429:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1430:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1431:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1432:Generated_Source\PSoC4/CyLib.c **** 
1433:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1434:Generated_Source\PSoC4/CyLib.c ****             {
1435:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1436:Generated_Source\PSoC4/CyLib.c **** 
1437:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 42


1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c **** 
1440:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1441:Generated_Source\PSoC4/CyLib.c ****                     {
1442:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1443:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1444:Generated_Source\PSoC4/CyLib.c ****                         break;
1445:Generated_Source\PSoC4/CyLib.c ****                     }
1446:Generated_Source\PSoC4/CyLib.c **** 
1447:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1448:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1449:Generated_Source\PSoC4/CyLib.c ****                 }
1450:Generated_Source\PSoC4/CyLib.c ****             }
1451:Generated_Source\PSoC4/CyLib.c ****         }
1452:Generated_Source\PSoC4/CyLib.c ****         else
1453:Generated_Source\PSoC4/CyLib.c ****         {
1454:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1455:Generated_Source\PSoC4/CyLib.c ****         }
1456:Generated_Source\PSoC4/CyLib.c **** 
1457:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1458:Generated_Source\PSoC4/CyLib.c ****     }
1459:Generated_Source\PSoC4/CyLib.c **** 
1460:Generated_Source\PSoC4/CyLib.c **** 
1461:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1462:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1463:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1464:Generated_Source\PSoC4/CyLib.c ****     *
1465:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1466:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero if the output of the specified PLL output is locked.
1467:Generated_Source\PSoC4/CyLib.c ****     *
1468:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1469:Generated_Source\PSoC4/CyLib.c ****     *
1470:Generated_Source\PSoC4/CyLib.c ****     * Parameters: PLL:
1471:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1472:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1473:Generated_Source\PSoC4/CyLib.c ****     *
1474:Generated_Source\PSoC4/CyLib.c ****     * Return:
1475:Generated_Source\PSoC4/CyLib.c ****     *  A non-zero value when the specified PLL is locked.
1476:Generated_Source\PSoC4/CyLib.c ****     *
1477:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1478:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1479:Generated_Source\PSoC4/CyLib.c ****     {
1480:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1481:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1484:Generated_Source\PSoC4/CyLib.c **** 
1485:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1488:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1489:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1490:Generated_Source\PSoC4/CyLib.c ****         {
1491:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1492:Generated_Source\PSoC4/CyLib.c ****         }
1493:Generated_Source\PSoC4/CyLib.c **** 
1494:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 43


1495:Generated_Source\PSoC4/CyLib.c **** 
1496:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1497:Generated_Source\PSoC4/CyLib.c ****     }
1498:Generated_Source\PSoC4/CyLib.c **** 
1499:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1500:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1501:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1502:Generated_Source\PSoC4/CyLib.c ****     *
1503:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1504:Generated_Source\PSoC4/CyLib.c ****     *  Disables the PLL and isolates its outputs.
1505:Generated_Source\PSoC4/CyLib.c ****     *
1506:Generated_Source\PSoC4/CyLib.c ****     *  Ensures that either PLL is not the source of HFCLK before it is disabled,
1507:Generated_Source\PSoC4/CyLib.c ****     *  otherwise, the CPU will halt.
1508:Generated_Source\PSoC4/CyLib.c ****     *
1509:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1510:Generated_Source\PSoC4/CyLib.c ****     *
1511:Generated_Source\PSoC4/CyLib.c ****     * Parameters: PLL:
1512:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1513:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1514:Generated_Source\PSoC4/CyLib.c ****     *
1515:Generated_Source\PSoC4/CyLib.c ****     * Return:
1516:Generated_Source\PSoC4/CyLib.c ****     *  None
1517:Generated_Source\PSoC4/CyLib.c ****     *
1518:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1519:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1520:Generated_Source\PSoC4/CyLib.c ****     {
1521:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1522:Generated_Source\PSoC4/CyLib.c **** 
1523:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1524:Generated_Source\PSoC4/CyLib.c ****         {
1525:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1526:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1527:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1528:Generated_Source\PSoC4/CyLib.c ****         }
1529:Generated_Source\PSoC4/CyLib.c ****     }
1530:Generated_Source\PSoC4/CyLib.c **** 
1531:Generated_Source\PSoC4/CyLib.c **** 
1532:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1533:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1534:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1535:Generated_Source\PSoC4/CyLib.c ****     *
1536:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1537:Generated_Source\PSoC4/CyLib.c ****     *  Sets feedback (P) and reference the (Q) divider value. This API also sets the
1538:Generated_Source\PSoC4/CyLib.c ****     *  programmable charge pump current value. Note that the PLL has to be disabled
1539:Generated_Source\PSoC4/CyLib.c ****     *  before calling this API. If this function is called while any PLL is sourcing,
1540:Generated_Source\PSoC4/CyLib.c ****     *  the SYSCLK will return an error.
1541:Generated_Source\PSoC4/CyLib.c ****     *
1542:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function. The
1543:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1544:Generated_Source\PSoC4/CyLib.c ****     *
1545:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1546:Generated_Source\PSoC4/CyLib.c ****     *
1547:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1548:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1549:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1550:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1551:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 44


1552:Generated_Source\PSoC4/CyLib.c ****     *  feedback: P divider
1553:Generated_Source\PSoC4/CyLib.c ****     *   Range 4 - 259. Control bits for the feedback divider
1554:Generated_Source\PSoC4/CyLib.c ****     *
1555:Generated_Source\PSoC4/CyLib.c ****     *  reference: The Q divider.
1556:Generated_Source\PSoC4/CyLib.c ****     *   Range 1 - 64. Divide by the reference.
1557:Generated_Source\PSoC4/CyLib.c ****     *
1558:Generated_Source\PSoC4/CyLib.c ****     *  current: Charge the pump current in uA. The 2 uA for output frequencies
1559:Generated_Source\PSoC4/CyLib.c ****     *  of 67 MHz or less, and 3 uA for higher output frequencies. The default
1560:Generated_Source\PSoC4/CyLib.c ****     *  value is 2 uA.
1561:Generated_Source\PSoC4/CyLib.c ****     *
1562:Generated_Source\PSoC4/CyLib.c ****     * Return:
1563:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - Completed successfully.
1564:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The parameters are out of range or the specified PLL sources
1565:Generated_Source\PSoC4/CyLib.c ****     *  the system clock.
1566:Generated_Source\PSoC4/CyLib.c ****     *
1567:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1569:Generated_Source\PSoC4/CyLib.c ****     {
1570:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1571:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1572:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1573:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1574:Generated_Source\PSoC4/CyLib.c **** 
1575:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1576:Generated_Source\PSoC4/CyLib.c **** 
1577:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1580:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1581:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1582:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1583:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1584:Generated_Source\PSoC4/CyLib.c ****         {
1585:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1586:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1587:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1588:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1589:Generated_Source\PSoC4/CyLib.c **** 
1590:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1591:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1592:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1593:Generated_Source\PSoC4/CyLib.c **** 
1594:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1595:Generated_Source\PSoC4/CyLib.c **** 
1596:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1597:Generated_Source\PSoC4/CyLib.c ****         }
1598:Generated_Source\PSoC4/CyLib.c **** 
1599:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1600:Generated_Source\PSoC4/CyLib.c **** 
1601:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1602:Generated_Source\PSoC4/CyLib.c ****     }
1603:Generated_Source\PSoC4/CyLib.c **** 
1604:Generated_Source\PSoC4/CyLib.c **** 
1605:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1606:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1607:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1608:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 45


1609:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1610:Generated_Source\PSoC4/CyLib.c ****     *  Sets the bypass mode for the specified PLL.
1611:Generated_Source\PSoC4/CyLib.c ****     *
1612:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function.
1613:Generated_Source\PSoC4/CyLib.c ****     *  The PLL output will glitch during this function call.
1614:Generated_Source\PSoC4/CyLib.c ****     *
1615:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1616:Generated_Source\PSoC4/CyLib.c ****     *
1617:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1618:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1619:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1620:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1621:Generated_Source\PSoC4/CyLib.c ****     *
1622:Generated_Source\PSoC4/CyLib.c ****     *  bypass: The bypass mode.
1623:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1624:Generated_Source\PSoC4/CyLib.c ****     *   automatically selects PLL the reference input (bypass mode). When locked,
1625:Generated_Source\PSoC4/CyLib.c ****     *   automatically selects the PLL output.
1626:Generated_Source\PSoC4/CyLib.c ****     *
1627:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1628:Generated_Source\PSoC4/CyLib.c ****     *   Ignores the lock indicator.
1629:Generated_Source\PSoC4/CyLib.c ****     *
1630:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1631:Generated_Source\PSoC4/CyLib.c ****     *
1632:Generated_Source\PSoC4/CyLib.c ****     * Return:
1633:Generated_Source\PSoC4/CyLib.c ****     *  None
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1636:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1637:Generated_Source\PSoC4/CyLib.c ****     {
1638:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1639:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1640:Generated_Source\PSoC4/CyLib.c **** 
1641:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1642:Generated_Source\PSoC4/CyLib.c **** 
1643:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1644:Generated_Source\PSoC4/CyLib.c ****         {
1645:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1646:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1647:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1648:Generated_Source\PSoC4/CyLib.c ****         }
1649:Generated_Source\PSoC4/CyLib.c **** 
1650:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1651:Generated_Source\PSoC4/CyLib.c ****     }
1652:Generated_Source\PSoC4/CyLib.c **** 
1653:Generated_Source\PSoC4/CyLib.c **** 
1654:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1655:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1656:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1657:Generated_Source\PSoC4/CyLib.c ****     *
1658:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1659:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1660:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1663:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1664:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1665:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 46


1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     *  Return
1668:Generated_Source\PSoC4/CyLib.c ****     *  bypass: Bypass mode.
1669:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1670:Generated_Source\PSoC4/CyLib.c ****     *
1671:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1672:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1673:Generated_Source\PSoC4/CyLib.c ****     {
1674:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1675:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1676:Generated_Source\PSoC4/CyLib.c **** 
1677:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1678:Generated_Source\PSoC4/CyLib.c **** 
1679:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1682:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1683:Generated_Source\PSoC4/CyLib.c **** 
1684:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1685:Generated_Source\PSoC4/CyLib.c **** 
1686:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1687:Generated_Source\PSoC4/CyLib.c ****     }
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1691:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1692:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1693:Generated_Source\PSoC4/CyLib.c ****     *
1694:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1695:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1696:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1697:Generated_Source\PSoC4/CyLib.c ****     *
1698:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1699:Generated_Source\PSoC4/CyLib.c ****     *
1700:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1701:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1702:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1703:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1704:Generated_Source\PSoC4/CyLib.c ****     *
1705:Generated_Source\PSoC4/CyLib.c ****     * Return:
1706:Generated_Source\PSoC4/CyLib.c ****     *  Non-zero value when the specified PLL sources the System clock and the PLL
1707:Generated_Source\PSoC4/CyLib.c ****     *  is not in the bypass mode.
1708:Generated_Source\PSoC4/CyLib.c ****     *
1709:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1710:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1711:Generated_Source\PSoC4/CyLib.c ****     {
1712:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1713:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1714:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1717:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1718:Generated_Source\PSoC4/CyLib.c **** 
1719:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1720:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1721:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1722:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 47


1723:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1724:Generated_Source\PSoC4/CyLib.c ****         }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1727:Generated_Source\PSoC4/CyLib.c ****     }
1728:Generated_Source\PSoC4/CyLib.c **** 
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1731:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1732:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1733:Generated_Source\PSoC4/CyLib.c ****     *
1734:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1735:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1736:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1737:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1738:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1739:Generated_Source\PSoC4/CyLib.c ****     *
1740:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1743:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * Return:
1748:Generated_Source\PSoC4/CyLib.c ****     *  Non-zero value when the specified PLL was unlocked.
1749:Generated_Source\PSoC4/CyLib.c ****     *
1750:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1751:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1752:Generated_Source\PSoC4/CyLib.c ****     {
1753:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1754:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1755:Generated_Source\PSoC4/CyLib.c **** 
1756:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1757:Generated_Source\PSoC4/CyLib.c **** 
1758:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1759:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1760:Generated_Source\PSoC4/CyLib.c **** 
1761:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1764:Generated_Source\PSoC4/CyLib.c ****     }
1765:Generated_Source\PSoC4/CyLib.c **** 
1766:Generated_Source\PSoC4/CyLib.c **** 
1767:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1768:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1769:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1770:Generated_Source\PSoC4/CyLib.c ****     *
1771:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1772:Generated_Source\PSoC4/CyLib.c ****     *  Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1773:Generated_Source\PSoC4/CyLib.c ****     *  The input frequency is the frequency of the source to the PLL. The source is
1774:Generated_Source\PSoC4/CyLib.c ****     *  set using the CySysClkPllSetSource() function.
1775:Generated_Source\PSoC4/CyLib.c ****     *
1776:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function. The
1777:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1778:Generated_Source\PSoC4/CyLib.c ****     *
1779:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 48


1780:Generated_Source\PSoC4/CyLib.c ****     *
1781:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1782:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1783:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1784:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     *  inputFreq:
1787:Generated_Source\PSoC4/CyLib.c ****     *   The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1788:Generated_Source\PSoC4/CyLib.c ****     *
1789:Generated_Source\PSoC4/CyLib.c ****     *  pllFreq:
1790:Generated_Source\PSoC4/CyLib.c ****     *   The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1791:Generated_Source\PSoC4/CyLib.c ****     *
1792:Generated_Source\PSoC4/CyLib.c ****     * divider:
1793:Generated_Source\PSoC4/CyLib.c ****     *  The output clock divider for the PLL:
1794:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1795:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1796:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1797:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1798:Generated_Source\PSoC4/CyLib.c ****     *
1799:Generated_Source\PSoC4/CyLib.c ****     * freqTol:
1800:Generated_Source\PSoC4/CyLib.c ****     *  The tolerance in ppm, 10 ppm is equal to 0.001%.
1801:Generated_Source\PSoC4/CyLib.c ****     *
1802:Generated_Source\PSoC4/CyLib.c ****     * Return:
1803:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - The PLL was successfully configured for the requested
1804:Generated_Source\PSoC4/CyLib.c ****     *  frequency.
1805:Generated_Source\PSoC4/CyLib.c ****     *
1806:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The PLL was not able to successfully configure for the
1807:Generated_Source\PSoC4/CyLib.c ****     *  requested frequency.
1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1810:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1811:Generated_Source\PSoC4/CyLib.c ****     {
1812:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1813:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1814:Generated_Source\PSoC4/CyLib.c **** 
1815:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1816:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1817:Generated_Source\PSoC4/CyLib.c **** 
1818:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1819:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1822:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1823:Generated_Source\PSoC4/CyLib.c **** 
1824:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1825:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1826:Generated_Source\PSoC4/CyLib.c **** 
1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1829:Generated_Source\PSoC4/CyLib.c **** 
1830:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1831:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1832:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1833:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1834:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1835:Generated_Source\PSoC4/CyLib.c ****         {
1836:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 49


1837:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1838:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1839:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1840:Generated_Source\PSoC4/CyLib.c **** 
1841:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1842:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1843:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1846:Generated_Source\PSoC4/CyLib.c ****             {
1847:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1848:Generated_Source\PSoC4/CyLib.c ****                 {
1849:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1852:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1853:Generated_Source\PSoC4/CyLib.c **** 
1854:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1855:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1856:Generated_Source\PSoC4/CyLib.c **** 
1857:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1858:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1859:Generated_Source\PSoC4/CyLib.c **** 
1860:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1861:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1862:Generated_Source\PSoC4/CyLib.c ****                     {
1863:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1864:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1865:Generated_Source\PSoC4/CyLib.c ****                         break;
1866:Generated_Source\PSoC4/CyLib.c ****                     }
1867:Generated_Source\PSoC4/CyLib.c ****                 }
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1871:Generated_Source\PSoC4/CyLib.c ****                 {
1872:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1873:Generated_Source\PSoC4/CyLib.c ****                     {
1874:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1875:Generated_Source\PSoC4/CyLib.c ****                     }
1876:Generated_Source\PSoC4/CyLib.c ****                 }
1877:Generated_Source\PSoC4/CyLib.c ****             }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c ****         }
1880:Generated_Source\PSoC4/CyLib.c **** 
1881:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1882:Generated_Source\PSoC4/CyLib.c ****     }
1883:Generated_Source\PSoC4/CyLib.c **** 
1884:Generated_Source\PSoC4/CyLib.c **** 
1885:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1886:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1887:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1888:Generated_Source\PSoC4/CyLib.c ****     *
1889:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1890:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must not be the system clock
1891:Generated_Source\PSoC4/CyLib.c ****     *  source when calling this function. The PLL output will glitch during this
1892:Generated_Source\PSoC4/CyLib.c ****     *  function call.
1893:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 50


1894:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1895:Generated_Source\PSoC4/CyLib.c ****     *
1896:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1897:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1898:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1899:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * source:
1902:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1903:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1904:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1905:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1906:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1907:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1908:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     * Return:
1911:Generated_Source\PSoC4/CyLib.c ****     *  None
1912:Generated_Source\PSoC4/CyLib.c ****     *
1913:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1914:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1915:Generated_Source\PSoC4/CyLib.c ****     {
1916:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1917:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1918:Generated_Source\PSoC4/CyLib.c **** 
1919:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1922:Generated_Source\PSoC4/CyLib.c ****         {
1923:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1924:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1925:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1926:Generated_Source\PSoC4/CyLib.c ****         }
1927:Generated_Source\PSoC4/CyLib.c **** 
1928:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1929:Generated_Source\PSoC4/CyLib.c ****     }
1930:Generated_Source\PSoC4/CyLib.c **** 
1931:Generated_Source\PSoC4/CyLib.c **** 
1932:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1933:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1934:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1935:Generated_Source\PSoC4/CyLib.c ****     *
1936:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1937:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1938:Generated_Source\PSoC4/CyLib.c ****     *
1939:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1940:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1943:Generated_Source\PSoC4/CyLib.c ****     *
1944:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1945:Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1946:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1947:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1948:Generated_Source\PSoC4/CyLib.c ****     *
1949:Generated_Source\PSoC4/CyLib.c ****     * divider:
1950:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 51


1951:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1952:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1953:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1954:Generated_Source\PSoC4/CyLib.c ****     *
1955:Generated_Source\PSoC4/CyLib.c ****     * Return:
1956:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS   - Completed successfully.
1957:Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The parameters are out of range or the specified PLL
1958:Generated_Source\PSoC4/CyLib.c ****     *                    sources the System clock.
1959:Generated_Source\PSoC4/CyLib.c ****     *
1960:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1961:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1962:Generated_Source\PSoC4/CyLib.c ****     {
1963:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1964:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1965:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1966:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1967:Generated_Source\PSoC4/CyLib.c **** 
1968:Generated_Source\PSoC4/CyLib.c **** 
1969:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1974:Generated_Source\PSoC4/CyLib.c ****         {
1975:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1976:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1981:Generated_Source\PSoC4/CyLib.c ****         }
1982:Generated_Source\PSoC4/CyLib.c **** 
1983:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1986:Generated_Source\PSoC4/CyLib.c ****     }
1987:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1988:Generated_Source\PSoC4/CyLib.c **** 
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1991:Generated_Source\PSoC4/CyLib.c **** 
1992:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1994:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1995:Generated_Source\PSoC4/CyLib.c ****     *
1996:Generated_Source\PSoC4/CyLib.c ****     * Summary:
1997:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1998:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1999:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2000:Generated_Source\PSoC4/CyLib.c ****     *
2001:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2002:Generated_Source\PSoC4/CyLib.c ****     *  threshold: Threshold selection for Low Voltage Detect circuit.
2003:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2004:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2005:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2006:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2007:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 52


2008:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2009:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2010:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2011:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2012:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2013:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2014:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2015:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2016:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2017:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2018:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2019:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2020:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2021:Generated_Source\PSoC4/CyLib.c ****     *
2022:Generated_Source\PSoC4/CyLib.c ****     * Return:
2023:Generated_Source\PSoC4/CyLib.c ****     *  None
2024:Generated_Source\PSoC4/CyLib.c ****     *
2025:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2026:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2027:Generated_Source\PSoC4/CyLib.c ****     {
 891              		.loc 1 2027 0
 892              		.cfi_startproc
 893 0000 80B5     		push	{r7, lr}
 894              		.cfi_def_cfa_offset 8
 895              		.cfi_offset 7, -8
 896              		.cfi_offset 14, -4
 897 0002 82B0     		sub	sp, sp, #8
 898              		.cfi_def_cfa_offset 16
 899 0004 00AF     		add	r7, sp, #0
 900              		.cfi_def_cfa_register 7
 901 0006 7860     		str	r0, [r7, #4]
2028:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2029:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 902              		.loc 1 2029 0
 903 0008 134B     		ldr	r3, .L52
 904 000a 134A     		ldr	r2, .L52
 905 000c 1268     		ldr	r2, [r2]
 906 000e 0221     		mov	r1, #2
 907 0010 8A43     		bic	r2, r1
 908 0012 1A60     		str	r2, [r3]
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2032:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 909              		.loc 1 2032 0
 910 0014 114B     		ldr	r3, .L52+4
 911 0016 114A     		ldr	r2, .L52+4
 912 0018 1268     		ldr	r2, [r2]
 913 001a 1E21     		mov	r1, #30
 914 001c 8A43     		bic	r2, r1
 915 001e 111C     		mov	r1, r2
2033:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 916              		.loc 1 2033 0
 917 0020 7A68     		ldr	r2, [r7, #4]
 918 0022 5200     		lsl	r2, r2, #1
 919 0024 1E20     		mov	r0, #30
 920 0026 0240     		and	r2, r0
2032:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 53


 921              		.loc 1 2032 0
 922 0028 0A43     		orr	r2, r1
 923 002a 1A60     		str	r2, [r3]
2034:Generated_Source\PSoC4/CyLib.c **** 
2035:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2036:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 924              		.loc 1 2036 0
 925 002c 0B4B     		ldr	r3, .L52+4
 926 002e 0B4A     		ldr	r2, .L52+4
 927 0030 1268     		ldr	r2, [r2]
 928 0032 0121     		mov	r1, #1
 929 0034 0A43     		orr	r2, r1
 930 0036 1A60     		str	r2, [r3]
2037:Generated_Source\PSoC4/CyLib.c **** 
2038:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2039:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 931              		.loc 1 2039 0
 932 0038 FA23     		mov	r3, #250
 933 003a 9B00     		lsl	r3, r3, #2
 934 003c 181C     		mov	r0, r3
 935 003e FFF7FEFF 		bl	CyDelayUs
2040:Generated_Source\PSoC4/CyLib.c **** 
2041:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2042:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 936              		.loc 1 2042 0
 937 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2043:Generated_Source\PSoC4/CyLib.c **** 
2044:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2045:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 938              		.loc 1 2045 0
 939 0046 044B     		ldr	r3, .L52
 940 0048 034A     		ldr	r2, .L52
 941 004a 1268     		ldr	r2, [r2]
 942 004c 0221     		mov	r1, #2
 943 004e 0A43     		orr	r2, r1
 944 0050 1A60     		str	r2, [r3]
2046:Generated_Source\PSoC4/CyLib.c ****     }
 945              		.loc 1 2046 0
 946 0052 BD46     		mov	sp, r7
 947 0054 02B0     		add	sp, sp, #8
 948              		@ sp needed
 949 0056 80BD     		pop	{r7, pc}
 950              	.L53:
 951              		.align	2
 952              	.L52:
 953 0058 08000B40 		.word	1074462728
 954 005c 18000B40 		.word	1074462744
 955              		.cfi_endproc
 956              	.LFE12:
 957              		.size	CySysLvdEnable, .-CySysLvdEnable
 958              		.section	.text.CySysLvdDisable,"ax",%progbits
 959              		.align	2
 960              		.global	CySysLvdDisable
 961              		.code	16
 962              		.thumb_func
 963              		.type	CySysLvdDisable, %function
 964              	CySysLvdDisable:
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 54


 965              	.LFB13:
2047:Generated_Source\PSoC4/CyLib.c **** 
2048:Generated_Source\PSoC4/CyLib.c **** 
2049:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2050:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2051:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * Summary:
2054:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2055:Generated_Source\PSoC4/CyLib.c ****     *
2056:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2057:Generated_Source\PSoC4/CyLib.c ****     *  None
2058:Generated_Source\PSoC4/CyLib.c ****     *
2059:Generated_Source\PSoC4/CyLib.c ****     * Return:
2060:Generated_Source\PSoC4/CyLib.c ****     *  None
2061:Generated_Source\PSoC4/CyLib.c ****     *
2062:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2063:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2064:Generated_Source\PSoC4/CyLib.c ****     {
 966              		.loc 1 2064 0
 967              		.cfi_startproc
 968 0000 80B5     		push	{r7, lr}
 969              		.cfi_def_cfa_offset 8
 970              		.cfi_offset 7, -8
 971              		.cfi_offset 14, -4
 972 0002 00AF     		add	r7, sp, #0
 973              		.cfi_def_cfa_register 7
2065:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 974              		.loc 1 2065 0
 975 0004 064B     		ldr	r3, .L55
 976 0006 064A     		ldr	r2, .L55
 977 0008 1268     		ldr	r2, [r2]
 978 000a 0221     		mov	r1, #2
 979 000c 8A43     		bic	r2, r1
 980 000e 1A60     		str	r2, [r3]
2066:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 981              		.loc 1 2066 0
 982 0010 044B     		ldr	r3, .L55+4
 983 0012 044A     		ldr	r2, .L55+4
 984 0014 1268     		ldr	r2, [r2]
 985 0016 0121     		mov	r1, #1
 986 0018 8A43     		bic	r2, r1
 987 001a 1A60     		str	r2, [r3]
2067:Generated_Source\PSoC4/CyLib.c ****     }
 988              		.loc 1 2067 0
 989 001c BD46     		mov	sp, r7
 990              		@ sp needed
 991 001e 80BD     		pop	{r7, pc}
 992              	.L56:
 993              		.align	2
 994              	.L55:
 995 0020 08000B40 		.word	1074462728
 996 0024 18000B40 		.word	1074462744
 997              		.cfi_endproc
 998              	.LFE13:
 999              		.size	CySysLvdDisable, .-CySysLvdDisable
 1000              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 55


 1001              		.align	2
 1002              		.global	CySysLvdGetInterruptSource
 1003              		.code	16
 1004              		.thumb_func
 1005              		.type	CySysLvdGetInterruptSource, %function
 1006              	CySysLvdGetInterruptSource:
 1007              	.LFB14:
2068:Generated_Source\PSoC4/CyLib.c **** 
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2071:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2072:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2073:Generated_Source\PSoC4/CyLib.c ****     *
2074:Generated_Source\PSoC4/CyLib.c ****     * Summary:
2075:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2078:Generated_Source\PSoC4/CyLib.c ****     *  None
2079:Generated_Source\PSoC4/CyLib.c ****     *
2080:Generated_Source\PSoC4/CyLib.c ****     * Return:
2081:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2082:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2083:Generated_Source\PSoC4/CyLib.c ****     *
2084:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2086:Generated_Source\PSoC4/CyLib.c ****     {
 1008              		.loc 1 2086 0
 1009              		.cfi_startproc
 1010 0000 80B5     		push	{r7, lr}
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 7, -8
 1013              		.cfi_offset 14, -4
 1014 0002 00AF     		add	r7, sp, #0
 1015              		.cfi_def_cfa_register 7
2087:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 1016              		.loc 1 2087 0
 1017 0004 034B     		ldr	r3, .L59
 1018 0006 1B68     		ldr	r3, [r3]
 1019 0008 0222     		mov	r2, #2
 1020 000a 1340     		and	r3, r2
2088:Generated_Source\PSoC4/CyLib.c ****     }
 1021              		.loc 1 2088 0
 1022 000c 181C     		mov	r0, r3
 1023 000e BD46     		mov	sp, r7
 1024              		@ sp needed
 1025 0010 80BD     		pop	{r7, pc}
 1026              	.L60:
 1027 0012 C046     		.align	2
 1028              	.L59:
 1029 0014 04000B40 		.word	1074462724
 1030              		.cfi_endproc
 1031              	.LFE14:
 1032              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 1033              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 1034              		.align	2
 1035              		.global	CySysLvdClearInterrupt
 1036              		.code	16
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 56


 1037              		.thumb_func
 1038              		.type	CySysLvdClearInterrupt, %function
 1039              	CySysLvdClearInterrupt:
 1040              	.LFB15:
2089:Generated_Source\PSoC4/CyLib.c **** 
2090:Generated_Source\PSoC4/CyLib.c **** 
2091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2093:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2094:Generated_Source\PSoC4/CyLib.c ****     *
2095:Generated_Source\PSoC4/CyLib.c ****     * Summary:
2096:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2097:Generated_Source\PSoC4/CyLib.c ****     *
2098:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2099:Generated_Source\PSoC4/CyLib.c ****     *  None
2100:Generated_Source\PSoC4/CyLib.c ****     *
2101:Generated_Source\PSoC4/CyLib.c ****     * Return:
2102:Generated_Source\PSoC4/CyLib.c ****     *  None
2103:Generated_Source\PSoC4/CyLib.c ****     *
2104:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2105:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2106:Generated_Source\PSoC4/CyLib.c ****     {
 1041              		.loc 1 2106 0
 1042              		.cfi_startproc
 1043 0000 80B5     		push	{r7, lr}
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047 0002 00AF     		add	r7, sp, #0
 1048              		.cfi_def_cfa_register 7
2107:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 1049              		.loc 1 2107 0
 1050 0004 024B     		ldr	r3, .L62
 1051 0006 0222     		mov	r2, #2
 1052 0008 1A60     		str	r2, [r3]
2108:Generated_Source\PSoC4/CyLib.c ****     }
 1053              		.loc 1 2108 0
 1054 000a BD46     		mov	sp, r7
 1055              		@ sp needed
 1056 000c 80BD     		pop	{r7, pc}
 1057              	.L63:
 1058 000e C046     		.align	2
 1059              	.L62:
 1060 0010 04000B40 		.word	1074462724
 1061              		.cfi_endproc
 1062              	.LFE15:
 1063              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 1064              		.section	.text.CySysGetResetReason,"ax",%progbits
 1065              		.align	2
 1066              		.global	CySysGetResetReason
 1067              		.code	16
 1068              		.thumb_func
 1069              		.type	CySysGetResetReason, %function
 1070              	CySysGetResetReason:
 1071              	.LFB16:
2109:Generated_Source\PSoC4/CyLib.c **** 
2110:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 57


2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c **** 
2113:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2114:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2115:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2116:Generated_Source\PSoC4/CyLib.c **** *
2117:Generated_Source\PSoC4/CyLib.c **** * Summary:
2118:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2119:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2120:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2121:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2122:Generated_Source\PSoC4/CyLib.c **** *
2123:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2124:Generated_Source\PSoC4/CyLib.c **** *  reason: bits in the RES_CAUSE register to clear.
2125:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2126:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2127:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2128:Generated_Source\PSoC4/CyLib.c **** *
2129:Generated_Source\PSoC4/CyLib.c **** * Return:
2130:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2131:Generated_Source\PSoC4/CyLib.c **** *
2132:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2133:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2134:Generated_Source\PSoC4/CyLib.c **** {
 1072              		.loc 1 2134 0
 1073              		.cfi_startproc
 1074 0000 80B5     		push	{r7, lr}
 1075              		.cfi_def_cfa_offset 8
 1076              		.cfi_offset 7, -8
 1077              		.cfi_offset 14, -4
 1078 0002 84B0     		sub	sp, sp, #16
 1079              		.cfi_def_cfa_offset 24
 1080 0004 00AF     		add	r7, sp, #0
 1081              		.cfi_def_cfa_register 7
 1082 0006 7860     		str	r0, [r7, #4]
2135:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2136:Generated_Source\PSoC4/CyLib.c **** 
2137:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 1083              		.loc 1 2137 0
 1084 0008 7B68     		ldr	r3, [r7, #4]
 1085 000a 1922     		mov	r2, #25
 1086 000c 1340     		and	r3, r2
 1087 000e 7B60     		str	r3, [r7, #4]
2138:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 1088              		.loc 1 2138 0
 1089 0010 064B     		ldr	r3, .L66
 1090 0012 1B68     		ldr	r3, [r3]
 1091 0014 1922     		mov	r2, #25
 1092 0016 1340     		and	r3, r2
 1093 0018 FB60     		str	r3, [r7, #12]
2139:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2140:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 1094              		.loc 1 2140 0
 1095 001a 044B     		ldr	r3, .L66
 1096 001c 7A68     		ldr	r2, [r7, #4]
 1097 001e 1A60     		str	r2, [r3]
2141:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 58


2142:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 1098              		.loc 1 2142 0
 1099 0020 FB68     		ldr	r3, [r7, #12]
2143:Generated_Source\PSoC4/CyLib.c **** }
 1100              		.loc 1 2143 0
 1101 0022 181C     		mov	r0, r3
 1102 0024 BD46     		mov	sp, r7
 1103 0026 04B0     		add	sp, sp, #16
 1104              		@ sp needed
 1105 0028 80BD     		pop	{r7, pc}
 1106              	.L67:
 1107 002a C046     		.align	2
 1108              	.L66:
 1109 002c 00030B40 		.word	1074463488
 1110              		.cfi_endproc
 1111              	.LFE16:
 1112              		.size	CySysGetResetReason, .-CySysGetResetReason
 1113              		.section	.text.CyDisableInts,"ax",%progbits
 1114              		.align	2
 1115              		.global	CyDisableInts
 1116              		.code	16
 1117              		.thumb_func
 1118              		.type	CyDisableInts, %function
 1119              	CyDisableInts:
 1120              	.LFB17:
2144:Generated_Source\PSoC4/CyLib.c **** 
2145:Generated_Source\PSoC4/CyLib.c **** 
2146:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2147:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2148:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2149:Generated_Source\PSoC4/CyLib.c **** *
2150:Generated_Source\PSoC4/CyLib.c **** * Summary:
2151:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2152:Generated_Source\PSoC4/CyLib.c **** *
2153:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2154:Generated_Source\PSoC4/CyLib.c **** *  None
2155:Generated_Source\PSoC4/CyLib.c **** *
2156:Generated_Source\PSoC4/CyLib.c **** * Return:
2157:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2158:Generated_Source\PSoC4/CyLib.c **** *
2159:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2160:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2161:Generated_Source\PSoC4/CyLib.c **** {
 1121              		.loc 1 2161 0
 1122              		.cfi_startproc
 1123 0000 80B5     		push	{r7, lr}
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 7, -8
 1126              		.cfi_offset 14, -4
 1127 0002 82B0     		sub	sp, sp, #8
 1128              		.cfi_def_cfa_offset 16
 1129 0004 00AF     		add	r7, sp, #0
 1130              		.cfi_def_cfa_register 7
2162:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2163:Generated_Source\PSoC4/CyLib.c **** 
2164:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2165:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 59


 1131              		.loc 1 2165 0
 1132 0006 064B     		ldr	r3, .L70
 1133 0008 1B68     		ldr	r3, [r3]
 1134 000a 7B60     		str	r3, [r7, #4]
2166:Generated_Source\PSoC4/CyLib.c **** 
2167:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2168:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 1135              		.loc 1 2168 0
 1136 000c 044B     		ldr	r3, .L70
 1137 000e 0122     		mov	r2, #1
 1138 0010 5242     		neg	r2, r2
 1139 0012 1A60     		str	r2, [r3]
2169:Generated_Source\PSoC4/CyLib.c **** 
2170:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 1140              		.loc 1 2170 0
 1141 0014 7B68     		ldr	r3, [r7, #4]
2171:Generated_Source\PSoC4/CyLib.c **** }
 1142              		.loc 1 2171 0
 1143 0016 181C     		mov	r0, r3
 1144 0018 BD46     		mov	sp, r7
 1145 001a 02B0     		add	sp, sp, #8
 1146              		@ sp needed
 1147 001c 80BD     		pop	{r7, pc}
 1148              	.L71:
 1149 001e C046     		.align	2
 1150              	.L70:
 1151 0020 80E100E0 		.word	-536813184
 1152              		.cfi_endproc
 1153              	.LFE17:
 1154              		.size	CyDisableInts, .-CyDisableInts
 1155              		.section	.text.CyEnableInts,"ax",%progbits
 1156              		.align	2
 1157              		.global	CyEnableInts
 1158              		.code	16
 1159              		.thumb_func
 1160              		.type	CyEnableInts, %function
 1161              	CyEnableInts:
 1162              	.LFB18:
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c **** 
2174:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2176:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2177:Generated_Source\PSoC4/CyLib.c **** *
2178:Generated_Source\PSoC4/CyLib.c **** * Summary:
2179:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2180:Generated_Source\PSoC4/CyLib.c **** *
2181:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2182:Generated_Source\PSoC4/CyLib.c **** *   mask, 32 bit mask of interrupts to enable.
2183:Generated_Source\PSoC4/CyLib.c **** *
2184:Generated_Source\PSoC4/CyLib.c **** * Return:
2185:Generated_Source\PSoC4/CyLib.c **** *  None
2186:Generated_Source\PSoC4/CyLib.c **** *
2187:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2188:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2189:Generated_Source\PSoC4/CyLib.c **** {
 1163              		.loc 1 2189 0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 60


 1164              		.cfi_startproc
 1165 0000 80B5     		push	{r7, lr}
 1166              		.cfi_def_cfa_offset 8
 1167              		.cfi_offset 7, -8
 1168              		.cfi_offset 14, -4
 1169 0002 82B0     		sub	sp, sp, #8
 1170              		.cfi_def_cfa_offset 16
 1171 0004 00AF     		add	r7, sp, #0
 1172              		.cfi_def_cfa_register 7
 1173 0006 7860     		str	r0, [r7, #4]
2190:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1174              		.loc 1 2190 0
 1175 0008 024B     		ldr	r3, .L73
 1176 000a 7A68     		ldr	r2, [r7, #4]
 1177 000c 1A60     		str	r2, [r3]
2191:Generated_Source\PSoC4/CyLib.c **** }
 1178              		.loc 1 2191 0
 1179 000e BD46     		mov	sp, r7
 1180 0010 02B0     		add	sp, sp, #8
 1181              		@ sp needed
 1182 0012 80BD     		pop	{r7, pc}
 1183              	.L74:
 1184              		.align	2
 1185              	.L73:
 1186 0014 00E100E0 		.word	-536813312
 1187              		.cfi_endproc
 1188              	.LFE18:
 1189              		.size	CyEnableInts, .-CyEnableInts
 1190              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1191              		.align	2
 1192              		.global	CyIntSetSysVector
 1193              		.code	16
 1194              		.thumb_func
 1195              		.type	CyIntSetSysVector, %function
 1196              	CyIntSetSysVector:
 1197              	.LFB19:
2192:Generated_Source\PSoC4/CyLib.c **** 
2193:Generated_Source\PSoC4/CyLib.c **** 
2194:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2195:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2196:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2197:Generated_Source\PSoC4/CyLib.c **** *
2198:Generated_Source\PSoC4/CyLib.c **** * Summary:
2199:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2200:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2201:Generated_Source\PSoC4/CyLib.c **** *
2202:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2203:Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2204:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2205:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2206:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2207:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2208:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2209:Generated_Source\PSoC4/CyLib.c **** *
2210:Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine.
2211:Generated_Source\PSoC4/CyLib.c **** *
2212:Generated_Source\PSoC4/CyLib.c **** * Return:
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 61


2213:Generated_Source\PSoC4/CyLib.c **** *  The old ISR vector at this location.
2214:Generated_Source\PSoC4/CyLib.c **** *
2215:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2216:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2217:Generated_Source\PSoC4/CyLib.c **** {
 1198              		.loc 1 2217 0
 1199              		.cfi_startproc
 1200 0000 80B5     		push	{r7, lr}
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 7, -8
 1203              		.cfi_offset 14, -4
 1204 0002 84B0     		sub	sp, sp, #16
 1205              		.cfi_def_cfa_offset 24
 1206 0004 00AF     		add	r7, sp, #0
 1207              		.cfi_def_cfa_register 7
 1208 0006 021C     		mov	r2, r0
 1209 0008 3960     		str	r1, [r7]
 1210 000a FB1D     		add	r3, r7, #7
 1211 000c 1A70     		strb	r2, [r3]
2218:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2219:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1212              		.loc 1 2219 0
 1213 000e 8023     		mov	r3, #128
 1214 0010 9B05     		lsl	r3, r3, #22
 1215 0012 FB60     		str	r3, [r7, #12]
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1216              		.loc 1 2221 0
 1217 0014 FB1D     		add	r3, r7, #7
 1218 0016 1B78     		ldrb	r3, [r3]
 1219 0018 0F2B     		cmp	r3, #15
 1220 001a 02D9     		bls	.L76
 1221              		.loc 1 2221 0 is_stmt 0 discriminator 1
 1222 001c 0020     		mov	r0, #0
 1223 001e FFF7FEFF 		bl	CyHalt
 1224              	.L76:
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2224:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1225              		.loc 1 2224 0 is_stmt 1
 1226 0022 FB1D     		add	r3, r7, #7
 1227 0024 1B78     		ldrb	r3, [r3]
 1228 0026 9B00     		lsl	r3, r3, #2
 1229 0028 FA68     		ldr	r2, [r7, #12]
 1230 002a D318     		add	r3, r2, r3
 1231 002c 1B68     		ldr	r3, [r3]
 1232 002e BB60     		str	r3, [r7, #8]
2225:Generated_Source\PSoC4/CyLib.c **** 
2226:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2227:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1233              		.loc 1 2227 0
 1234 0030 FB1D     		add	r3, r7, #7
 1235 0032 1B78     		ldrb	r3, [r3]
 1236 0034 9B00     		lsl	r3, r3, #2
 1237 0036 FA68     		ldr	r2, [r7, #12]
 1238 0038 D318     		add	r3, r2, r3
 1239 003a 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 62


 1240 003c 1A60     		str	r2, [r3]
2228:Generated_Source\PSoC4/CyLib.c **** 
2229:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1241              		.loc 1 2229 0
 1242 003e BB68     		ldr	r3, [r7, #8]
2230:Generated_Source\PSoC4/CyLib.c **** }
 1243              		.loc 1 2230 0
 1244 0040 181C     		mov	r0, r3
 1245 0042 BD46     		mov	sp, r7
 1246 0044 04B0     		add	sp, sp, #16
 1247              		@ sp needed
 1248 0046 80BD     		pop	{r7, pc}
 1249              		.cfi_endproc
 1250              	.LFE19:
 1251              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1252              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1253              		.align	2
 1254              		.global	CyIntGetSysVector
 1255              		.code	16
 1256              		.thumb_func
 1257              		.type	CyIntGetSysVector, %function
 1258              	CyIntGetSysVector:
 1259              	.LFB20:
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c **** 
2233:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2234:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2235:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2236:Generated_Source\PSoC4/CyLib.c **** *
2237:Generated_Source\PSoC4/CyLib.c **** * Summary:
2238:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2239:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2240:Generated_Source\PSoC4/CyLib.c **** *
2241:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2242:Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2243:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2244:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2245:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2246:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2247:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** * Return:
2250:Generated_Source\PSoC4/CyLib.c **** *   Address of the ISR in the interrupt vector table.
2251:Generated_Source\PSoC4/CyLib.c **** *
2252:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2253:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2254:Generated_Source\PSoC4/CyLib.c **** {
 1260              		.loc 1 2254 0
 1261              		.cfi_startproc
 1262 0000 80B5     		push	{r7, lr}
 1263              		.cfi_def_cfa_offset 8
 1264              		.cfi_offset 7, -8
 1265              		.cfi_offset 14, -4
 1266 0002 84B0     		sub	sp, sp, #16
 1267              		.cfi_def_cfa_offset 24
 1268 0004 00AF     		add	r7, sp, #0
 1269              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 63


 1270 0006 021C     		mov	r2, r0
 1271 0008 FB1D     		add	r3, r7, #7
 1272 000a 1A70     		strb	r2, [r3]
2255:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1273              		.loc 1 2255 0
 1274 000c 8023     		mov	r3, #128
 1275 000e 9B05     		lsl	r3, r3, #22
 1276 0010 FB60     		str	r3, [r7, #12]
2256:Generated_Source\PSoC4/CyLib.c **** 
2257:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1277              		.loc 1 2257 0
 1278 0012 FB1D     		add	r3, r7, #7
 1279 0014 1B78     		ldrb	r3, [r3]
 1280 0016 0F2B     		cmp	r3, #15
 1281 0018 02D9     		bls	.L79
 1282              		.loc 1 2257 0 is_stmt 0 discriminator 1
 1283 001a 0020     		mov	r0, #0
 1284 001c FFF7FEFF 		bl	CyHalt
 1285              	.L79:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1286              		.loc 1 2259 0 is_stmt 1
 1287 0020 FB1D     		add	r3, r7, #7
 1288 0022 1B78     		ldrb	r3, [r3]
 1289 0024 9B00     		lsl	r3, r3, #2
 1290 0026 FA68     		ldr	r2, [r7, #12]
 1291 0028 D318     		add	r3, r2, r3
 1292 002a 1B68     		ldr	r3, [r3]
2260:Generated_Source\PSoC4/CyLib.c **** }
 1293              		.loc 1 2260 0
 1294 002c 181C     		mov	r0, r3
 1295 002e BD46     		mov	sp, r7
 1296 0030 04B0     		add	sp, sp, #16
 1297              		@ sp needed
 1298 0032 80BD     		pop	{r7, pc}
 1299              		.cfi_endproc
 1300              	.LFE20:
 1301              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1302              		.section	.text.CyIntSetVector,"ax",%progbits
 1303              		.align	2
 1304              		.global	CyIntSetVector
 1305              		.code	16
 1306              		.thumb_func
 1307              		.type	CyIntSetVector, %function
 1308              	CyIntSetVector:
 1309              	.LFB21:
2261:Generated_Source\PSoC4/CyLib.c **** 
2262:Generated_Source\PSoC4/CyLib.c **** 
2263:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2264:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2265:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** * Summary:
2268:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2269:Generated_Source\PSoC4/CyLib.c **** *
2270:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2271:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 64


2272:Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** * Return:
2275:Generated_Source\PSoC4/CyLib.c **** *   Previous interrupt vector value.
2276:Generated_Source\PSoC4/CyLib.c **** *
2277:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2278:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2279:Generated_Source\PSoC4/CyLib.c **** {
 1310              		.loc 1 2279 0
 1311              		.cfi_startproc
 1312 0000 80B5     		push	{r7, lr}
 1313              		.cfi_def_cfa_offset 8
 1314              		.cfi_offset 7, -8
 1315              		.cfi_offset 14, -4
 1316 0002 84B0     		sub	sp, sp, #16
 1317              		.cfi_def_cfa_offset 24
 1318 0004 00AF     		add	r7, sp, #0
 1319              		.cfi_def_cfa_register 7
 1320 0006 021C     		mov	r2, r0
 1321 0008 3960     		str	r1, [r7]
 1322 000a FB1D     		add	r3, r7, #7
 1323 000c 1A70     		strb	r2, [r3]
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1324              		.loc 1 2281 0
 1325 000e 8023     		mov	r3, #128
 1326 0010 9B05     		lsl	r3, r3, #22
 1327 0012 FB60     		str	r3, [r7, #12]
2282:Generated_Source\PSoC4/CyLib.c **** 
2283:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1328              		.loc 1 2283 0
 1329 0014 FB1D     		add	r3, r7, #7
 1330 0016 1B78     		ldrb	r3, [r3]
 1331 0018 1F2B     		cmp	r3, #31
 1332 001a 02D9     		bls	.L82
 1333              		.loc 1 2283 0 is_stmt 0 discriminator 1
 1334 001c 0020     		mov	r0, #0
 1335 001e FFF7FEFF 		bl	CyHalt
 1336              	.L82:
2284:Generated_Source\PSoC4/CyLib.c **** 
2285:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2286:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1337              		.loc 1 2286 0 is_stmt 1
 1338 0022 FB1D     		add	r3, r7, #7
 1339 0024 1B78     		ldrb	r3, [r3]
 1340 0026 1033     		add	r3, r3, #16
 1341 0028 9B00     		lsl	r3, r3, #2
 1342 002a FA68     		ldr	r2, [r7, #12]
 1343 002c D318     		add	r3, r2, r3
 1344 002e 1B68     		ldr	r3, [r3]
 1345 0030 BB60     		str	r3, [r7, #8]
2287:Generated_Source\PSoC4/CyLib.c **** 
2288:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2289:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1346              		.loc 1 2289 0
 1347 0032 FB1D     		add	r3, r7, #7
 1348 0034 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 65


 1349 0036 1033     		add	r3, r3, #16
 1350 0038 9B00     		lsl	r3, r3, #2
 1351 003a FA68     		ldr	r2, [r7, #12]
 1352 003c D318     		add	r3, r2, r3
 1353 003e 3A68     		ldr	r2, [r7]
 1354 0040 1A60     		str	r2, [r3]
2290:Generated_Source\PSoC4/CyLib.c **** 
2291:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1355              		.loc 1 2291 0
 1356 0042 BB68     		ldr	r3, [r7, #8]
2292:Generated_Source\PSoC4/CyLib.c **** }
 1357              		.loc 1 2292 0
 1358 0044 181C     		mov	r0, r3
 1359 0046 BD46     		mov	sp, r7
 1360 0048 04B0     		add	sp, sp, #16
 1361              		@ sp needed
 1362 004a 80BD     		pop	{r7, pc}
 1363              		.cfi_endproc
 1364              	.LFE21:
 1365              		.size	CyIntSetVector, .-CyIntSetVector
 1366              		.section	.text.CyIntGetVector,"ax",%progbits
 1367              		.align	2
 1368              		.global	CyIntGetVector
 1369              		.code	16
 1370              		.thumb_func
 1371              		.type	CyIntGetVector, %function
 1372              	CyIntGetVector:
 1373              	.LFB22:
2293:Generated_Source\PSoC4/CyLib.c **** 
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2296:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2297:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2298:Generated_Source\PSoC4/CyLib.c **** *
2299:Generated_Source\PSoC4/CyLib.c **** * Summary:
2300:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2301:Generated_Source\PSoC4/CyLib.c **** *
2302:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2303:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2304:Generated_Source\PSoC4/CyLib.c **** *
2305:Generated_Source\PSoC4/CyLib.c **** * Return:
2306:Generated_Source\PSoC4/CyLib.c **** *  Address of the ISR in the interrupt vector table.
2307:Generated_Source\PSoC4/CyLib.c **** *
2308:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2309:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2310:Generated_Source\PSoC4/CyLib.c **** {
 1374              		.loc 1 2310 0
 1375              		.cfi_startproc
 1376 0000 80B5     		push	{r7, lr}
 1377              		.cfi_def_cfa_offset 8
 1378              		.cfi_offset 7, -8
 1379              		.cfi_offset 14, -4
 1380 0002 84B0     		sub	sp, sp, #16
 1381              		.cfi_def_cfa_offset 24
 1382 0004 00AF     		add	r7, sp, #0
 1383              		.cfi_def_cfa_register 7
 1384 0006 021C     		mov	r2, r0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 66


 1385 0008 FB1D     		add	r3, r7, #7
 1386 000a 1A70     		strb	r2, [r3]
2311:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1387              		.loc 1 2311 0
 1388 000c 8023     		mov	r3, #128
 1389 000e 9B05     		lsl	r3, r3, #22
 1390 0010 FB60     		str	r3, [r7, #12]
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1391              		.loc 1 2313 0
 1392 0012 FB1D     		add	r3, r7, #7
 1393 0014 1B78     		ldrb	r3, [r3]
 1394 0016 1F2B     		cmp	r3, #31
 1395 0018 02D9     		bls	.L85
 1396              		.loc 1 2313 0 is_stmt 0 discriminator 1
 1397 001a 0020     		mov	r0, #0
 1398 001c FFF7FEFF 		bl	CyHalt
 1399              	.L85:
2314:Generated_Source\PSoC4/CyLib.c **** 
2315:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1400              		.loc 1 2315 0 is_stmt 1
 1401 0020 FB1D     		add	r3, r7, #7
 1402 0022 1B78     		ldrb	r3, [r3]
 1403 0024 1033     		add	r3, r3, #16
 1404 0026 9B00     		lsl	r3, r3, #2
 1405 0028 FA68     		ldr	r2, [r7, #12]
 1406 002a D318     		add	r3, r2, r3
 1407 002c 1B68     		ldr	r3, [r3]
2316:Generated_Source\PSoC4/CyLib.c **** }
 1408              		.loc 1 2316 0
 1409 002e 181C     		mov	r0, r3
 1410 0030 BD46     		mov	sp, r7
 1411 0032 04B0     		add	sp, sp, #16
 1412              		@ sp needed
 1413 0034 80BD     		pop	{r7, pc}
 1414              		.cfi_endproc
 1415              	.LFE22:
 1416              		.size	CyIntGetVector, .-CyIntGetVector
 1417              		.section	.text.CyIntSetPriority,"ax",%progbits
 1418              		.align	2
 1419              		.global	CyIntSetPriority
 1420              		.code	16
 1421              		.thumb_func
 1422              		.type	CyIntSetPriority, %function
 1423              	CyIntSetPriority:
 1424              	.LFB23:
2317:Generated_Source\PSoC4/CyLib.c **** 
2318:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2319:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2320:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2321:Generated_Source\PSoC4/CyLib.c **** *
2322:Generated_Source\PSoC4/CyLib.c **** * Summary:
2323:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2324:Generated_Source\PSoC4/CyLib.c **** *
2325:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2326:Generated_Source\PSoC4/CyLib.c **** *  priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2327:Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 67


2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** * Return:
2330:Generated_Source\PSoC4/CyLib.c **** *  None
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2333:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2334:Generated_Source\PSoC4/CyLib.c **** {
 1425              		.loc 1 2334 0
 1426              		.cfi_startproc
 1427 0000 90B5     		push	{r4, r7, lr}
 1428              		.cfi_def_cfa_offset 12
 1429              		.cfi_offset 4, -12
 1430              		.cfi_offset 7, -8
 1431              		.cfi_offset 14, -4
 1432 0002 87B0     		sub	sp, sp, #28
 1433              		.cfi_def_cfa_offset 40
 1434 0004 00AF     		add	r7, sp, #0
 1435              		.cfi_def_cfa_register 7
 1436 0006 021C     		mov	r2, r0
 1437 0008 FB1D     		add	r3, r7, #7
 1438 000a 1A70     		strb	r2, [r3]
 1439 000c BB1D     		add	r3, r7, #6
 1440 000e 0A1C     		add	r2, r1, #0
 1441 0010 1A70     		strb	r2, [r3]
2335:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2336:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2337:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2338:Generated_Source\PSoC4/CyLib.c **** 
2339:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1442              		.loc 1 2339 0
 1443 0012 BB1D     		add	r3, r7, #6
 1444 0014 1B78     		ldrb	r3, [r3]
 1445 0016 032B     		cmp	r3, #3
 1446 0018 02D9     		bls	.L88
 1447              		.loc 1 2339 0 is_stmt 0 discriminator 1
 1448 001a 0020     		mov	r0, #0
 1449 001c FFF7FEFF 		bl	CyHalt
 1450              	.L88:
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1451              		.loc 1 2340 0 is_stmt 1
 1452 0020 FB1D     		add	r3, r7, #7
 1453 0022 1B78     		ldrb	r3, [r3]
 1454 0024 1F2B     		cmp	r3, #31
 1455 0026 02D9     		bls	.L89
 1456              		.loc 1 2340 0 is_stmt 0 discriminator 1
 1457 0028 0020     		mov	r0, #0
 1458 002a FFF7FEFF 		bl	CyHalt
 1459              	.L89:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1460              		.loc 1 2342 0 is_stmt 1
 1461 002e FB1D     		add	r3, r7, #7
 1462 0030 1B78     		ldrb	r3, [r3]
 1463 0032 0322     		mov	r2, #3
 1464 0034 1340     		and	r3, r2
 1465 0036 DB00     		lsl	r3, r3, #3
 1466 0038 0633     		add	r3, r3, #6
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 68


 1467 003a 7B61     		str	r3, [r7, #20]
2343:Generated_Source\PSoC4/CyLib.c **** 
2344:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1468              		.loc 1 2344 0
 1469 003c 1323     		mov	r3, #19
 1470 003e FC18     		add	r4, r7, r3
 1471 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1472 0044 031C     		mov	r3, r0
 1473 0046 2370     		strb	r3, [r4]
2345:Generated_Source\PSoC4/CyLib.c **** 
2346:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1474              		.loc 1 2346 0
 1475 0048 FB1D     		add	r3, r7, #7
 1476 004a 1B78     		ldrb	r3, [r3]
 1477 004c 9B08     		lsr	r3, r3, #2
 1478 004e DBB2     		uxtb	r3, r3
 1479 0050 9B00     		lsl	r3, r3, #2
 1480 0052 144A     		ldr	r2, .L90
 1481 0054 9446     		mov	ip, r2
 1482 0056 6344     		add	r3, r3, ip
 1483 0058 1B68     		ldr	r3, [r3]
 1484 005a FB60     		str	r3, [r7, #12]
2347:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1485              		.loc 1 2347 0
 1486 005c 7B69     		ldr	r3, [r7, #20]
 1487 005e 0322     		mov	r2, #3
 1488 0060 9A40     		lsl	r2, r2, r3
 1489 0062 131C     		mov	r3, r2
 1490 0064 DA43     		mvn	r2, r3
 1491 0066 FB68     		ldr	r3, [r7, #12]
 1492 0068 1340     		and	r3, r2
 1493 006a FB60     		str	r3, [r7, #12]
2348:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1494              		.loc 1 2348 0
 1495 006c BB1D     		add	r3, r7, #6
 1496 006e 1A78     		ldrb	r2, [r3]
 1497 0070 7B69     		ldr	r3, [r7, #20]
 1498 0072 9A40     		lsl	r2, r2, r3
 1499 0074 131C     		mov	r3, r2
 1500 0076 FA68     		ldr	r2, [r7, #12]
 1501 0078 1343     		orr	r3, r2
 1502 007a FB60     		str	r3, [r7, #12]
2349:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1503              		.loc 1 2349 0
 1504 007c FB1D     		add	r3, r7, #7
 1505 007e 1B78     		ldrb	r3, [r3]
 1506 0080 9B08     		lsr	r3, r3, #2
 1507 0082 DBB2     		uxtb	r3, r3
 1508 0084 9B00     		lsl	r3, r3, #2
 1509 0086 074A     		ldr	r2, .L90
 1510 0088 9446     		mov	ip, r2
 1511 008a 6344     		add	r3, r3, ip
 1512 008c FA68     		ldr	r2, [r7, #12]
 1513 008e 1A60     		str	r2, [r3]
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1514              		.loc 1 2351 0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 69


 1515 0090 1323     		mov	r3, #19
 1516 0092 FB18     		add	r3, r7, r3
 1517 0094 1B78     		ldrb	r3, [r3]
 1518 0096 181C     		mov	r0, r3
 1519 0098 FFF7FEFF 		bl	CyExitCriticalSection
2352:Generated_Source\PSoC4/CyLib.c **** }
 1520              		.loc 1 2352 0
 1521 009c BD46     		mov	sp, r7
 1522 009e 07B0     		add	sp, sp, #28
 1523              		@ sp needed
 1524 00a0 90BD     		pop	{r4, r7, pc}
 1525              	.L91:
 1526 00a2 C046     		.align	2
 1527              	.L90:
 1528 00a4 00E400E0 		.word	-536812544
 1529              		.cfi_endproc
 1530              	.LFE23:
 1531              		.size	CyIntSetPriority, .-CyIntSetPriority
 1532              		.section	.text.CyIntGetPriority,"ax",%progbits
 1533              		.align	2
 1534              		.global	CyIntGetPriority
 1535              		.code	16
 1536              		.thumb_func
 1537              		.type	CyIntGetPriority, %function
 1538              	CyIntGetPriority:
 1539              	.LFB24:
2353:Generated_Source\PSoC4/CyLib.c **** 
2354:Generated_Source\PSoC4/CyLib.c **** 
2355:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2356:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2357:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2358:Generated_Source\PSoC4/CyLib.c **** *
2359:Generated_Source\PSoC4/CyLib.c **** * Summary:
2360:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2363:Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2364:Generated_Source\PSoC4/CyLib.c **** *
2365:Generated_Source\PSoC4/CyLib.c **** * Return:
2366:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2367:Generated_Source\PSoC4/CyLib.c **** *
2368:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2369:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2370:Generated_Source\PSoC4/CyLib.c **** {
 1540              		.loc 1 2370 0
 1541              		.cfi_startproc
 1542 0000 80B5     		push	{r7, lr}
 1543              		.cfi_def_cfa_offset 8
 1544              		.cfi_offset 7, -8
 1545              		.cfi_offset 14, -4
 1546 0002 84B0     		sub	sp, sp, #16
 1547              		.cfi_def_cfa_offset 24
 1548 0004 00AF     		add	r7, sp, #0
 1549              		.cfi_def_cfa_register 7
 1550 0006 021C     		mov	r2, r0
 1551 0008 FB1D     		add	r3, r7, #7
 1552 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 70


2371:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2372:Generated_Source\PSoC4/CyLib.c **** 
2373:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1553              		.loc 1 2373 0
 1554 000c FB1D     		add	r3, r7, #7
 1555 000e 1B78     		ldrb	r3, [r3]
 1556 0010 1F2B     		cmp	r3, #31
 1557 0012 02D9     		bls	.L93
 1558              		.loc 1 2373 0 is_stmt 0 discriminator 1
 1559 0014 0020     		mov	r0, #0
 1560 0016 FFF7FEFF 		bl	CyHalt
 1561              	.L93:
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1562              		.loc 1 2375 0 is_stmt 1
 1563 001a FB1D     		add	r3, r7, #7
 1564 001c 1B78     		ldrb	r3, [r3]
 1565 001e 9B08     		lsr	r3, r3, #2
 1566 0020 DBB2     		uxtb	r3, r3
 1567 0022 9B00     		lsl	r3, r3, #2
 1568 0024 0C4A     		ldr	r2, .L95
 1569 0026 9446     		mov	ip, r2
 1570 0028 6344     		add	r3, r3, ip
 1571 002a 1B68     		ldr	r3, [r3]
 1572 002c FA1D     		add	r2, r7, #7
 1573 002e 1278     		ldrb	r2, [r2]
 1574 0030 0321     		mov	r1, #3
 1575 0032 0A40     		and	r2, r1
 1576 0034 D200     		lsl	r2, r2, #3
 1577 0036 0632     		add	r2, r2, #6
 1578 0038 D340     		lsr	r3, r3, r2
 1579 003a 1A1C     		mov	r2, r3
 1580 003c 0F23     		mov	r3, #15
 1581 003e FB18     		add	r3, r7, r3
 1582 0040 1A70     		strb	r2, [r3]
2376:Generated_Source\PSoC4/CyLib.c **** 
2377:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1583              		.loc 1 2377 0
 1584 0042 0F23     		mov	r3, #15
 1585 0044 FB18     		add	r3, r7, r3
 1586 0046 1B78     		ldrb	r3, [r3]
 1587 0048 0322     		mov	r2, #3
 1588 004a 1340     		and	r3, r2
 1589 004c DBB2     		uxtb	r3, r3
2378:Generated_Source\PSoC4/CyLib.c **** }
 1590              		.loc 1 2378 0
 1591 004e 181C     		mov	r0, r3
 1592 0050 BD46     		mov	sp, r7
 1593 0052 04B0     		add	sp, sp, #16
 1594              		@ sp needed
 1595 0054 80BD     		pop	{r7, pc}
 1596              	.L96:
 1597 0056 C046     		.align	2
 1598              	.L95:
 1599 0058 00E400E0 		.word	-536812544
 1600              		.cfi_endproc
 1601              	.LFE24:
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 71


 1602              		.size	CyIntGetPriority, .-CyIntGetPriority
 1603              		.section	.text.CyIntEnable,"ax",%progbits
 1604              		.align	2
 1605              		.global	CyIntEnable
 1606              		.code	16
 1607              		.thumb_func
 1608              		.type	CyIntEnable, %function
 1609              	CyIntEnable:
 1610              	.LFB25:
2379:Generated_Source\PSoC4/CyLib.c **** 
2380:Generated_Source\PSoC4/CyLib.c **** 
2381:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2382:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2383:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2384:Generated_Source\PSoC4/CyLib.c **** *
2385:Generated_Source\PSoC4/CyLib.c **** * Summary:
2386:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2387:Generated_Source\PSoC4/CyLib.c **** *
2388:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2389:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2390:Generated_Source\PSoC4/CyLib.c **** *
2391:Generated_Source\PSoC4/CyLib.c **** * Return:
2392:Generated_Source\PSoC4/CyLib.c **** *  None
2393:Generated_Source\PSoC4/CyLib.c **** *
2394:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2395:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2396:Generated_Source\PSoC4/CyLib.c **** {
 1611              		.loc 1 2396 0
 1612              		.cfi_startproc
 1613 0000 80B5     		push	{r7, lr}
 1614              		.cfi_def_cfa_offset 8
 1615              		.cfi_offset 7, -8
 1616              		.cfi_offset 14, -4
 1617 0002 82B0     		sub	sp, sp, #8
 1618              		.cfi_def_cfa_offset 16
 1619 0004 00AF     		add	r7, sp, #0
 1620              		.cfi_def_cfa_register 7
 1621 0006 021C     		mov	r2, r0
 1622 0008 FB1D     		add	r3, r7, #7
 1623 000a 1A70     		strb	r2, [r3]
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1624              		.loc 1 2397 0
 1625 000c 054B     		ldr	r3, .L98
 1626 000e FA1D     		add	r2, r7, #7
 1627 0010 1278     		ldrb	r2, [r2]
 1628 0012 1F21     		mov	r1, #31
 1629 0014 0A40     		and	r2, r1
 1630 0016 0121     		mov	r1, #1
 1631 0018 9140     		lsl	r1, r1, r2
 1632 001a 0A1C     		mov	r2, r1
 1633 001c 1A60     		str	r2, [r3]
2398:Generated_Source\PSoC4/CyLib.c **** }
 1634              		.loc 1 2398 0
 1635 001e BD46     		mov	sp, r7
 1636 0020 02B0     		add	sp, sp, #8
 1637              		@ sp needed
 1638 0022 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 72


 1639              	.L99:
 1640              		.align	2
 1641              	.L98:
 1642 0024 00E100E0 		.word	-536813312
 1643              		.cfi_endproc
 1644              	.LFE25:
 1645              		.size	CyIntEnable, .-CyIntEnable
 1646              		.section	.text.CyIntGetState,"ax",%progbits
 1647              		.align	2
 1648              		.global	CyIntGetState
 1649              		.code	16
 1650              		.thumb_func
 1651              		.type	CyIntGetState, %function
 1652              	CyIntGetState:
 1653              	.LFB26:
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c **** 
2401:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2403:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2404:Generated_Source\PSoC4/CyLib.c **** *
2405:Generated_Source\PSoC4/CyLib.c **** * Summary:
2406:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2409:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2410:Generated_Source\PSoC4/CyLib.c **** *
2411:Generated_Source\PSoC4/CyLib.c **** * Return:
2412:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2413:Generated_Source\PSoC4/CyLib.c **** *
2414:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2415:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2416:Generated_Source\PSoC4/CyLib.c **** {
 1654              		.loc 1 2416 0
 1655              		.cfi_startproc
 1656 0000 80B5     		push	{r7, lr}
 1657              		.cfi_def_cfa_offset 8
 1658              		.cfi_offset 7, -8
 1659              		.cfi_offset 14, -4
 1660 0002 82B0     		sub	sp, sp, #8
 1661              		.cfi_def_cfa_offset 16
 1662 0004 00AF     		add	r7, sp, #0
 1663              		.cfi_def_cfa_register 7
 1664 0006 021C     		mov	r2, r0
 1665 0008 FB1D     		add	r3, r7, #7
 1666 000a 1A70     		strb	r2, [r3]
2417:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2418:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1667              		.loc 1 2418 0
 1668 000c 074B     		ldr	r3, .L102
 1669 000e 1A68     		ldr	r2, [r3]
 1670 0010 FB1D     		add	r3, r7, #7
 1671 0012 1B78     		ldrb	r3, [r3]
 1672 0014 1F21     		mov	r1, #31
 1673 0016 0B40     		and	r3, r1
 1674 0018 DA40     		lsr	r2, r2, r3
 1675 001a 131C     		mov	r3, r2
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 73


 1676 001c DBB2     		uxtb	r3, r3
 1677 001e 0122     		mov	r2, #1
 1678 0020 1340     		and	r3, r2
 1679 0022 DBB2     		uxtb	r3, r3
2419:Generated_Source\PSoC4/CyLib.c **** }
 1680              		.loc 1 2419 0
 1681 0024 181C     		mov	r0, r3
 1682 0026 BD46     		mov	sp, r7
 1683 0028 02B0     		add	sp, sp, #8
 1684              		@ sp needed
 1685 002a 80BD     		pop	{r7, pc}
 1686              	.L103:
 1687              		.align	2
 1688              	.L102:
 1689 002c 00E100E0 		.word	-536813312
 1690              		.cfi_endproc
 1691              	.LFE26:
 1692              		.size	CyIntGetState, .-CyIntGetState
 1693              		.section	.text.CyIntDisable,"ax",%progbits
 1694              		.align	2
 1695              		.global	CyIntDisable
 1696              		.code	16
 1697              		.thumb_func
 1698              		.type	CyIntDisable, %function
 1699              	CyIntDisable:
 1700              	.LFB27:
2420:Generated_Source\PSoC4/CyLib.c **** 
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2423:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2424:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2425:Generated_Source\PSoC4/CyLib.c **** *
2426:Generated_Source\PSoC4/CyLib.c **** * Summary:
2427:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2428:Generated_Source\PSoC4/CyLib.c **** *
2429:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2430:Generated_Source\PSoC4/CyLib.c **** *   number: Valid range [0-31].  Interrupt number.
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** * Return:
2433:Generated_Source\PSoC4/CyLib.c **** *  None
2434:Generated_Source\PSoC4/CyLib.c **** *
2435:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2436:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2437:Generated_Source\PSoC4/CyLib.c **** {
 1701              		.loc 1 2437 0
 1702              		.cfi_startproc
 1703 0000 80B5     		push	{r7, lr}
 1704              		.cfi_def_cfa_offset 8
 1705              		.cfi_offset 7, -8
 1706              		.cfi_offset 14, -4
 1707 0002 82B0     		sub	sp, sp, #8
 1708              		.cfi_def_cfa_offset 16
 1709 0004 00AF     		add	r7, sp, #0
 1710              		.cfi_def_cfa_register 7
 1711 0006 021C     		mov	r2, r0
 1712 0008 FB1D     		add	r3, r7, #7
 1713 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 74


2438:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1714              		.loc 1 2438 0
 1715 000c 054B     		ldr	r3, .L105
 1716 000e FA1D     		add	r2, r7, #7
 1717 0010 1278     		ldrb	r2, [r2]
 1718 0012 1F21     		mov	r1, #31
 1719 0014 0A40     		and	r2, r1
 1720 0016 0121     		mov	r1, #1
 1721 0018 9140     		lsl	r1, r1, r2
 1722 001a 0A1C     		mov	r2, r1
 1723 001c 1A60     		str	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c **** }
 1724              		.loc 1 2439 0
 1725 001e BD46     		mov	sp, r7
 1726 0020 02B0     		add	sp, sp, #8
 1727              		@ sp needed
 1728 0022 80BD     		pop	{r7, pc}
 1729              	.L106:
 1730              		.align	2
 1731              	.L105:
 1732 0024 80E100E0 		.word	-536813184
 1733              		.cfi_endproc
 1734              	.LFE27:
 1735              		.size	CyIntDisable, .-CyIntDisable
 1736              		.section	.text.CyIntSetPending,"ax",%progbits
 1737              		.align	2
 1738              		.global	CyIntSetPending
 1739              		.code	16
 1740              		.thumb_func
 1741              		.type	CyIntSetPending, %function
 1742              	CyIntSetPending:
 1743              	.LFB28:
2440:Generated_Source\PSoC4/CyLib.c **** 
2441:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2442:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2443:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** *
2445:Generated_Source\PSoC4/CyLib.c **** * Summary:
2446:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2447:Generated_Source\PSoC4/CyLib.c **** *
2448:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2449:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * Return:
2452:Generated_Source\PSoC4/CyLib.c **** *  None
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 1744              		.loc 1 2456 0
 1745              		.cfi_startproc
 1746 0000 80B5     		push	{r7, lr}
 1747              		.cfi_def_cfa_offset 8
 1748              		.cfi_offset 7, -8
 1749              		.cfi_offset 14, -4
 1750 0002 82B0     		sub	sp, sp, #8
 1751              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 75


 1752 0004 00AF     		add	r7, sp, #0
 1753              		.cfi_def_cfa_register 7
 1754 0006 021C     		mov	r2, r0
 1755 0008 FB1D     		add	r3, r7, #7
 1756 000a 1A70     		strb	r2, [r3]
2457:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1757              		.loc 1 2457 0
 1758 000c 054B     		ldr	r3, .L108
 1759 000e FA1D     		add	r2, r7, #7
 1760 0010 1278     		ldrb	r2, [r2]
 1761 0012 1F21     		mov	r1, #31
 1762 0014 0A40     		and	r2, r1
 1763 0016 0121     		mov	r1, #1
 1764 0018 9140     		lsl	r1, r1, r2
 1765 001a 0A1C     		mov	r2, r1
 1766 001c 1A60     		str	r2, [r3]
2458:Generated_Source\PSoC4/CyLib.c **** }
 1767              		.loc 1 2458 0
 1768 001e BD46     		mov	sp, r7
 1769 0020 02B0     		add	sp, sp, #8
 1770              		@ sp needed
 1771 0022 80BD     		pop	{r7, pc}
 1772              	.L109:
 1773              		.align	2
 1774              	.L108:
 1775 0024 00E200E0 		.word	-536813056
 1776              		.cfi_endproc
 1777              	.LFE28:
 1778              		.size	CyIntSetPending, .-CyIntSetPending
 1779              		.section	.text.CyIntClearPending,"ax",%progbits
 1780              		.align	2
 1781              		.global	CyIntClearPending
 1782              		.code	16
 1783              		.thumb_func
 1784              		.type	CyIntClearPending, %function
 1785              	CyIntClearPending:
 1786              	.LFB29:
2459:Generated_Source\PSoC4/CyLib.c **** 
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2462:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2463:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2464:Generated_Source\PSoC4/CyLib.c **** *
2465:Generated_Source\PSoC4/CyLib.c **** * Summary:
2466:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2469:Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2470:Generated_Source\PSoC4/CyLib.c **** *
2471:Generated_Source\PSoC4/CyLib.c **** * Return:
2472:Generated_Source\PSoC4/CyLib.c **** *  None
2473:Generated_Source\PSoC4/CyLib.c **** *
2474:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2475:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2476:Generated_Source\PSoC4/CyLib.c **** {
 1787              		.loc 1 2476 0
 1788              		.cfi_startproc
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 76


 1789 0000 80B5     		push	{r7, lr}
 1790              		.cfi_def_cfa_offset 8
 1791              		.cfi_offset 7, -8
 1792              		.cfi_offset 14, -4
 1793 0002 82B0     		sub	sp, sp, #8
 1794              		.cfi_def_cfa_offset 16
 1795 0004 00AF     		add	r7, sp, #0
 1796              		.cfi_def_cfa_register 7
 1797 0006 021C     		mov	r2, r0
 1798 0008 FB1D     		add	r3, r7, #7
 1799 000a 1A70     		strb	r2, [r3]
2477:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1800              		.loc 1 2477 0
 1801 000c 054B     		ldr	r3, .L111
 1802 000e FA1D     		add	r2, r7, #7
 1803 0010 1278     		ldrb	r2, [r2]
 1804 0012 1F21     		mov	r1, #31
 1805 0014 0A40     		and	r2, r1
 1806 0016 0121     		mov	r1, #1
 1807 0018 9140     		lsl	r1, r1, r2
 1808 001a 0A1C     		mov	r2, r1
 1809 001c 1A60     		str	r2, [r3]
2478:Generated_Source\PSoC4/CyLib.c **** }
 1810              		.loc 1 2478 0
 1811 001e BD46     		mov	sp, r7
 1812 0020 02B0     		add	sp, sp, #8
 1813              		@ sp needed
 1814 0022 80BD     		pop	{r7, pc}
 1815              	.L112:
 1816              		.align	2
 1817              	.L111:
 1818 0024 80E200E0 		.word	-536812928
 1819              		.cfi_endproc
 1820              	.LFE29:
 1821              		.size	CyIntClearPending, .-CyIntClearPending
 1822              		.section	.text.CyHalt,"ax",%progbits
 1823              		.align	2
 1824              		.global	CyHalt
 1825              		.code	16
 1826              		.thumb_func
 1827              		.type	CyHalt, %function
 1828              	CyHalt:
 1829              	.LFB30:
2479:Generated_Source\PSoC4/CyLib.c **** 
2480:Generated_Source\PSoC4/CyLib.c **** 
2481:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2482:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2483:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2484:Generated_Source\PSoC4/CyLib.c **** *
2485:Generated_Source\PSoC4/CyLib.c **** * Summary:
2486:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2487:Generated_Source\PSoC4/CyLib.c **** *
2488:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2489:Generated_Source\PSoC4/CyLib.c **** *  reason: Value to be used during debugging.
2490:Generated_Source\PSoC4/CyLib.c **** *
2491:Generated_Source\PSoC4/CyLib.c **** * Return:
2492:Generated_Source\PSoC4/CyLib.c **** *  None
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 77


2493:Generated_Source\PSoC4/CyLib.c **** *
2494:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2495:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2496:Generated_Source\PSoC4/CyLib.c **** {
 1830              		.loc 1 2496 0
 1831              		.cfi_startproc
 1832 0000 80B5     		push	{r7, lr}
 1833              		.cfi_def_cfa_offset 8
 1834              		.cfi_offset 7, -8
 1835              		.cfi_offset 14, -4
 1836 0002 82B0     		sub	sp, sp, #8
 1837              		.cfi_def_cfa_offset 16
 1838 0004 00AF     		add	r7, sp, #0
 1839              		.cfi_def_cfa_register 7
 1840 0006 021C     		mov	r2, r0
 1841 0008 FB1D     		add	r3, r7, #7
 1842 000a 1A70     		strb	r2, [r3]
2497:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2498:Generated_Source\PSoC4/CyLib.c ****     {
2499:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2500:Generated_Source\PSoC4/CyLib.c ****     }
2501:Generated_Source\PSoC4/CyLib.c **** 
2502:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2503:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2504:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2505:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1843              		.loc 1 2505 0
 1844              	@ 2505 "Generated_Source\PSoC4\CyLib.c" 1
 1845 000c 01BE     		    bkpt    1
 1846              	@ 0 "" 2
2506:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2507:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2508:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2509:Generated_Source\PSoC4/CyLib.c **** }
 1847              		.loc 1 2509 0
 1848              		.code	16
 1849 000e BD46     		mov	sp, r7
 1850 0010 02B0     		add	sp, sp, #8
 1851              		@ sp needed
 1852 0012 80BD     		pop	{r7, pc}
 1853              		.cfi_endproc
 1854              	.LFE30:
 1855              		.size	CyHalt, .-CyHalt
 1856              		.section	.text.CySoftwareReset,"ax",%progbits
 1857              		.align	2
 1858              		.global	CySoftwareReset
 1859              		.code	16
 1860              		.thumb_func
 1861              		.type	CySoftwareReset, %function
 1862              	CySoftwareReset:
 1863              	.LFB31:
2510:Generated_Source\PSoC4/CyLib.c **** 
2511:Generated_Source\PSoC4/CyLib.c **** 
2512:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2513:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2514:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2515:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 78


2516:Generated_Source\PSoC4/CyLib.c **** * Summary:
2517:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2518:Generated_Source\PSoC4/CyLib.c **** *
2519:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2520:Generated_Source\PSoC4/CyLib.c **** *  None
2521:Generated_Source\PSoC4/CyLib.c **** *
2522:Generated_Source\PSoC4/CyLib.c **** * Return:
2523:Generated_Source\PSoC4/CyLib.c **** *  None
2524:Generated_Source\PSoC4/CyLib.c **** *
2525:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2526:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2527:Generated_Source\PSoC4/CyLib.c **** {
 1864              		.loc 1 2527 0
 1865              		.cfi_startproc
 1866 0000 80B5     		push	{r7, lr}
 1867              		.cfi_def_cfa_offset 8
 1868              		.cfi_offset 7, -8
 1869              		.cfi_offset 14, -4
 1870 0002 00AF     		add	r7, sp, #0
 1871              		.cfi_def_cfa_register 7
2528:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2529:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2530:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2531:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2532:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 1872              		.loc 1 2532 0
 1873 0004 044B     		ldr	r3, .L115
 1874 0006 044A     		ldr	r2, .L115
 1875 0008 1268     		ldr	r2, [r2]
 1876 000a 1204     		lsl	r2, r2, #16
 1877 000c 120C     		lsr	r2, r2, #16
2533:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 1878              		.loc 1 2533 0
 1879 000e 0349     		ldr	r1, .L115+4
 1880 0010 0A43     		orr	r2, r1
2532:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 1881              		.loc 1 2532 0
 1882 0012 1A60     		str	r2, [r3]
2534:Generated_Source\PSoC4/CyLib.c **** }
 1883              		.loc 1 2534 0
 1884 0014 BD46     		mov	sp, r7
 1885              		@ sp needed
 1886 0016 80BD     		pop	{r7, pc}
 1887              	.L116:
 1888              		.align	2
 1889              	.L115:
 1890 0018 0CED00E0 		.word	-536810228
 1891 001c 0400FA05 		.word	100270084
 1892              		.cfi_endproc
 1893              	.LFE31:
 1894              		.size	CySoftwareReset, .-CySoftwareReset
 1895              		.section	.text.CyDelay,"ax",%progbits
 1896              		.align	2
 1897              		.global	CyDelay
 1898              		.code	16
 1899              		.thumb_func
 1900              		.type	CyDelay, %function
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 79


 1901              	CyDelay:
 1902              	.LFB32:
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c **** 
2537:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2538:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2539:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2540:Generated_Source\PSoC4/CyLib.c **** *
2541:Generated_Source\PSoC4/CyLib.c **** * Summary:
2542:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2543:Generated_Source\PSoC4/CyLib.c **** *
2544:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2545:Generated_Source\PSoC4/CyLib.c **** *  milliseconds: number of milliseconds to delay.
2546:Generated_Source\PSoC4/CyLib.c **** *
2547:Generated_Source\PSoC4/CyLib.c **** * Return:
2548:Generated_Source\PSoC4/CyLib.c **** *  None
2549:Generated_Source\PSoC4/CyLib.c **** *
2550:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2551:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2552:Generated_Source\PSoC4/CyLib.c **** {
 1903              		.loc 1 2552 0
 1904              		.cfi_startproc
 1905 0000 80B5     		push	{r7, lr}
 1906              		.cfi_def_cfa_offset 8
 1907              		.cfi_offset 7, -8
 1908              		.cfi_offset 14, -4
 1909 0002 82B0     		sub	sp, sp, #8
 1910              		.cfi_def_cfa_offset 16
 1911 0004 00AF     		add	r7, sp, #0
 1912              		.cfi_def_cfa_register 7
 1913 0006 7860     		str	r0, [r7, #4]
2553:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1914              		.loc 1 2553 0
 1915 0008 09E0     		b	.L118
 1916              	.L119:
2554:Generated_Source\PSoC4/CyLib.c ****     {
2555:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2556:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2557:Generated_Source\PSoC4/CyLib.c ****          */
2558:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1917              		.loc 1 2558 0
 1918 000a 0C4B     		ldr	r3, .L120
 1919 000c 1B68     		ldr	r3, [r3]
 1920 000e 181C     		mov	r0, r3
 1921 0010 FFF7FEFF 		bl	CyDelayCycles
2559:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1922              		.loc 1 2559 0
 1923 0014 7B68     		ldr	r3, [r7, #4]
 1924 0016 0A4A     		ldr	r2, .L120+4
 1925 0018 9446     		mov	ip, r2
 1926 001a 6344     		add	r3, r3, ip
 1927 001c 7B60     		str	r3, [r7, #4]
 1928              	.L118:
2553:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1929              		.loc 1 2553 0
 1930 001e 7A68     		ldr	r2, [r7, #4]
 1931 0020 8023     		mov	r3, #128
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 80


 1932 0022 1B02     		lsl	r3, r3, #8
 1933 0024 9A42     		cmp	r2, r3
 1934 0026 F0D8     		bhi	.L119
2560:Generated_Source\PSoC4/CyLib.c ****     }
2561:Generated_Source\PSoC4/CyLib.c **** 
2562:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1935              		.loc 1 2562 0
 1936 0028 064B     		ldr	r3, .L120+8
 1937 002a 1B68     		ldr	r3, [r3]
 1938 002c 7A68     		ldr	r2, [r7, #4]
 1939 002e 5343     		mul	r3, r2
 1940 0030 181C     		mov	r0, r3
 1941 0032 FFF7FEFF 		bl	CyDelayCycles
2563:Generated_Source\PSoC4/CyLib.c **** }
 1942              		.loc 1 2563 0
 1943 0036 BD46     		mov	sp, r7
 1944 0038 02B0     		add	sp, sp, #8
 1945              		@ sp needed
 1946 003a 80BD     		pop	{r7, pc}
 1947              	.L121:
 1948              		.align	2
 1949              	.L120:
 1950 003c 00000000 		.word	cydelay32kMs
 1951 0040 0080FFFF 		.word	-32768
 1952 0044 00000000 		.word	cydelayFreqKhz
 1953              		.cfi_endproc
 1954              	.LFE32:
 1955              		.size	CyDelay, .-CyDelay
 1956              		.section	.text.CyDelayUs,"ax",%progbits
 1957              		.align	2
 1958              		.global	CyDelayUs
 1959              		.code	16
 1960              		.thumb_func
 1961              		.type	CyDelayUs, %function
 1962              	CyDelayUs:
 1963              	.LFB33:
2564:Generated_Source\PSoC4/CyLib.c **** 
2565:Generated_Source\PSoC4/CyLib.c **** 
2566:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2567:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2568:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2569:Generated_Source\PSoC4/CyLib.c **** * Summary:
2570:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2571:Generated_Source\PSoC4/CyLib.c **** *
2572:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2573:Generated_Source\PSoC4/CyLib.c **** *  microseconds: number of microseconds to delay.
2574:Generated_Source\PSoC4/CyLib.c **** *
2575:Generated_Source\PSoC4/CyLib.c **** * Return:
2576:Generated_Source\PSoC4/CyLib.c **** *  None
2577:Generated_Source\PSoC4/CyLib.c **** *
2578:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2579:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2580:Generated_Source\PSoC4/CyLib.c **** {
 1964              		.loc 1 2580 0
 1965              		.cfi_startproc
 1966 0000 80B5     		push	{r7, lr}
 1967              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 81


 1968              		.cfi_offset 7, -8
 1969              		.cfi_offset 14, -4
 1970 0002 82B0     		sub	sp, sp, #8
 1971              		.cfi_def_cfa_offset 16
 1972 0004 00AF     		add	r7, sp, #0
 1973              		.cfi_def_cfa_register 7
 1974 0006 021C     		mov	r2, r0
 1975 0008 BB1D     		add	r3, r7, #6
 1976 000a 1A80     		strh	r2, [r3]
2581:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1977              		.loc 1 2581 0
 1978 000c BB1D     		add	r3, r7, #6
 1979 000e 1B88     		ldrh	r3, [r3]
 1980 0010 044A     		ldr	r2, .L123
 1981 0012 1278     		ldrb	r2, [r2]
 1982 0014 5343     		mul	r3, r2
 1983 0016 181C     		mov	r0, r3
 1984 0018 FFF7FEFF 		bl	CyDelayCycles
2582:Generated_Source\PSoC4/CyLib.c **** }
 1985              		.loc 1 2582 0
 1986 001c BD46     		mov	sp, r7
 1987 001e 02B0     		add	sp, sp, #8
 1988              		@ sp needed
 1989 0020 80BD     		pop	{r7, pc}
 1990              	.L124:
 1991 0022 C046     		.align	2
 1992              	.L123:
 1993 0024 00000000 		.word	cydelayFreqMhz
 1994              		.cfi_endproc
 1995              	.LFE33:
 1996              		.size	CyDelayUs, .-CyDelayUs
 1997              		.global	__aeabi_uidiv
 1998              		.section	.text.CyDelayFreq,"ax",%progbits
 1999              		.align	2
 2000              		.global	CyDelayFreq
 2001              		.code	16
 2002              		.thumb_func
 2003              		.type	CyDelayFreq, %function
 2004              	CyDelayFreq:
 2005              	.LFB34:
2583:Generated_Source\PSoC4/CyLib.c **** 
2584:Generated_Source\PSoC4/CyLib.c **** 
2585:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2586:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2587:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2588:Generated_Source\PSoC4/CyLib.c **** * Summary:
2589:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2590:Generated_Source\PSoC4/CyLib.c **** *
2591:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2592:Generated_Source\PSoC4/CyLib.c **** *  freq: Frequency of bus clock in Hertz.
2593:Generated_Source\PSoC4/CyLib.c **** *
2594:Generated_Source\PSoC4/CyLib.c **** * Return:
2595:Generated_Source\PSoC4/CyLib.c **** *  None
2596:Generated_Source\PSoC4/CyLib.c **** *
2597:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2598:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2599:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 82


 2006              		.loc 1 2599 0
 2007              		.cfi_startproc
 2008 0000 80B5     		push	{r7, lr}
 2009              		.cfi_def_cfa_offset 8
 2010              		.cfi_offset 7, -8
 2011              		.cfi_offset 14, -4
 2012 0002 82B0     		sub	sp, sp, #8
 2013              		.cfi_def_cfa_offset 16
 2014 0004 00AF     		add	r7, sp, #0
 2015              		.cfi_def_cfa_register 7
 2016 0006 7860     		str	r0, [r7, #4]
2600:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 2017              		.loc 1 2600 0
 2018 0008 7B68     		ldr	r3, [r7, #4]
 2019 000a 002B     		cmp	r3, #0
 2020 000c 03D0     		beq	.L126
2601:Generated_Source\PSoC4/CyLib.c ****     {
2602:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 2021              		.loc 1 2602 0
 2022 000e 154B     		ldr	r3, .L128
 2023 0010 7A68     		ldr	r2, [r7, #4]
 2024 0012 1A60     		str	r2, [r3]
 2025 0014 02E0     		b	.L127
 2026              	.L126:
2603:Generated_Source\PSoC4/CyLib.c ****     }
2604:Generated_Source\PSoC4/CyLib.c ****     else
2605:Generated_Source\PSoC4/CyLib.c ****     {
2606:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 2027              		.loc 1 2606 0
 2028 0016 134B     		ldr	r3, .L128
 2029 0018 134A     		ldr	r2, .L128+4
 2030 001a 1A60     		str	r2, [r3]
 2031              	.L127:
2607:Generated_Source\PSoC4/CyLib.c ****     }
2608:Generated_Source\PSoC4/CyLib.c **** 
2609:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 2032              		.loc 1 2609 0
 2033 001c 114B     		ldr	r3, .L128
 2034 001e 1B68     		ldr	r3, [r3]
 2035 0020 124A     		ldr	r2, .L128+8
 2036 0022 9446     		mov	ip, r2
 2037 0024 6344     		add	r3, r3, ip
 2038 0026 181C     		mov	r0, r3
 2039 0028 1149     		ldr	r1, .L128+12
 2040 002a FFF7FEFF 		bl	__aeabi_uidiv
 2041 002e 031C     		mov	r3, r0
 2042 0030 DAB2     		uxtb	r2, r3
 2043 0032 104B     		ldr	r3, .L128+16
 2044 0034 1A70     		strb	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 2045              		.loc 1 2610 0
 2046 0036 0B4B     		ldr	r3, .L128
 2047 0038 1B68     		ldr	r3, [r3]
 2048 003a 0F4A     		ldr	r2, .L128+20
 2049 003c 9446     		mov	ip, r2
 2050 003e 6344     		add	r3, r3, ip
 2051 0040 181C     		mov	r0, r3
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 83


 2052 0042 FA23     		mov	r3, #250
 2053 0044 9900     		lsl	r1, r3, #2
 2054 0046 FFF7FEFF 		bl	__aeabi_uidiv
 2055 004a 031C     		mov	r3, r0
 2056 004c 1A1C     		mov	r2, r3
 2057 004e 0B4B     		ldr	r3, .L128+24
 2058 0050 1A60     		str	r2, [r3]
2611:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 2059              		.loc 1 2611 0
 2060 0052 0A4B     		ldr	r3, .L128+24
 2061 0054 1B68     		ldr	r3, [r3]
 2062 0056 DA03     		lsl	r2, r3, #15
 2063 0058 094B     		ldr	r3, .L128+28
 2064 005a 1A60     		str	r2, [r3]
2612:Generated_Source\PSoC4/CyLib.c **** }
 2065              		.loc 1 2612 0
 2066 005c BD46     		mov	sp, r7
 2067 005e 02B0     		add	sp, sp, #8
 2068              		@ sp needed
 2069 0060 80BD     		pop	{r7, pc}
 2070              	.L129:
 2071 0062 C046     		.align	2
 2072              	.L128:
 2073 0064 00000000 		.word	cydelayFreqHz
 2074 0068 001BB700 		.word	12000000
 2075 006c 3F420F00 		.word	999999
 2076 0070 40420F00 		.word	1000000
 2077 0074 00000000 		.word	cydelayFreqMhz
 2078 0078 E7030000 		.word	999
 2079 007c 00000000 		.word	cydelayFreqKhz
 2080 0080 00000000 		.word	cydelay32kMs
 2081              		.cfi_endproc
 2082              	.LFE34:
 2083              		.size	CyDelayFreq, .-CyDelayFreq
 2084              		.section	.text.CySysTickStart,"ax",%progbits
 2085              		.align	2
 2086              		.global	CySysTickStart
 2087              		.code	16
 2088              		.thumb_func
 2089              		.type	CySysTickStart, %function
 2090              	CySysTickStart:
 2091              	.LFB35:
2613:Generated_Source\PSoC4/CyLib.c **** 
2614:Generated_Source\PSoC4/CyLib.c **** 
2615:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2616:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStart
2617:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2618:Generated_Source\PSoC4/CyLib.c **** *
2619:Generated_Source\PSoC4/CyLib.c **** * Summary:
2620:Generated_Source\PSoC4/CyLib.c **** *  Configures the SysTick timer to generate an interrupt every 1 ms and enables
2621:Generated_Source\PSoC4/CyLib.c **** *  the interrupt. Refer to the corresponding function description for details.
2622:Generated_Source\PSoC4/CyLib.c **** *
2623:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2624:Generated_Source\PSoC4/CyLib.c **** *  None
2625:Generated_Source\PSoC4/CyLib.c **** *
2626:Generated_Source\PSoC4/CyLib.c **** * Return:
2627:Generated_Source\PSoC4/CyLib.c **** *  None
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 84


2628:Generated_Source\PSoC4/CyLib.c **** *
2629:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2630:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2634:Generated_Source\PSoC4/CyLib.c **** {
 2092              		.loc 1 2634 0
 2093              		.cfi_startproc
 2094 0000 80B5     		push	{r7, lr}
 2095              		.cfi_def_cfa_offset 8
 2096              		.cfi_offset 7, -8
 2097              		.cfi_offset 14, -4
 2098 0002 00AF     		add	r7, sp, #0
 2099              		.cfi_def_cfa_register 7
2635:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2100              		.loc 1 2635 0
 2101 0004 064B     		ldr	r3, .L132
 2102 0006 1B68     		ldr	r3, [r3]
 2103 0008 002B     		cmp	r3, #0
 2104 000a 04D1     		bne	.L131
2636:Generated_Source\PSoC4/CyLib.c ****     {
2637:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 2105              		.loc 1 2637 0
 2106 000c FFF7FEFF 		bl	CySysTickInit
2638:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2107              		.loc 1 2638 0
 2108 0010 034B     		ldr	r3, .L132
 2109 0012 0122     		mov	r2, #1
 2110 0014 1A60     		str	r2, [r3]
 2111              	.L131:
2639:Generated_Source\PSoC4/CyLib.c ****     }
2640:Generated_Source\PSoC4/CyLib.c **** 
2641:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 2112              		.loc 1 2641 0
 2113 0016 FFF7FEFF 		bl	CySysTickEnable
2642:Generated_Source\PSoC4/CyLib.c **** }
 2114              		.loc 1 2642 0
 2115 001a BD46     		mov	sp, r7
 2116              		@ sp needed
 2117 001c 80BD     		pop	{r7, pc}
 2118              	.L133:
 2119 001e C046     		.align	2
 2120              	.L132:
 2121 0020 00000000 		.word	CySysTickInitVar
 2122              		.cfi_endproc
 2123              	.LFE35:
 2124              		.size	CySysTickStart, .-CySysTickStart
 2125              		.section	.text.CySysTickInit,"ax",%progbits
 2126              		.align	2
 2127              		.global	CySysTickInit
 2128              		.code	16
 2129              		.thumb_func
 2130              		.type	CySysTickInit, %function
 2131              	CySysTickInit:
 2132              	.LFB36:
2643:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 85


2644:Generated_Source\PSoC4/CyLib.c **** 
2645:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2646:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2647:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** * Summary:
2650:Generated_Source\PSoC4/CyLib.c ****     *  Initializes the callback addresses with pointers to NULL, associates the
2651:Generated_Source\PSoC4/CyLib.c ****     *  SysTick system vector with the function that is responsible for calling
2652:Generated_Source\PSoC4/CyLib.c ****     *  registered callback functions, configures SysTick timer to generate interrupt
2653:Generated_Source\PSoC4/CyLib.c ****     *  every 1 ms.
2654:Generated_Source\PSoC4/CyLib.c ****     *
2655:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2656:Generated_Source\PSoC4/CyLib.c ****     *  None
2657:Generated_Source\PSoC4/CyLib.c ****     *
2658:Generated_Source\PSoC4/CyLib.c ****     * Return:
2659:Generated_Source\PSoC4/CyLib.c ****     *  None
2660:Generated_Source\PSoC4/CyLib.c ****     *
2661:Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
2662:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set.
2663:Generated_Source\PSoC4/CyLib.c ****     *
2664:Generated_Source\PSoC4/CyLib.c ****     *  The 1 ms interrupt interval is configured based on the frequency determined
2665:Generated_Source\PSoC4/CyLib.c ****     *  by PSoC Creator at build time. If System clock frequency is changed in
2666:Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2667:Generated_Source\PSoC4/CyLib.c ****     *
2668:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:Generated_Source\PSoC4/CyLib.c ****     void CySysTickInit(void)
2670:Generated_Source\PSoC4/CyLib.c ****     {
 2133              		.loc 1 2670 0
 2134              		.cfi_startproc
 2135 0000 80B5     		push	{r7, lr}
 2136              		.cfi_def_cfa_offset 8
 2137              		.cfi_offset 7, -8
 2138              		.cfi_offset 14, -4
 2139 0002 82B0     		sub	sp, sp, #8
 2140              		.cfi_def_cfa_offset 16
 2141 0004 00AF     		add	r7, sp, #0
 2142              		.cfi_def_cfa_register 7
2671:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
2672:Generated_Source\PSoC4/CyLib.c **** 
2673:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2143              		.loc 1 2673 0
 2144 0006 0023     		mov	r3, #0
 2145 0008 7B60     		str	r3, [r7, #4]
 2146 000a 07E0     		b	.L135
 2147              	.L136:
2674:Generated_Source\PSoC4/CyLib.c ****     {
2675:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 2148              		.loc 1 2675 0 discriminator 3
 2149 000c 124B     		ldr	r3, .L137
 2150 000e 7A68     		ldr	r2, [r7, #4]
 2151 0010 9200     		lsl	r2, r2, #2
 2152 0012 0021     		mov	r1, #0
 2153 0014 D150     		str	r1, [r2, r3]
2673:Generated_Source\PSoC4/CyLib.c ****     {
 2154              		.loc 1 2673 0 discriminator 3
 2155 0016 7B68     		ldr	r3, [r7, #4]
 2156 0018 0133     		add	r3, r3, #1
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 86


 2157 001a 7B60     		str	r3, [r7, #4]
 2158              	.L135:
2673:Generated_Source\PSoC4/CyLib.c ****     {
 2159              		.loc 1 2673 0 is_stmt 0 discriminator 1
 2160 001c 7B68     		ldr	r3, [r7, #4]
 2161 001e 042B     		cmp	r3, #4
 2162 0020 F4D9     		bls	.L136
2676:Generated_Source\PSoC4/CyLib.c ****     }
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2163              		.loc 1 2678 0 is_stmt 1
 2164 0022 0E4B     		ldr	r3, .L137+4
 2165 0024 0F20     		mov	r0, #15
 2166 0026 191C     		mov	r1, r3
 2167 0028 FFF7FEFF 		bl	CyIntSetSysVector
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2681:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 2168              		.loc 1 2681 0
 2169 002c 0120     		mov	r0, #1
 2170 002e FFF7FEFF 		bl	CySysTickSetClockSource
2682:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2683:Generated_Source\PSoC4/CyLib.c **** 
2684:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2171              		.loc 1 2684 0
 2172 0032 0B4B     		ldr	r3, .L137+8
 2173 0034 1B68     		ldr	r3, [r3]
 2174 0036 181C     		mov	r0, r3
 2175 0038 FA23     		mov	r3, #250
 2176 003a 9900     		lsl	r1, r3, #2
 2177 003c FFF7FEFF 		bl	__aeabi_uidiv
 2178 0040 031C     		mov	r3, r0
 2179 0042 181C     		mov	r0, r3
 2180 0044 FFF7FEFF 		bl	CySysTickSetReload
2685:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2181              		.loc 1 2685 0
 2182 0048 FFF7FEFF 		bl	CySysTickClear
2686:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 2183              		.loc 1 2686 0
 2184 004c 0F20     		mov	r0, #15
 2185 004e FFF7FEFF 		bl	CyIntEnable
2687:Generated_Source\PSoC4/CyLib.c **** }
 2186              		.loc 1 2687 0
 2187 0052 BD46     		mov	sp, r7
 2188 0054 02B0     		add	sp, sp, #8
 2189              		@ sp needed
 2190 0056 80BD     		pop	{r7, pc}
 2191              	.L138:
 2192              		.align	2
 2193              	.L137:
 2194 0058 00000000 		.word	CySysTickCallbacks
 2195 005c 00000000 		.word	CySysTickServiceCallbacks
 2196 0060 00000000 		.word	cydelayFreqHz
 2197              		.cfi_endproc
 2198              	.LFE36:
 2199              		.size	CySysTickInit, .-CySysTickInit
 2200              		.section	.text.CySysTickEnable,"ax",%progbits
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 87


 2201              		.align	2
 2202              		.global	CySysTickEnable
 2203              		.code	16
 2204              		.thumb_func
 2205              		.type	CySysTickEnable, %function
 2206              	CySysTickEnable:
 2207              	.LFB37:
2688:Generated_Source\PSoC4/CyLib.c **** 
2689:Generated_Source\PSoC4/CyLib.c **** 
2690:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2691:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2692:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2693:Generated_Source\PSoC4/CyLib.c **** *
2694:Generated_Source\PSoC4/CyLib.c **** * Summary:
2695:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2696:Generated_Source\PSoC4/CyLib.c **** *
2697:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2698:Generated_Source\PSoC4/CyLib.c **** *  None
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * Return:
2701:Generated_Source\PSoC4/CyLib.c **** *  None
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2704:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2705:Generated_Source\PSoC4/CyLib.c **** *
2706:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2708:Generated_Source\PSoC4/CyLib.c **** {
 2208              		.loc 1 2708 0
 2209              		.cfi_startproc
 2210 0000 80B5     		push	{r7, lr}
 2211              		.cfi_def_cfa_offset 8
 2212              		.cfi_offset 7, -8
 2213              		.cfi_offset 14, -4
 2214 0002 00AF     		add	r7, sp, #0
 2215              		.cfi_def_cfa_register 7
2709:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2216              		.loc 1 2709 0
 2217 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2710:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2218              		.loc 1 2710 0
 2219 0008 034B     		ldr	r3, .L140
 2220 000a 034A     		ldr	r2, .L140
 2221 000c 1268     		ldr	r2, [r2]
 2222 000e 0121     		mov	r1, #1
 2223 0010 0A43     		orr	r2, r1
 2224 0012 1A60     		str	r2, [r3]
2711:Generated_Source\PSoC4/CyLib.c **** }
 2225              		.loc 1 2711 0
 2226 0014 BD46     		mov	sp, r7
 2227              		@ sp needed
 2228 0016 80BD     		pop	{r7, pc}
 2229              	.L141:
 2230              		.align	2
 2231              	.L140:
 2232 0018 10E000E0 		.word	-536813552
 2233              		.cfi_endproc
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 88


 2234              	.LFE37:
 2235              		.size	CySysTickEnable, .-CySysTickEnable
 2236              		.section	.text.CySysTickStop,"ax",%progbits
 2237              		.align	2
 2238              		.global	CySysTickStop
 2239              		.code	16
 2240              		.thumb_func
 2241              		.type	CySysTickStop, %function
 2242              	CySysTickStop:
 2243              	.LFB38:
2712:Generated_Source\PSoC4/CyLib.c **** 
2713:Generated_Source\PSoC4/CyLib.c **** 
2714:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2715:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2716:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2717:Generated_Source\PSoC4/CyLib.c **** *
2718:Generated_Source\PSoC4/CyLib.c **** * Summary:
2719:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2720:Generated_Source\PSoC4/CyLib.c **** *
2721:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2722:Generated_Source\PSoC4/CyLib.c **** *  None
2723:Generated_Source\PSoC4/CyLib.c **** *
2724:Generated_Source\PSoC4/CyLib.c **** * Return:
2725:Generated_Source\PSoC4/CyLib.c **** *  None
2726:Generated_Source\PSoC4/CyLib.c **** *
2727:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2728:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2731:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2732:Generated_Source\PSoC4/CyLib.c **** {
 2244              		.loc 1 2732 0
 2245              		.cfi_startproc
 2246 0000 80B5     		push	{r7, lr}
 2247              		.cfi_def_cfa_offset 8
 2248              		.cfi_offset 7, -8
 2249              		.cfi_offset 14, -4
 2250 0002 00AF     		add	r7, sp, #0
 2251              		.cfi_def_cfa_register 7
2733:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2252              		.loc 1 2733 0
 2253 0004 034B     		ldr	r3, .L143
 2254 0006 034A     		ldr	r2, .L143
 2255 0008 1268     		ldr	r2, [r2]
 2256 000a 0121     		mov	r1, #1
 2257 000c 8A43     		bic	r2, r1
 2258 000e 1A60     		str	r2, [r3]
2734:Generated_Source\PSoC4/CyLib.c **** }
 2259              		.loc 1 2734 0
 2260 0010 BD46     		mov	sp, r7
 2261              		@ sp needed
 2262 0012 80BD     		pop	{r7, pc}
 2263              	.L144:
 2264              		.align	2
 2265              	.L143:
 2266 0014 10E000E0 		.word	-536813552
 2267              		.cfi_endproc
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 89


 2268              	.LFE38:
 2269              		.size	CySysTickStop, .-CySysTickStop
 2270              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2271              		.align	2
 2272              		.global	CySysTickEnableInterrupt
 2273              		.code	16
 2274              		.thumb_func
 2275              		.type	CySysTickEnableInterrupt, %function
 2276              	CySysTickEnableInterrupt:
 2277              	.LFB39:
2735:Generated_Source\PSoC4/CyLib.c **** 
2736:Generated_Source\PSoC4/CyLib.c **** 
2737:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2738:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2739:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** * Summary:
2742:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2743:Generated_Source\PSoC4/CyLib.c **** *
2744:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2745:Generated_Source\PSoC4/CyLib.c **** *  None
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** * Return:
2748:Generated_Source\PSoC4/CyLib.c **** *  None
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2751:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2755:Generated_Source\PSoC4/CyLib.c **** {
 2278              		.loc 1 2755 0
 2279              		.cfi_startproc
 2280 0000 80B5     		push	{r7, lr}
 2281              		.cfi_def_cfa_offset 8
 2282              		.cfi_offset 7, -8
 2283              		.cfi_offset 14, -4
 2284 0002 00AF     		add	r7, sp, #0
 2285              		.cfi_def_cfa_register 7
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2286              		.loc 1 2756 0
 2287 0004 034B     		ldr	r3, .L146
 2288 0006 034A     		ldr	r2, .L146
 2289 0008 1268     		ldr	r2, [r2]
 2290 000a 0221     		mov	r1, #2
 2291 000c 0A43     		orr	r2, r1
 2292 000e 1A60     		str	r2, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 2293              		.loc 1 2757 0
 2294 0010 BD46     		mov	sp, r7
 2295              		@ sp needed
 2296 0012 80BD     		pop	{r7, pc}
 2297              	.L147:
 2298              		.align	2
 2299              	.L146:
 2300 0014 10E000E0 		.word	-536813552
 2301              		.cfi_endproc
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 90


 2302              	.LFE39:
 2303              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2304              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2305              		.align	2
 2306              		.global	CySysTickDisableInterrupt
 2307              		.code	16
 2308              		.thumb_func
 2309              		.type	CySysTickDisableInterrupt, %function
 2310              	CySysTickDisableInterrupt:
 2311              	.LFB40:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2762:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** * Summary:
2765:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2766:Generated_Source\PSoC4/CyLib.c **** *
2767:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2768:Generated_Source\PSoC4/CyLib.c **** *  None
2769:Generated_Source\PSoC4/CyLib.c **** *
2770:Generated_Source\PSoC4/CyLib.c **** * Return:
2771:Generated_Source\PSoC4/CyLib.c **** *  None
2772:Generated_Source\PSoC4/CyLib.c **** *
2773:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2774:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2775:Generated_Source\PSoC4/CyLib.c **** *
2776:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2777:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2778:Generated_Source\PSoC4/CyLib.c **** {
 2312              		.loc 1 2778 0
 2313              		.cfi_startproc
 2314 0000 80B5     		push	{r7, lr}
 2315              		.cfi_def_cfa_offset 8
 2316              		.cfi_offset 7, -8
 2317              		.cfi_offset 14, -4
 2318 0002 00AF     		add	r7, sp, #0
 2319              		.cfi_def_cfa_register 7
2779:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2320              		.loc 1 2779 0
 2321 0004 034B     		ldr	r3, .L149
 2322 0006 034A     		ldr	r2, .L149
 2323 0008 1268     		ldr	r2, [r2]
 2324 000a 0221     		mov	r1, #2
 2325 000c 8A43     		bic	r2, r1
 2326 000e 1A60     		str	r2, [r3]
2780:Generated_Source\PSoC4/CyLib.c **** }
 2327              		.loc 1 2780 0
 2328 0010 BD46     		mov	sp, r7
 2329              		@ sp needed
 2330 0012 80BD     		pop	{r7, pc}
 2331              	.L150:
 2332              		.align	2
 2333              	.L149:
 2334 0014 10E000E0 		.word	-536813552
 2335              		.cfi_endproc
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 91


 2336              	.LFE40:
 2337              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2338              		.section	.text.CySysTickSetReload,"ax",%progbits
 2339              		.align	2
 2340              		.global	CySysTickSetReload
 2341              		.code	16
 2342              		.thumb_func
 2343              		.type	CySysTickSetReload, %function
 2344              	CySysTickSetReload:
 2345              	.LFB41:
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c **** 
2783:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2784:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2785:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2786:Generated_Source\PSoC4/CyLib.c **** *
2787:Generated_Source\PSoC4/CyLib.c **** * Summary:
2788:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2789:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2790:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2791:Generated_Source\PSoC4/CyLib.c **** *
2792:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2793:Generated_Source\PSoC4/CyLib.c **** *  value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2794:Generated_Source\PSoC4/CyLib.c **** *
2795:Generated_Source\PSoC4/CyLib.c **** * Return:
2796:Generated_Source\PSoC4/CyLib.c **** *  None
2797:Generated_Source\PSoC4/CyLib.c **** *
2798:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2799:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2800:Generated_Source\PSoC4/CyLib.c **** {
 2346              		.loc 1 2800 0
 2347              		.cfi_startproc
 2348 0000 80B5     		push	{r7, lr}
 2349              		.cfi_def_cfa_offset 8
 2350              		.cfi_offset 7, -8
 2351              		.cfi_offset 14, -4
 2352 0002 82B0     		sub	sp, sp, #8
 2353              		.cfi_def_cfa_offset 16
 2354 0004 00AF     		add	r7, sp, #0
 2355              		.cfi_def_cfa_register 7
 2356 0006 7860     		str	r0, [r7, #4]
2801:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2357              		.loc 1 2801 0
 2358 0008 034B     		ldr	r3, .L152
 2359 000a 7A68     		ldr	r2, [r7, #4]
 2360 000c 1202     		lsl	r2, r2, #8
 2361 000e 120A     		lsr	r2, r2, #8
 2362 0010 1A60     		str	r2, [r3]
2802:Generated_Source\PSoC4/CyLib.c **** }
 2363              		.loc 1 2802 0
 2364 0012 BD46     		mov	sp, r7
 2365 0014 02B0     		add	sp, sp, #8
 2366              		@ sp needed
 2367 0016 80BD     		pop	{r7, pc}
 2368              	.L153:
 2369              		.align	2
 2370              	.L152:
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 92


 2371 0018 14E000E0 		.word	-536813548
 2372              		.cfi_endproc
 2373              	.LFE41:
 2374              		.size	CySysTickSetReload, .-CySysTickSetReload
 2375              		.section	.text.CySysTickGetReload,"ax",%progbits
 2376              		.align	2
 2377              		.global	CySysTickGetReload
 2378              		.code	16
 2379              		.thumb_func
 2380              		.type	CySysTickGetReload, %function
 2381              	CySysTickGetReload:
 2382              	.LFB42:
2803:Generated_Source\PSoC4/CyLib.c **** 
2804:Generated_Source\PSoC4/CyLib.c **** 
2805:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2806:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2807:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2808:Generated_Source\PSoC4/CyLib.c **** *
2809:Generated_Source\PSoC4/CyLib.c **** * Summary:
2810:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero.
2811:Generated_Source\PSoC4/CyLib.c **** *
2812:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2813:Generated_Source\PSoC4/CyLib.c **** *  None
2814:Generated_Source\PSoC4/CyLib.c **** *
2815:Generated_Source\PSoC4/CyLib.c **** * Return:
2816:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2819:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2820:Generated_Source\PSoC4/CyLib.c **** {
 2383              		.loc 1 2820 0
 2384              		.cfi_startproc
 2385 0000 80B5     		push	{r7, lr}
 2386              		.cfi_def_cfa_offset 8
 2387              		.cfi_offset 7, -8
 2388              		.cfi_offset 14, -4
 2389 0002 00AF     		add	r7, sp, #0
 2390              		.cfi_def_cfa_register 7
2821:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2391              		.loc 1 2821 0
 2392 0004 034B     		ldr	r3, .L156
 2393 0006 1B68     		ldr	r3, [r3]
 2394 0008 1B02     		lsl	r3, r3, #8
 2395 000a 1B0A     		lsr	r3, r3, #8
2822:Generated_Source\PSoC4/CyLib.c **** }
 2396              		.loc 1 2822 0
 2397 000c 181C     		mov	r0, r3
 2398 000e BD46     		mov	sp, r7
 2399              		@ sp needed
 2400 0010 80BD     		pop	{r7, pc}
 2401              	.L157:
 2402 0012 C046     		.align	2
 2403              	.L156:
 2404 0014 14E000E0 		.word	-536813548
 2405              		.cfi_endproc
 2406              	.LFE42:
 2407              		.size	CySysTickGetReload, .-CySysTickGetReload
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 93


 2408              		.section	.text.CySysTickGetValue,"ax",%progbits
 2409              		.align	2
 2410              		.global	CySysTickGetValue
 2411              		.code	16
 2412              		.thumb_func
 2413              		.type	CySysTickGetValue, %function
 2414              	CySysTickGetValue:
 2415              	.LFB43:
2823:Generated_Source\PSoC4/CyLib.c **** 
2824:Generated_Source\PSoC4/CyLib.c **** 
2825:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2827:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2828:Generated_Source\PSoC4/CyLib.c **** *
2829:Generated_Source\PSoC4/CyLib.c **** * Summary:
2830:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2831:Generated_Source\PSoC4/CyLib.c **** *
2832:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2833:Generated_Source\PSoC4/CyLib.c **** *  None
2834:Generated_Source\PSoC4/CyLib.c **** *
2835:Generated_Source\PSoC4/CyLib.c **** * Return:
2836:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2837:Generated_Source\PSoC4/CyLib.c **** *
2838:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2839:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2840:Generated_Source\PSoC4/CyLib.c **** {
 2416              		.loc 1 2840 0
 2417              		.cfi_startproc
 2418 0000 80B5     		push	{r7, lr}
 2419              		.cfi_def_cfa_offset 8
 2420              		.cfi_offset 7, -8
 2421              		.cfi_offset 14, -4
 2422 0002 00AF     		add	r7, sp, #0
 2423              		.cfi_def_cfa_register 7
2841:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2424              		.loc 1 2841 0
 2425 0004 034B     		ldr	r3, .L160
 2426 0006 1B68     		ldr	r3, [r3]
 2427 0008 1B02     		lsl	r3, r3, #8
 2428 000a 1B0A     		lsr	r3, r3, #8
2842:Generated_Source\PSoC4/CyLib.c **** }
 2429              		.loc 1 2842 0
 2430 000c 181C     		mov	r0, r3
 2431 000e BD46     		mov	sp, r7
 2432              		@ sp needed
 2433 0010 80BD     		pop	{r7, pc}
 2434              	.L161:
 2435 0012 C046     		.align	2
 2436              	.L160:
 2437 0014 18E000E0 		.word	-536813544
 2438              		.cfi_endproc
 2439              	.LFE43:
 2440              		.size	CySysTickGetValue, .-CySysTickGetValue
 2441              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2442              		.align	2
 2443              		.global	CySysTickSetClockSource
 2444              		.code	16
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 94


 2445              		.thumb_func
 2446              		.type	CySysTickSetClockSource, %function
 2447              	CySysTickSetClockSource:
 2448              	.LFB44:
2843:Generated_Source\PSoC4/CyLib.c **** 
2844:Generated_Source\PSoC4/CyLib.c **** 
2845:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2848:Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2849:Generated_Source\PSoC4/CyLib.c ****     *
2850:Generated_Source\PSoC4/CyLib.c ****     * Summary:
2851:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2852:Generated_Source\PSoC4/CyLib.c ****     *
2853:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2854:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2855:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2856:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2857:Generated_Source\PSoC4/CyLib.c ****     *
2858:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2859:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2860:Generated_Source\PSoC4/CyLib.c ****     *
2861:Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2862:Generated_Source\PSoC4/CyLib.c ****     *  clockSource: Clock source for SysTick counter
2863:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2864:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2865:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2866:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2867:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2868:Generated_Source\PSoC4/CyLib.c ****     *
2869:Generated_Source\PSoC4/CyLib.c ****     * Return:
2870:Generated_Source\PSoC4/CyLib.c ****     *  None
2871:Generated_Source\PSoC4/CyLib.c ****     *
2872:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2873:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2874:Generated_Source\PSoC4/CyLib.c ****     {
 2449              		.loc 1 2874 0
 2450              		.cfi_startproc
 2451 0000 80B5     		push	{r7, lr}
 2452              		.cfi_def_cfa_offset 8
 2453              		.cfi_offset 7, -8
 2454              		.cfi_offset 14, -4
 2455 0002 82B0     		sub	sp, sp, #8
 2456              		.cfi_def_cfa_offset 16
 2457 0004 00AF     		add	r7, sp, #0
 2458              		.cfi_def_cfa_register 7
 2459 0006 7860     		str	r0, [r7, #4]
2875:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2460              		.loc 1 2875 0
 2461 0008 7B68     		ldr	r3, [r7, #4]
 2462 000a 012B     		cmp	r3, #1
 2463 000c 06D1     		bne	.L163
2876:Generated_Source\PSoC4/CyLib.c ****         {
2877:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2464              		.loc 1 2877 0
 2465 000e 084B     		ldr	r3, .L165
 2466 0010 074A     		ldr	r2, .L165
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 95


 2467 0012 1268     		ldr	r2, [r2]
 2468 0014 0421     		mov	r1, #4
 2469 0016 0A43     		orr	r2, r1
 2470 0018 1A60     		str	r2, [r3]
 2471 001a 05E0     		b	.L162
 2472              	.L163:
2878:Generated_Source\PSoC4/CyLib.c ****         }
2879:Generated_Source\PSoC4/CyLib.c ****         else
2880:Generated_Source\PSoC4/CyLib.c ****         {
2881:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 2473              		.loc 1 2881 0
 2474 001c 044B     		ldr	r3, .L165
 2475 001e 044A     		ldr	r2, .L165
 2476 0020 1268     		ldr	r2, [r2]
 2477 0022 0421     		mov	r1, #4
 2478 0024 8A43     		bic	r2, r1
 2479 0026 1A60     		str	r2, [r3]
 2480              	.L162:
2882:Generated_Source\PSoC4/CyLib.c ****         }
2883:Generated_Source\PSoC4/CyLib.c ****     }
 2481              		.loc 1 2883 0
 2482 0028 BD46     		mov	sp, r7
 2483 002a 02B0     		add	sp, sp, #8
 2484              		@ sp needed
 2485 002c 80BD     		pop	{r7, pc}
 2486              	.L166:
 2487 002e C046     		.align	2
 2488              	.L165:
 2489 0030 10E000E0 		.word	-536813552
 2490              		.cfi_endproc
 2491              	.LFE44:
 2492              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2493              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2494              		.align	2
 2495              		.global	CySysTickGetCountFlag
 2496              		.code	16
 2497              		.thumb_func
 2498              		.type	CySysTickGetCountFlag, %function
 2499              	CySysTickGetCountFlag:
 2500              	.LFB45:
2884:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2885:Generated_Source\PSoC4/CyLib.c **** 
2886:Generated_Source\PSoC4/CyLib.c **** 
2887:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2888:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2889:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2890:Generated_Source\PSoC4/CyLib.c **** *
2891:Generated_Source\PSoC4/CyLib.c **** * Summary:
2892:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2893:Generated_Source\PSoC4/CyLib.c **** *   The flag cleared on read.
2894:Generated_Source\PSoC4/CyLib.c **** *
2895:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2896:Generated_Source\PSoC4/CyLib.c **** *  None
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** * Return:
2899:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2900:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 96


2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2903:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2906:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2907:Generated_Source\PSoC4/CyLib.c **** {
 2501              		.loc 1 2907 0
 2502              		.cfi_startproc
 2503 0000 80B5     		push	{r7, lr}
 2504              		.cfi_def_cfa_offset 8
 2505              		.cfi_offset 7, -8
 2506              		.cfi_offset 14, -4
 2507 0002 00AF     		add	r7, sp, #0
 2508              		.cfi_def_cfa_register 7
2908:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2509              		.loc 1 2908 0
 2510 0004 034B     		ldr	r3, .L169
 2511 0006 1B68     		ldr	r3, [r3]
 2512 0008 1B0C     		lsr	r3, r3, #16
 2513 000a 0122     		mov	r2, #1
 2514 000c 1340     		and	r3, r2
2909:Generated_Source\PSoC4/CyLib.c **** }
 2515              		.loc 1 2909 0
 2516 000e 181C     		mov	r0, r3
 2517 0010 BD46     		mov	sp, r7
 2518              		@ sp needed
 2519 0012 80BD     		pop	{r7, pc}
 2520              	.L170:
 2521              		.align	2
 2522              	.L169:
 2523 0014 10E000E0 		.word	-536813552
 2524              		.cfi_endproc
 2525              	.LFE45:
 2526              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2527              		.section	.text.CySysTickClear,"ax",%progbits
 2528              		.align	2
 2529              		.global	CySysTickClear
 2530              		.code	16
 2531              		.thumb_func
 2532              		.type	CySysTickClear, %function
 2533              	CySysTickClear:
 2534              	.LFB46:
2910:Generated_Source\PSoC4/CyLib.c **** 
2911:Generated_Source\PSoC4/CyLib.c **** 
2912:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2913:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2914:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2915:Generated_Source\PSoC4/CyLib.c **** *
2916:Generated_Source\PSoC4/CyLib.c **** * Summary:
2917:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2918:Generated_Source\PSoC4/CyLib.c **** *
2919:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2920:Generated_Source\PSoC4/CyLib.c **** *  None
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** * Return:
2923:Generated_Source\PSoC4/CyLib.c **** *  None
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 97


2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2927:Generated_Source\PSoC4/CyLib.c **** {
 2535              		.loc 1 2927 0
 2536              		.cfi_startproc
 2537 0000 80B5     		push	{r7, lr}
 2538              		.cfi_def_cfa_offset 8
 2539              		.cfi_offset 7, -8
 2540              		.cfi_offset 14, -4
 2541 0002 00AF     		add	r7, sp, #0
 2542              		.cfi_def_cfa_register 7
2928:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2543              		.loc 1 2928 0
 2544 0004 024B     		ldr	r3, .L172
 2545 0006 0022     		mov	r2, #0
 2546 0008 1A60     		str	r2, [r3]
2929:Generated_Source\PSoC4/CyLib.c **** }
 2547              		.loc 1 2929 0
 2548 000a BD46     		mov	sp, r7
 2549              		@ sp needed
 2550 000c 80BD     		pop	{r7, pc}
 2551              	.L173:
 2552 000e C046     		.align	2
 2553              	.L172:
 2554 0010 18E000E0 		.word	-536813544
 2555              		.cfi_endproc
 2556              	.LFE46:
 2557              		.size	CySysTickClear, .-CySysTickClear
 2558              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2559              		.align	2
 2560              		.global	CySysTickSetCallback
 2561              		.code	16
 2562              		.thumb_func
 2563              		.type	CySysTickSetCallback, %function
 2564              	CySysTickSetCallback:
 2565              	.LFB47:
2930:Generated_Source\PSoC4/CyLib.c **** 
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2933:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2934:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** * Summary:
2937:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2938:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2939:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2940:Generated_Source\PSoC4/CyLib.c **** *
2941:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2942:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2943:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2944:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2945:Generated_Source\PSoC4/CyLib.c **** *  functions.
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2948:Generated_Source\PSoC4/CyLib.c **** *  number: The number of the callback function addresses to be set. The valid
2949:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 98


2950:Generated_Source\PSoC4/CyLib.c **** *
2951:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2952:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2953:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2954:Generated_Source\PSoC4/CyLib.c **** *
2955:Generated_Source\PSoC4/CyLib.c **** * Return:
2956:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2957:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2958:Generated_Source\PSoC4/CyLib.c **** *
2959:Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2960:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2961:Generated_Source\PSoC4/CyLib.c **** *
2962:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2963:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2964:Generated_Source\PSoC4/CyLib.c **** {
 2566              		.loc 1 2964 0
 2567              		.cfi_startproc
 2568 0000 80B5     		push	{r7, lr}
 2569              		.cfi_def_cfa_offset 8
 2570              		.cfi_offset 7, -8
 2571              		.cfi_offset 14, -4
 2572 0002 84B0     		sub	sp, sp, #16
 2573              		.cfi_def_cfa_offset 24
 2574 0004 00AF     		add	r7, sp, #0
 2575              		.cfi_def_cfa_register 7
 2576 0006 7860     		str	r0, [r7, #4]
 2577 0008 3960     		str	r1, [r7]
2965:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2578              		.loc 1 2967 0
 2579 000a 074B     		ldr	r3, .L176
 2580 000c 7A68     		ldr	r2, [r7, #4]
 2581 000e 9200     		lsl	r2, r2, #2
 2582 0010 D358     		ldr	r3, [r2, r3]
 2583 0012 FB60     		str	r3, [r7, #12]
2968:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2584              		.loc 1 2968 0
 2585 0014 044B     		ldr	r3, .L176
 2586 0016 7A68     		ldr	r2, [r7, #4]
 2587 0018 9200     		lsl	r2, r2, #2
 2588 001a 3968     		ldr	r1, [r7]
 2589 001c D150     		str	r1, [r2, r3]
2969:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2590              		.loc 1 2969 0
 2591 001e FB68     		ldr	r3, [r7, #12]
2970:Generated_Source\PSoC4/CyLib.c **** }
 2592              		.loc 1 2970 0
 2593 0020 181C     		mov	r0, r3
 2594 0022 BD46     		mov	sp, r7
 2595 0024 04B0     		add	sp, sp, #16
 2596              		@ sp needed
 2597 0026 80BD     		pop	{r7, pc}
 2598              	.L177:
 2599              		.align	2
 2600              	.L176:
 2601 0028 00000000 		.word	CySysTickCallbacks
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 99


 2602              		.cfi_endproc
 2603              	.LFE47:
 2604              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2605              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2606              		.align	2
 2607              		.global	CySysTickGetCallback
 2608              		.code	16
 2609              		.thumb_func
 2610              		.type	CySysTickGetCallback, %function
 2611              	CySysTickGetCallback:
 2612              	.LFB48:
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** 
2973:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2974:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2975:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** * Summary:
2978:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2979:Generated_Source\PSoC4/CyLib.c **** *
2980:Generated_Source\PSoC4/CyLib.c **** * Parameters:
2981:Generated_Source\PSoC4/CyLib.c **** *  number: The number of callback function address to get. The valid
2982:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2983:Generated_Source\PSoC4/CyLib.c **** *
2984:Generated_Source\PSoC4/CyLib.c **** * Return:
2985:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2986:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2987:Generated_Source\PSoC4/CyLib.c **** *
2988:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2989:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2990:Generated_Source\PSoC4/CyLib.c **** {
 2613              		.loc 1 2990 0
 2614              		.cfi_startproc
 2615 0000 80B5     		push	{r7, lr}
 2616              		.cfi_def_cfa_offset 8
 2617              		.cfi_offset 7, -8
 2618              		.cfi_offset 14, -4
 2619 0002 82B0     		sub	sp, sp, #8
 2620              		.cfi_def_cfa_offset 16
 2621 0004 00AF     		add	r7, sp, #0
 2622              		.cfi_def_cfa_register 7
 2623 0006 7860     		str	r0, [r7, #4]
2991:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2624              		.loc 1 2991 0
 2625 0008 034B     		ldr	r3, .L180
 2626 000a 7A68     		ldr	r2, [r7, #4]
 2627 000c 9200     		lsl	r2, r2, #2
 2628 000e D358     		ldr	r3, [r2, r3]
2992:Generated_Source\PSoC4/CyLib.c **** }
 2629              		.loc 1 2992 0
 2630 0010 181C     		mov	r0, r3
 2631 0012 BD46     		mov	sp, r7
 2632 0014 02B0     		add	sp, sp, #8
 2633              		@ sp needed
 2634 0016 80BD     		pop	{r7, pc}
 2635              	.L181:
 2636              		.align	2
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 100


 2637              	.L180:
 2638 0018 00000000 		.word	CySysTickCallbacks
 2639              		.cfi_endproc
 2640              	.LFE48:
 2641              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2642              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2643              		.align	2
 2644              		.code	16
 2645              		.thumb_func
 2646              		.type	CySysTickServiceCallbacks, %function
 2647              	CySysTickServiceCallbacks:
 2648              	.LFB49:
2993:Generated_Source\PSoC4/CyLib.c **** 
2994:Generated_Source\PSoC4/CyLib.c **** 
2995:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2996:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2997:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2998:Generated_Source\PSoC4/CyLib.c **** *
2999:Generated_Source\PSoC4/CyLib.c **** * Summary:
3000:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** * Parameters:
3003:Generated_Source\PSoC4/CyLib.c **** *  None
3004:Generated_Source\PSoC4/CyLib.c **** *
3005:Generated_Source\PSoC4/CyLib.c **** * Return:
3006:Generated_Source\PSoC4/CyLib.c **** *  None
3007:Generated_Source\PSoC4/CyLib.c **** *
3008:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3009:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3010:Generated_Source\PSoC4/CyLib.c **** {
 2649              		.loc 1 3010 0
 2650              		.cfi_startproc
 2651 0000 80B5     		push	{r7, lr}
 2652              		.cfi_def_cfa_offset 8
 2653              		.cfi_offset 7, -8
 2654              		.cfi_offset 14, -4
 2655 0002 82B0     		sub	sp, sp, #8
 2656              		.cfi_def_cfa_offset 16
 2657 0004 00AF     		add	r7, sp, #0
 2658              		.cfi_def_cfa_register 7
3011:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3012:Generated_Source\PSoC4/CyLib.c **** 
3013:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3014:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2659              		.loc 1 3014 0
 2660 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2661 000a 031E     		sub	r3, r0, #0
 2662 000c 012B     		cmp	r3, #1
 2663 000e 13D1     		bne	.L182
3015:Generated_Source\PSoC4/CyLib.c ****     {
3016:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2664              		.loc 1 3016 0
 2665 0010 0023     		mov	r3, #0
 2666 0012 7B60     		str	r3, [r7, #4]
 2667 0014 0DE0     		b	.L184
 2668              	.L186:
3017:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 101


3018:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2669              		.loc 1 3018 0
 2670 0016 0A4B     		ldr	r3, .L187
 2671 0018 7A68     		ldr	r2, [r7, #4]
 2672 001a 9200     		lsl	r2, r2, #2
 2673 001c D358     		ldr	r3, [r2, r3]
 2674 001e 002B     		cmp	r3, #0
 2675 0020 04D0     		beq	.L185
3019:Generated_Source\PSoC4/CyLib.c ****             {
3020:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2676              		.loc 1 3020 0
 2677 0022 074B     		ldr	r3, .L187
 2678 0024 7A68     		ldr	r2, [r7, #4]
 2679 0026 9200     		lsl	r2, r2, #2
 2680 0028 D358     		ldr	r3, [r2, r3]
 2681 002a 9847     		blx	r3
 2682              	.L185:
3016:Generated_Source\PSoC4/CyLib.c ****         {
 2683              		.loc 1 3016 0 discriminator 2
 2684 002c 7B68     		ldr	r3, [r7, #4]
 2685 002e 0133     		add	r3, r3, #1
 2686 0030 7B60     		str	r3, [r7, #4]
 2687              	.L184:
3016:Generated_Source\PSoC4/CyLib.c ****         {
 2688              		.loc 1 3016 0 is_stmt 0 discriminator 1
 2689 0032 7B68     		ldr	r3, [r7, #4]
 2690 0034 042B     		cmp	r3, #4
 2691 0036 EED9     		bls	.L186
 2692              	.L182:
3021:Generated_Source\PSoC4/CyLib.c ****             }
3022:Generated_Source\PSoC4/CyLib.c ****         }
3023:Generated_Source\PSoC4/CyLib.c ****     }
3024:Generated_Source\PSoC4/CyLib.c **** }
 2693              		.loc 1 3024 0 is_stmt 1
 2694 0038 BD46     		mov	sp, r7
 2695 003a 02B0     		add	sp, sp, #8
 2696              		@ sp needed
 2697 003c 80BD     		pop	{r7, pc}
 2698              	.L188:
 2699 003e C046     		.align	2
 2700              	.L187:
 2701 0040 00000000 		.word	CySysTickCallbacks
 2702              		.cfi_endproc
 2703              	.LFE49:
 2704              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2705              		.section	.text.CyGetUniqueId,"ax",%progbits
 2706              		.align	2
 2707              		.global	CyGetUniqueId
 2708              		.code	16
 2709              		.thumb_func
 2710              		.type	CyGetUniqueId, %function
 2711              	CyGetUniqueId:
 2712              	.LFB50:
3025:Generated_Source\PSoC4/CyLib.c **** 
3026:Generated_Source\PSoC4/CyLib.c **** 
3027:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3028:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 102


3029:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
3030:Generated_Source\PSoC4/CyLib.c **** *
3031:Generated_Source\PSoC4/CyLib.c **** * Summary:
3032:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3033:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3034:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3035:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3036:Generated_Source\PSoC4/CyLib.c **** *
3037:Generated_Source\PSoC4/CyLib.c **** * Parameters:
3038:Generated_Source\PSoC4/CyLib.c **** *  uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3039:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3040:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3041:Generated_Source\PSoC4/CyLib.c **** *
3042:Generated_Source\PSoC4/CyLib.c **** * Return:
3043:Generated_Source\PSoC4/CyLib.c **** *  None
3044:Generated_Source\PSoC4/CyLib.c **** *
3045:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3046:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3047:Generated_Source\PSoC4/CyLib.c **** {
 2713              		.loc 1 3047 0
 2714              		.cfi_startproc
 2715 0000 80B5     		push	{r7, lr}
 2716              		.cfi_def_cfa_offset 8
 2717              		.cfi_offset 7, -8
 2718              		.cfi_offset 14, -4
 2719 0002 82B0     		sub	sp, sp, #8
 2720              		.cfi_def_cfa_offset 16
 2721 0004 00AF     		add	r7, sp, #0
 2722              		.cfi_def_cfa_register 7
 2723 0006 7860     		str	r0, [r7, #4]
3048:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3049:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2724              		.loc 1 3049 0
 2725 0008 254B     		ldr	r3, .L190
 2726 000a 1B78     		ldrb	r3, [r3]
 2727 000c DBB2     		uxtb	r3, r3
 2728 000e 1A1C     		mov	r2, r3
 2729 0010 7B68     		ldr	r3, [r7, #4]
 2730 0012 1A60     		str	r2, [r3]
3050:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2731              		.loc 1 3050 0
 2732 0014 234B     		ldr	r3, .L190+4
 2733 0016 1B78     		ldrb	r3, [r3]
 2734 0018 DBB2     		uxtb	r3, r3
 2735 001a 1A02     		lsl	r2, r3, #8
 2736 001c 7B68     		ldr	r3, [r7, #4]
 2737 001e 1B68     		ldr	r3, [r3]
 2738 0020 1A43     		orr	r2, r3
 2739 0022 7B68     		ldr	r3, [r7, #4]
 2740 0024 1A60     		str	r2, [r3]
3051:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2741              		.loc 1 3051 0
 2742 0026 204B     		ldr	r3, .L190+8
 2743 0028 1B78     		ldrb	r3, [r3]
 2744 002a DBB2     		uxtb	r3, r3
 2745 002c 1A04     		lsl	r2, r3, #16
 2746 002e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 103


 2747 0030 1B68     		ldr	r3, [r3]
 2748 0032 1A43     		orr	r2, r3
 2749 0034 7B68     		ldr	r3, [r7, #4]
 2750 0036 1A60     		str	r2, [r3]
3052:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2751              		.loc 1 3052 0
 2752 0038 1C4B     		ldr	r3, .L190+12
 2753 003a 1B78     		ldrb	r3, [r3]
 2754 003c DBB2     		uxtb	r3, r3
 2755 003e 1A06     		lsl	r2, r3, #24
 2756 0040 7B68     		ldr	r3, [r7, #4]
 2757 0042 1B68     		ldr	r3, [r3]
 2758 0044 1A43     		orr	r2, r3
 2759 0046 7B68     		ldr	r3, [r7, #4]
 2760 0048 1A60     		str	r2, [r3]
3053:Generated_Source\PSoC4/CyLib.c **** 
3054:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2761              		.loc 1 3054 0
 2762 004a 7B68     		ldr	r3, [r7, #4]
 2763 004c 0433     		add	r3, r3, #4
 2764 004e 184A     		ldr	r2, .L190+16
 2765 0050 1278     		ldrb	r2, [r2]
 2766 0052 D2B2     		uxtb	r2, r2
 2767 0054 1A60     		str	r2, [r3]
3055:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2768              		.loc 1 3055 0
 2769 0056 174B     		ldr	r3, .L190+20
 2770 0058 1B78     		ldrb	r3, [r3]
 2771 005a DBB2     		uxtb	r3, r3
 2772 005c 1902     		lsl	r1, r3, #8
 2773 005e 7B68     		ldr	r3, [r7, #4]
 2774 0060 0433     		add	r3, r3, #4
 2775 0062 7A68     		ldr	r2, [r7, #4]
 2776 0064 0432     		add	r2, r2, #4
 2777 0066 1268     		ldr	r2, [r2]
 2778 0068 0A43     		orr	r2, r1
 2779 006a 1A60     		str	r2, [r3]
3056:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2780              		.loc 1 3056 0
 2781 006c 124B     		ldr	r3, .L190+24
 2782 006e 1B78     		ldrb	r3, [r3]
 2783 0070 DBB2     		uxtb	r3, r3
 2784 0072 1904     		lsl	r1, r3, #16
 2785 0074 7B68     		ldr	r3, [r7, #4]
 2786 0076 0433     		add	r3, r3, #4
 2787 0078 7A68     		ldr	r2, [r7, #4]
 2788 007a 0432     		add	r2, r2, #4
 2789 007c 1268     		ldr	r2, [r2]
 2790 007e 0A43     		orr	r2, r1
 2791 0080 1A60     		str	r2, [r3]
3057:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2792              		.loc 1 3057 0
 2793 0082 0E4B     		ldr	r3, .L190+28
 2794 0084 1B78     		ldrb	r3, [r3]
 2795 0086 DBB2     		uxtb	r3, r3
 2796 0088 1906     		lsl	r1, r3, #24
 2797 008a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 104


 2798 008c 0433     		add	r3, r3, #4
 2799 008e 7A68     		ldr	r2, [r7, #4]
 2800 0090 0432     		add	r2, r2, #4
 2801 0092 1268     		ldr	r2, [r2]
 2802 0094 0A43     		orr	r2, r1
 2803 0096 1A60     		str	r2, [r3]
3058:Generated_Source\PSoC4/CyLib.c **** #else
3059:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3060:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3061:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3062:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3065:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3066:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3067:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3068:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3069:Generated_Source\PSoC4/CyLib.c **** }
 2804              		.loc 1 3069 0
 2805 0098 BD46     		mov	sp, r7
 2806 009a 02B0     		add	sp, sp, #8
 2807              		@ sp needed
 2808 009c 80BD     		pop	{r7, pc}
 2809              	.L191:
 2810 009e C046     		.align	2
 2811              	.L190:
 2812 00a0 78F2FF0F 		.word	268431992
 2813 00a4 79F2FF0F 		.word	268431993
 2814 00a8 7AF2FF0F 		.word	268431994
 2815 00ac 7BF2FF0F 		.word	268431995
 2816 00b0 7CF2FF0F 		.word	268431996
 2817 00b4 7DF2FF0F 		.word	268431997
 2818 00b8 7EF2FF0F 		.word	268431998
 2819 00bc 7FF2FF0F 		.word	268431999
 2820              		.cfi_endproc
 2821              	.LFE50:
 2822              		.size	CyGetUniqueId, .-CyGetUniqueId
 2823              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2824              		.align	2
 2825              		.global	CySysSetRamAccessArbPriority
 2826              		.code	16
 2827              		.thumb_func
 2828              		.type	CySysSetRamAccessArbPriority, %function
 2829              	CySysSetRamAccessArbPriority:
 2830              	.LFB51:
3070:Generated_Source\PSoC4/CyLib.c **** 
3071:Generated_Source\PSoC4/CyLib.c **** 
3072:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3073:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3074:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3075:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3076:Generated_Source\PSoC4/CyLib.c ****     *
3077:Generated_Source\PSoC4/CyLib.c ****     * Summary:
3078:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3079:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3080:Generated_Source\PSoC4/CyLib.c ****     *  details.
3081:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 105


3082:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3083:Generated_Source\PSoC4/CyLib.c ****     *
3084:Generated_Source\PSoC4/CyLib.c ****     *  Parameters:
3085:Generated_Source\PSoC4/CyLib.c ****     *  source:
3086:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3087:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3088:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3089:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3090:Generated_Source\PSoC4/CyLib.c ****     *
3091:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3092:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3093:Generated_Source\PSoC4/CyLib.c ****     {
 2831              		.loc 1 3093 0
 2832              		.cfi_startproc
 2833 0000 80B5     		push	{r7, lr}
 2834              		.cfi_def_cfa_offset 8
 2835              		.cfi_offset 7, -8
 2836              		.cfi_offset 14, -4
 2837 0002 84B0     		sub	sp, sp, #16
 2838              		.cfi_def_cfa_offset 24
 2839 0004 00AF     		add	r7, sp, #0
 2840              		.cfi_def_cfa_register 7
 2841 0006 7860     		str	r0, [r7, #4]
3094:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3095:Generated_Source\PSoC4/CyLib.c **** 
3096:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2842              		.loc 1 3096 0
 2843 0008 094B     		ldr	r3, .L193
 2844 000a 1B68     		ldr	r3, [r3]
 2845 000c 094A     		ldr	r2, .L193+4
 2846 000e 1340     		and	r3, r2
 2847 0010 FB60     		str	r3, [r7, #12]
3097:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2848              		.loc 1 3097 0
 2849 0012 7B68     		ldr	r3, [r7, #4]
 2850 0014 5A04     		lsl	r2, r3, #17
 2851 0016 C023     		mov	r3, #192
 2852 0018 DB02     		lsl	r3, r3, #11
 2853 001a 1340     		and	r3, r2
 2854 001c FA68     		ldr	r2, [r7, #12]
 2855 001e 1343     		orr	r3, r2
 2856 0020 FB60     		str	r3, [r7, #12]
3098:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2857              		.loc 1 3098 0
 2858 0022 034B     		ldr	r3, .L193
 2859 0024 FA68     		ldr	r2, [r7, #12]
 2860 0026 1A60     		str	r2, [r3]
3099:Generated_Source\PSoC4/CyLib.c ****     }
 2861              		.loc 1 3099 0
 2862 0028 BD46     		mov	sp, r7
 2863 002a 04B0     		add	sp, sp, #16
 2864              		@ sp needed
 2865 002c 80BD     		pop	{r7, pc}
 2866              	.L194:
 2867 002e C046     		.align	2
 2868              	.L193:
 2869 0030 38001040 		.word	1074790456
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 106


 2870 0034 FFFFF9FF 		.word	-393217
 2871              		.cfi_endproc
 2872              	.LFE51:
 2873              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2874              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2875              		.align	2
 2876              		.global	CySysSetFlashAccessArbPriority
 2877              		.code	16
 2878              		.thumb_func
 2879              		.type	CySysSetFlashAccessArbPriority, %function
 2880              	CySysSetFlashAccessArbPriority:
 2881              	.LFB52:
3100:Generated_Source\PSoC4/CyLib.c **** 
3101:Generated_Source\PSoC4/CyLib.c **** 
3102:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3103:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3104:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3105:Generated_Source\PSoC4/CyLib.c ****     *
3106:Generated_Source\PSoC4/CyLib.c ****     * Summary:
3107:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3108:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3109:Generated_Source\PSoC4/CyLib.c ****     *  details.
3110:Generated_Source\PSoC4/CyLib.c ****     *
3111:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3112:Generated_Source\PSoC4/CyLib.c ****     *
3113:Generated_Source\PSoC4/CyLib.c ****     *  Parameters:
3114:Generated_Source\PSoC4/CyLib.c ****     *  source:
3115:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3116:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3117:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3118:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3119:Generated_Source\PSoC4/CyLib.c ****     *
3120:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3121:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3122:Generated_Source\PSoC4/CyLib.c ****     {
 2882              		.loc 1 3122 0
 2883              		.cfi_startproc
 2884 0000 80B5     		push	{r7, lr}
 2885              		.cfi_def_cfa_offset 8
 2886              		.cfi_offset 7, -8
 2887              		.cfi_offset 14, -4
 2888 0002 84B0     		sub	sp, sp, #16
 2889              		.cfi_def_cfa_offset 24
 2890 0004 00AF     		add	r7, sp, #0
 2891              		.cfi_def_cfa_register 7
 2892 0006 7860     		str	r0, [r7, #4]
3123:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3124:Generated_Source\PSoC4/CyLib.c **** 
3125:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2893              		.loc 1 3125 0
 2894 0008 094B     		ldr	r3, .L196
 2895 000a 1B68     		ldr	r3, [r3]
 2896 000c 094A     		ldr	r2, .L196+4
 2897 000e 1340     		and	r3, r2
 2898 0010 FB60     		str	r3, [r7, #12]
3126:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2899              		.loc 1 3126 0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 107


 2900 0012 7B68     		ldr	r3, [r7, #4]
 2901 0014 5A04     		lsl	r2, r3, #17
 2902 0016 C023     		mov	r3, #192
 2903 0018 DB02     		lsl	r3, r3, #11
 2904 001a 1340     		and	r3, r2
 2905 001c FA68     		ldr	r2, [r7, #12]
 2906 001e 1343     		orr	r3, r2
 2907 0020 FB60     		str	r3, [r7, #12]
3127:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2908              		.loc 1 3127 0
 2909 0022 034B     		ldr	r3, .L196
 2910 0024 FA68     		ldr	r2, [r7, #12]
 2911 0026 1A60     		str	r2, [r3]
3128:Generated_Source\PSoC4/CyLib.c ****     }
 2912              		.loc 1 3128 0
 2913 0028 BD46     		mov	sp, r7
 2914 002a 04B0     		add	sp, sp, #16
 2915              		@ sp needed
 2916 002c 80BD     		pop	{r7, pc}
 2917              	.L197:
 2918 002e C046     		.align	2
 2919              	.L196:
 2920 0030 30001040 		.word	1074790448
 2921 0034 FFFFF9FF 		.word	-393217
 2922              		.cfi_endproc
 2923              	.LFE52:
 2924              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2925              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2926              		.align	2
 2927              		.global	CySysSetDmacAccessArbPriority
 2928              		.code	16
 2929              		.thumb_func
 2930              		.type	CySysSetDmacAccessArbPriority, %function
 2931              	CySysSetDmacAccessArbPriority:
 2932              	.LFB53:
3129:Generated_Source\PSoC4/CyLib.c **** 
3130:Generated_Source\PSoC4/CyLib.c **** 
3131:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3132:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3133:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3134:Generated_Source\PSoC4/CyLib.c ****     *
3135:Generated_Source\PSoC4/CyLib.c ****     * Summary:
3136:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3137:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3138:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3139:Generated_Source\PSoC4/CyLib.c ****     *
3140:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3141:Generated_Source\PSoC4/CyLib.c ****     *
3142:Generated_Source\PSoC4/CyLib.c ****     *  Parameters:
3143:Generated_Source\PSoC4/CyLib.c ****     *  source:
3144:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3145:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3146:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3147:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3148:Generated_Source\PSoC4/CyLib.c ****     *
3149:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3150:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 108


3151:Generated_Source\PSoC4/CyLib.c ****     {
 2933              		.loc 1 3151 0
 2934              		.cfi_startproc
 2935 0000 80B5     		push	{r7, lr}
 2936              		.cfi_def_cfa_offset 8
 2937              		.cfi_offset 7, -8
 2938              		.cfi_offset 14, -4
 2939 0002 84B0     		sub	sp, sp, #16
 2940              		.cfi_def_cfa_offset 24
 2941 0004 00AF     		add	r7, sp, #0
 2942              		.cfi_def_cfa_register 7
 2943 0006 7860     		str	r0, [r7, #4]
3152:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3153:Generated_Source\PSoC4/CyLib.c **** 
3154:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2944              		.loc 1 3154 0
 2945 0008 094B     		ldr	r3, .L199
 2946 000a 1B68     		ldr	r3, [r3]
 2947 000c 094A     		ldr	r2, .L199+4
 2948 000e 1340     		and	r3, r2
 2949 0010 FB60     		str	r3, [r7, #12]
3155:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2950              		.loc 1 3155 0
 2951 0012 7B68     		ldr	r3, [r7, #4]
 2952 0014 5A04     		lsl	r2, r3, #17
 2953 0016 C023     		mov	r3, #192
 2954 0018 DB02     		lsl	r3, r3, #11
 2955 001a 1340     		and	r3, r2
 2956 001c FA68     		ldr	r2, [r7, #12]
 2957 001e 1343     		orr	r3, r2
 2958 0020 FB60     		str	r3, [r7, #12]
3156:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2959              		.loc 1 3156 0
 2960 0022 034B     		ldr	r3, .L199
 2961 0024 FA68     		ldr	r2, [r7, #12]
 2962 0026 1A60     		str	r2, [r3]
3157:Generated_Source\PSoC4/CyLib.c ****     }
 2963              		.loc 1 3157 0
 2964 0028 BD46     		mov	sp, r7
 2965 002a 04B0     		add	sp, sp, #16
 2966              		@ sp needed
 2967 002c 80BD     		pop	{r7, pc}
 2968              	.L200:
 2969 002e C046     		.align	2
 2970              	.L199:
 2971 0030 3C001040 		.word	1074790460
 2972 0034 FFFFF9FF 		.word	-393217
 2973              		.cfi_endproc
 2974              	.LFE53:
 2975              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2976              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2977              		.align	2
 2978              		.global	CySysSetPeripheralAccessArbPriority
 2979              		.code	16
 2980              		.thumb_func
 2981              		.type	CySysSetPeripheralAccessArbPriority, %function
 2982              	CySysSetPeripheralAccessArbPriority:
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 109


 2983              	.LFB54:
3158:Generated_Source\PSoC4/CyLib.c **** 
3159:Generated_Source\PSoC4/CyLib.c **** 
3160:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3161:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3162:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3163:Generated_Source\PSoC4/CyLib.c ****     *
3164:Generated_Source\PSoC4/CyLib.c ****     * Summary:
3165:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3166:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3167:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3168:Generated_Source\PSoC4/CyLib.c ****     *
3169:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3170:Generated_Source\PSoC4/CyLib.c ****     *
3171:Generated_Source\PSoC4/CyLib.c ****     *  Parameters:
3172:Generated_Source\PSoC4/CyLib.c ****     *  interfaceNumber: the slave interface number. Please refer to the device TRM
3173:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3174:Generated_Source\PSoC4/CyLib.c ****     *
3175:Generated_Source\PSoC4/CyLib.c ****     *  source:
3176:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3177:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3178:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3179:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3180:Generated_Source\PSoC4/CyLib.c ****     *
3181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3182:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3183:Generated_Source\PSoC4/CyLib.c ****     {
 2984              		.loc 1 3183 0
 2985              		.cfi_startproc
 2986 0000 80B5     		push	{r7, lr}
 2987              		.cfi_def_cfa_offset 8
 2988              		.cfi_offset 7, -8
 2989              		.cfi_offset 14, -4
 2990 0002 84B0     		sub	sp, sp, #16
 2991              		.cfi_def_cfa_offset 24
 2992 0004 00AF     		add	r7, sp, #0
 2993              		.cfi_def_cfa_register 7
 2994 0006 7860     		str	r0, [r7, #4]
 2995 0008 3960     		str	r1, [r7]
3184:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3185:Generated_Source\PSoC4/CyLib.c **** 
3186:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2996              		.loc 1 3186 0
 2997 000a 7B68     		ldr	r3, [r7, #4]
 2998 000c 002B     		cmp	r3, #0
 2999 000e 10D1     		bne	.L202
3187:Generated_Source\PSoC4/CyLib.c ****         {
3188:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 3000              		.loc 1 3188 0
 3001 0010 1F4B     		ldr	r3, .L206
 3002 0012 1B68     		ldr	r3, [r3]
 3003 0014 1F4A     		ldr	r2, .L206+4
 3004 0016 1340     		and	r3, r2
 3005 0018 FB60     		str	r3, [r7, #12]
3189:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3006              		.loc 1 3189 0
 3007 001a 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 110


 3008 001c 5A04     		lsl	r2, r3, #17
 3009 001e C023     		mov	r3, #192
 3010 0020 DB02     		lsl	r3, r3, #11
 3011 0022 1340     		and	r3, r2
 3012 0024 FA68     		ldr	r2, [r7, #12]
 3013 0026 1343     		orr	r3, r2
 3014 0028 FB60     		str	r3, [r7, #12]
3190:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 3015              		.loc 1 3190 0
 3016 002a 194B     		ldr	r3, .L206
 3017 002c FA68     		ldr	r2, [r7, #12]
 3018 002e 1A60     		str	r2, [r3]
 3019 0030 2AE0     		b	.L201
 3020              	.L202:
3191:Generated_Source\PSoC4/CyLib.c ****         } else
3192:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3193:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 3021              		.loc 1 3193 0
 3022 0032 7B68     		ldr	r3, [r7, #4]
 3023 0034 012B     		cmp	r3, #1
 3024 0036 10D1     		bne	.L204
3194:Generated_Source\PSoC4/CyLib.c ****         {
3195:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 3025              		.loc 1 3195 0
 3026 0038 174B     		ldr	r3, .L206+8
 3027 003a 1B68     		ldr	r3, [r3]
 3028 003c 154A     		ldr	r2, .L206+4
 3029 003e 1340     		and	r3, r2
 3030 0040 FB60     		str	r3, [r7, #12]
3196:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3031              		.loc 1 3196 0
 3032 0042 3B68     		ldr	r3, [r7]
 3033 0044 5A04     		lsl	r2, r3, #17
 3034 0046 C023     		mov	r3, #192
 3035 0048 DB02     		lsl	r3, r3, #11
 3036 004a 1340     		and	r3, r2
 3037 004c FA68     		ldr	r2, [r7, #12]
 3038 004e 1343     		orr	r3, r2
 3039 0050 FB60     		str	r3, [r7, #12]
3197:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 3040              		.loc 1 3197 0
 3041 0052 114B     		ldr	r3, .L206+8
 3042 0054 FA68     		ldr	r2, [r7, #12]
 3043 0056 1A60     		str	r2, [r3]
 3044 0058 16E0     		b	.L201
 3045              	.L204:
3198:Generated_Source\PSoC4/CyLib.c ****         } else
3199:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3200:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3201:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 3046              		.loc 1 3201 0
 3047 005a 7B68     		ldr	r3, [r7, #4]
 3048 005c 022B     		cmp	r3, #2
 3049 005e 10D1     		bne	.L205
3202:Generated_Source\PSoC4/CyLib.c ****         {
3203:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 3050              		.loc 1 3203 0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 111


 3051 0060 0E4B     		ldr	r3, .L206+12
 3052 0062 1B68     		ldr	r3, [r3]
 3053 0064 0B4A     		ldr	r2, .L206+4
 3054 0066 1340     		and	r3, r2
 3055 0068 FB60     		str	r3, [r7, #12]
3204:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3056              		.loc 1 3204 0
 3057 006a 3B68     		ldr	r3, [r7]
 3058 006c 5A04     		lsl	r2, r3, #17
 3059 006e C023     		mov	r3, #192
 3060 0070 DB02     		lsl	r3, r3, #11
 3061 0072 1340     		and	r3, r2
 3062 0074 FA68     		ldr	r2, [r7, #12]
 3063 0076 1343     		orr	r3, r2
 3064 0078 FB60     		str	r3, [r7, #12]
3205:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 3065              		.loc 1 3205 0
 3066 007a 084B     		ldr	r3, .L206+12
 3067 007c FA68     		ldr	r2, [r7, #12]
 3068 007e 1A60     		str	r2, [r3]
 3069 0080 02E0     		b	.L201
 3070              	.L205:
3206:Generated_Source\PSoC4/CyLib.c ****         } else
3207:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3208:Generated_Source\PSoC4/CyLib.c ****         {
3209:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3210:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 3071              		.loc 1 3210 0 discriminator 1
 3072 0082 0020     		mov	r0, #0
 3073 0084 FFF7FEFF 		bl	CyHalt
 3074              	.L201:
3211:Generated_Source\PSoC4/CyLib.c ****         }
3212:Generated_Source\PSoC4/CyLib.c ****     }
 3075              		.loc 1 3212 0
 3076 0088 BD46     		mov	sp, r7
 3077 008a 04B0     		add	sp, sp, #16
 3078              		@ sp needed
 3079 008c 80BD     		pop	{r7, pc}
 3080              	.L207:
 3081 008e C046     		.align	2
 3082              	.L206:
 3083 0090 00011040 		.word	1074790656
 3084 0094 FFFFF9FF 		.word	-393217
 3085 0098 04011040 		.word	1074790660
 3086 009c 08011040 		.word	1074790664
 3087              		.cfi_endproc
 3088              	.LFE54:
 3089              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 3090              		.text
 3091              	.Letext0:
 3092              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 3093              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 3094              		.section	.debug_info,"",%progbits
 3095              	.Ldebug_info0:
 3096 0000 670A0000 		.4byte	0xa67
 3097 0004 0400     		.2byte	0x4
 3098 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 112


 3099 000a 04       		.byte	0x4
 3100 000b 01       		.uleb128 0x1
 3101 000c A4060000 		.4byte	.LASF114
 3102 0010 01       		.byte	0x1
 3103 0011 54070000 		.4byte	.LASF115
 3104 0015 F6040000 		.4byte	.LASF116
 3105 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3106 001d 00000000 		.4byte	0
 3107 0021 00000000 		.4byte	.Ldebug_line0
 3108 0025 02       		.uleb128 0x2
 3109 0026 01       		.byte	0x1
 3110 0027 06       		.byte	0x6
 3111 0028 FB000000 		.4byte	.LASF0
 3112 002c 02       		.uleb128 0x2
 3113 002d 01       		.byte	0x1
 3114 002e 08       		.byte	0x8
 3115 002f 9E040000 		.4byte	.LASF1
 3116 0033 02       		.uleb128 0x2
 3117 0034 02       		.byte	0x2
 3118 0035 05       		.byte	0x5
 3119 0036 AC040000 		.4byte	.LASF2
 3120 003a 02       		.uleb128 0x2
 3121 003b 02       		.byte	0x2
 3122 003c 07       		.byte	0x7
 3123 003d C1020000 		.4byte	.LASF3
 3124 0041 02       		.uleb128 0x2
 3125 0042 04       		.byte	0x4
 3126 0043 05       		.byte	0x5
 3127 0044 3A010000 		.4byte	.LASF4
 3128 0048 02       		.uleb128 0x2
 3129 0049 04       		.byte	0x4
 3130 004a 07       		.byte	0x7
 3131 004b 60020000 		.4byte	.LASF5
 3132 004f 02       		.uleb128 0x2
 3133 0050 08       		.byte	0x8
 3134 0051 05       		.byte	0x5
 3135 0052 ED000000 		.4byte	.LASF6
 3136 0056 02       		.uleb128 0x2
 3137 0057 08       		.byte	0x8
 3138 0058 07       		.byte	0x7
 3139 0059 71000000 		.4byte	.LASF7
 3140 005d 03       		.uleb128 0x3
 3141 005e 04       		.byte	0x4
 3142 005f 05       		.byte	0x5
 3143 0060 696E7400 		.ascii	"int\000"
 3144 0064 02       		.uleb128 0x2
 3145 0065 04       		.byte	0x4
 3146 0066 07       		.byte	0x7
 3147 0067 44020000 		.4byte	.LASF8
 3148 006b 04       		.uleb128 0x4
 3149 006c 65010000 		.4byte	.LASF9
 3150 0070 02       		.byte	0x2
 3151 0071 3801     		.2byte	0x138
 3152 0073 2C000000 		.4byte	0x2c
 3153 0077 04       		.uleb128 0x4
 3154 0078 17000000 		.4byte	.LASF10
 3155 007c 02       		.byte	0x2
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 113


 3156 007d 3901     		.2byte	0x139
 3157 007f 3A000000 		.4byte	0x3a
 3158 0083 04       		.uleb128 0x4
 3159 0084 A8010000 		.4byte	.LASF11
 3160 0088 02       		.byte	0x2
 3161 0089 3A01     		.2byte	0x13a
 3162 008b 48000000 		.4byte	0x48
 3163 008f 02       		.uleb128 0x2
 3164 0090 04       		.byte	0x4
 3165 0091 04       		.byte	0x4
 3166 0092 28040000 		.4byte	.LASF12
 3167 0096 02       		.uleb128 0x2
 3168 0097 08       		.byte	0x8
 3169 0098 04       		.byte	0x4
 3170 0099 84010000 		.4byte	.LASF13
 3171 009d 02       		.uleb128 0x2
 3172 009e 01       		.byte	0x1
 3173 009f 08       		.byte	0x8
 3174 00a0 80050000 		.4byte	.LASF14
 3175 00a4 04       		.uleb128 0x4
 3176 00a5 9B060000 		.4byte	.LASF15
 3177 00a9 02       		.byte	0x2
 3178 00aa DA01     		.2byte	0x1da
 3179 00ac 48000000 		.4byte	0x48
 3180 00b0 04       		.uleb128 0x4
 3181 00b1 6B040000 		.4byte	.LASF16
 3182 00b5 02       		.byte	0x2
 3183 00b6 E201     		.2byte	0x1e2
 3184 00b8 BC000000 		.4byte	0xbc
 3185 00bc 05       		.uleb128 0x5
 3186 00bd 6B000000 		.4byte	0x6b
 3187 00c1 04       		.uleb128 0x4
 3188 00c2 58030000 		.4byte	.LASF17
 3189 00c6 02       		.byte	0x2
 3190 00c7 E401     		.2byte	0x1e4
 3191 00c9 CD000000 		.4byte	0xcd
 3192 00cd 05       		.uleb128 0x5
 3193 00ce 83000000 		.4byte	0x83
 3194 00d2 04       		.uleb128 0x4
 3195 00d3 85050000 		.4byte	.LASF18
 3196 00d7 02       		.byte	0x2
 3197 00d8 F401     		.2byte	0x1f4
 3198 00da DE000000 		.4byte	0xde
 3199 00de 06       		.uleb128 0x6
 3200 00df 04       		.byte	0x4
 3201 00e0 E4000000 		.4byte	0xe4
 3202 00e4 07       		.uleb128 0x7
 3203 00e5 02       		.uleb128 0x2
 3204 00e6 04       		.byte	0x4
 3205 00e7 07       		.byte	0x7
 3206 00e8 81030000 		.4byte	.LASF19
 3207 00ec 08       		.uleb128 0x8
 3208 00ed 3D040000 		.4byte	.LASF20
 3209 00f1 03       		.byte	0x3
 3210 00f2 6A       		.byte	0x6a
 3211 00f3 DE000000 		.4byte	0xde
 3212 00f7 09       		.uleb128 0x9
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 114


 3213 00f8 32070000 		.4byte	.LASF21
 3214 00fc 01       		.byte	0x1
 3215 00fd 6F       		.byte	0x6f
 3216 00fe 00000000 		.4byte	.LFB2
 3217 0102 1C000000 		.4byte	.LFE2-.LFB2
 3218 0106 01       		.uleb128 0x1
 3219 0107 9C       		.byte	0x9c
 3220 0108 09       		.uleb128 0x9
 3221 0109 8D020000 		.4byte	.LASF22
 3222 010d 01       		.byte	0x1
 3223 010e 95       		.byte	0x95
 3224 010f 00000000 		.4byte	.LFB3
 3225 0113 18000000 		.4byte	.LFE3-.LFB3
 3226 0117 01       		.uleb128 0x1
 3227 0118 9C       		.byte	0x9c
 3228 0119 0A       		.uleb128 0xa
 3229 011a 27000000 		.4byte	.LASF26
 3230 011e 01       		.byte	0x1
 3231 011f C401     		.2byte	0x1c4
 3232 0121 00000000 		.4byte	.LFB4
 3233 0125 48000000 		.4byte	.LFE4-.LFB4
 3234 0129 01       		.uleb128 0x1
 3235 012a 9C       		.byte	0x9c
 3236 012b 5D010000 		.4byte	0x15d
 3237 012f 0B       		.uleb128 0xb
 3238 0130 D4040000 		.4byte	.LASF28
 3239 0134 01       		.byte	0x1
 3240 0135 C401     		.2byte	0x1c4
 3241 0137 83000000 		.4byte	0x83
 3242 013b 02       		.uleb128 0x2
 3243 013c 91       		.byte	0x91
 3244 013d 64       		.sleb128 -28
 3245 013e 0C       		.uleb128 0xc
 3246 013f 18010000 		.4byte	.LASF23
 3247 0143 01       		.byte	0x1
 3248 0144 C601     		.2byte	0x1c6
 3249 0146 6B000000 		.4byte	0x6b
 3250 014a 02       		.uleb128 0x2
 3251 014b 91       		.byte	0x91
 3252 014c 6F       		.sleb128 -17
 3253 014d 0C       		.uleb128 0xc
 3254 014e 80070000 		.4byte	.LASF24
 3255 0152 01       		.byte	0x1
 3256 0153 C701     		.2byte	0x1c7
 3257 0155 83000000 		.4byte	0x83
 3258 0159 02       		.uleb128 0x2
 3259 015a 91       		.byte	0x91
 3260 015b 68       		.sleb128 -24
 3261 015c 00       		.byte	0
 3262 015d 0D       		.uleb128 0xd
 3263 015e CA010000 		.4byte	.LASF37
 3264 0162 01       		.byte	0x1
 3265 0163 EE01     		.2byte	0x1ee
 3266 0165 83000000 		.4byte	0x83
 3267 0169 00000000 		.4byte	.LFB5
 3268 016d 34000000 		.4byte	.LFE5-.LFB5
 3269 0171 01       		.uleb128 0x1
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 115


 3270 0172 9C       		.byte	0x9c
 3271 0173 96010000 		.4byte	0x196
 3272 0177 0C       		.uleb128 0xc
 3273 0178 18010000 		.4byte	.LASF23
 3274 017c 01       		.byte	0x1
 3275 017d F001     		.2byte	0x1f0
 3276 017f 6B000000 		.4byte	0x6b
 3277 0183 02       		.uleb128 0x2
 3278 0184 91       		.byte	0x91
 3279 0185 6F       		.sleb128 -17
 3280 0186 0C       		.uleb128 0xc
 3281 0187 D0030000 		.4byte	.LASF25
 3282 018b 01       		.byte	0x1
 3283 018c F101     		.2byte	0x1f1
 3284 018e 83000000 		.4byte	0x83
 3285 0192 02       		.uleb128 0x2
 3286 0193 91       		.byte	0x91
 3287 0194 68       		.sleb128 -24
 3288 0195 00       		.byte	0
 3289 0196 0A       		.uleb128 0xa
 3290 0197 A2050000 		.4byte	.LASF27
 3291 019b 01       		.byte	0x1
 3292 019c 2A02     		.2byte	0x22a
 3293 019e 00000000 		.4byte	.LFB6
 3294 01a2 44000000 		.4byte	.LFE6-.LFB6
 3295 01a6 01       		.uleb128 0x1
 3296 01a7 9C       		.byte	0x9c
 3297 01a8 CB010000 		.4byte	0x1cb
 3298 01ac 0B       		.uleb128 0xb
 3299 01ad 7F060000 		.4byte	.LASF29
 3300 01b1 01       		.byte	0x1
 3301 01b2 2A02     		.2byte	0x22a
 3302 01b4 83000000 		.4byte	0x83
 3303 01b8 02       		.uleb128 0x2
 3304 01b9 91       		.byte	0x91
 3305 01ba 64       		.sleb128 -28
 3306 01bb 0C       		.uleb128 0xc
 3307 01bc 18010000 		.4byte	.LASF23
 3308 01c0 01       		.byte	0x1
 3309 01c1 2C02     		.2byte	0x22c
 3310 01c3 6B000000 		.4byte	0x6b
 3311 01c7 02       		.uleb128 0x2
 3312 01c8 91       		.byte	0x91
 3313 01c9 6F       		.sleb128 -17
 3314 01ca 00       		.byte	0
 3315 01cb 0A       		.uleb128 0xa
 3316 01cc 12030000 		.4byte	.LASF30
 3317 01d0 01       		.byte	0x1
 3318 01d1 6E02     		.2byte	0x26e
 3319 01d3 00000000 		.4byte	.LFB7
 3320 01d7 EC010000 		.4byte	.LFE7-.LFB7
 3321 01db 01       		.uleb128 0x1
 3322 01dc 9C       		.byte	0x9c
 3323 01dd 4B020000 		.4byte	0x24b
 3324 01e1 0B       		.uleb128 0xb
 3325 01e2 07010000 		.4byte	.LASF31
 3326 01e6 01       		.byte	0x1
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 116


 3327 01e7 6E02     		.2byte	0x26e
 3328 01e9 83000000 		.4byte	0x83
 3329 01ed 02       		.uleb128 0x2
 3330 01ee 91       		.byte	0x91
 3331 01ef 64       		.sleb128 -28
 3332 01f0 0C       		.uleb128 0xc
 3333 01f1 0F000000 		.4byte	.LASF32
 3334 01f5 01       		.byte	0x1
 3335 01f6 7402     		.2byte	0x274
 3336 01f8 6B000000 		.4byte	0x6b
 3337 01fc 02       		.uleb128 0x2
 3338 01fd 91       		.byte	0x91
 3339 01fe 6F       		.sleb128 -17
 3340 01ff 0C       		.uleb128 0xc
 3341 0200 C8030000 		.4byte	.LASF33
 3342 0204 01       		.byte	0x1
 3343 0205 7502     		.2byte	0x275
 3344 0207 6B000000 		.4byte	0x6b
 3345 020b 02       		.uleb128 0x2
 3346 020c 91       		.byte	0x91
 3347 020d 6E       		.sleb128 -18
 3348 020e 0C       		.uleb128 0xc
 3349 020f 43070000 		.4byte	.LASF34
 3350 0213 01       		.byte	0x1
 3351 0214 7602     		.2byte	0x276
 3352 0216 6B000000 		.4byte	0x6b
 3353 021a 02       		.uleb128 0x2
 3354 021b 91       		.byte	0x91
 3355 021c 6B       		.sleb128 -21
 3356 021d 0C       		.uleb128 0xc
 3357 021e 5C000000 		.4byte	.LASF35
 3358 0222 01       		.byte	0x1
 3359 0223 7702     		.2byte	0x277
 3360 0225 6B000000 		.4byte	0x6b
 3361 0229 02       		.uleb128 0x2
 3362 022a 91       		.byte	0x91
 3363 022b 6D       		.sleb128 -19
 3364 022c 0C       		.uleb128 0xc
 3365 022d E1050000 		.4byte	.LASF36
 3366 0231 01       		.byte	0x1
 3367 0232 7802     		.2byte	0x278
 3368 0234 6B000000 		.4byte	0x6b
 3369 0238 02       		.uleb128 0x2
 3370 0239 91       		.byte	0x91
 3371 023a 6A       		.sleb128 -22
 3372 023b 0C       		.uleb128 0xc
 3373 023c 18010000 		.4byte	.LASF23
 3374 0240 01       		.byte	0x1
 3375 0241 8302     		.2byte	0x283
 3376 0243 6B000000 		.4byte	0x6b
 3377 0247 02       		.uleb128 0x2
 3378 0248 91       		.byte	0x91
 3379 0249 6C       		.sleb128 -20
 3380 024a 00       		.byte	0
 3381 024b 0D       		.uleb128 0xd
 3382 024c DE040000 		.4byte	.LASF38
 3383 0250 01       		.byte	0x1
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 117


 3384 0251 BE03     		.2byte	0x3be
 3385 0253 A4000000 		.4byte	0xa4
 3386 0257 00000000 		.4byte	.LFB8
 3387 025b 74000000 		.4byte	.LFE8-.LFB8
 3388 025f 01       		.uleb128 0x1
 3389 0260 9C       		.byte	0x9c
 3390 0261 84020000 		.4byte	0x284
 3391 0265 0B       		.uleb128 0xb
 3392 0266 75060000 		.4byte	.LASF39
 3393 026a 01       		.byte	0x1
 3394 026b BE03     		.2byte	0x3be
 3395 026d 83000000 		.4byte	0x83
 3396 0271 02       		.uleb128 0x2
 3397 0272 91       		.byte	0x91
 3398 0273 6C       		.sleb128 -20
 3399 0274 0C       		.uleb128 0xc
 3400 0275 6D030000 		.4byte	.LASF40
 3401 0279 01       		.byte	0x1
 3402 027a C003     		.2byte	0x3c0
 3403 027c A4000000 		.4byte	0xa4
 3404 0280 02       		.uleb128 0x2
 3405 0281 91       		.byte	0x91
 3406 0282 74       		.sleb128 -12
 3407 0283 00       		.byte	0
 3408 0284 0E       		.uleb128 0xe
 3409 0285 39060000 		.4byte	.LASF41
 3410 0289 01       		.byte	0x1
 3411 028a F403     		.2byte	0x3f4
 3412 028c 00000000 		.4byte	.LFB9
 3413 0290 2C000000 		.4byte	.LFE9-.LFB9
 3414 0294 01       		.uleb128 0x1
 3415 0295 9C       		.byte	0x9c
 3416 0296 0F       		.uleb128 0xf
 3417 0297 AF010000 		.4byte	.LASF42
 3418 029b 01       		.byte	0x1
 3419 029c 1B04     		.2byte	0x41b
 3420 029e 83000000 		.4byte	0x83
 3421 02a2 00000000 		.4byte	.LFB10
 3422 02a6 20000000 		.4byte	.LFE10-.LFB10
 3423 02aa 01       		.uleb128 0x1
 3424 02ab 9C       		.byte	0x9c
 3425 02ac C0020000 		.4byte	0x2c0
 3426 02b0 0C       		.uleb128 0xc
 3427 02b1 B4070000 		.4byte	.LASF43
 3428 02b5 01       		.byte	0x1
 3429 02b6 1D04     		.2byte	0x41d
 3430 02b8 83000000 		.4byte	0x83
 3431 02bc 02       		.uleb128 0x2
 3432 02bd 91       		.byte	0x91
 3433 02be 74       		.sleb128 -12
 3434 02bf 00       		.byte	0
 3435 02c0 0A       		.uleb128 0xa
 3436 02c1 87060000 		.4byte	.LASF44
 3437 02c5 01       		.byte	0x1
 3438 02c6 4B04     		.2byte	0x44b
 3439 02c8 00000000 		.4byte	.LFB11
 3440 02cc 58000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 118


 3441 02d0 01       		.uleb128 0x1
 3442 02d1 9C       		.byte	0x9c
 3443 02d2 F5020000 		.4byte	0x2f5
 3444 02d6 0B       		.uleb128 0xb
 3445 02d7 7F060000 		.4byte	.LASF29
 3446 02db 01       		.byte	0x1
 3447 02dc 4B04     		.2byte	0x44b
 3448 02de 83000000 		.4byte	0x83
 3449 02e2 02       		.uleb128 0x2
 3450 02e3 91       		.byte	0x91
 3451 02e4 64       		.sleb128 -28
 3452 02e5 0C       		.uleb128 0xc
 3453 02e6 18010000 		.4byte	.LASF23
 3454 02ea 01       		.byte	0x1
 3455 02eb 4D04     		.2byte	0x44d
 3456 02ed 6B000000 		.4byte	0x6b
 3457 02f1 02       		.uleb128 0x2
 3458 02f2 91       		.byte	0x91
 3459 02f3 6F       		.sleb128 -17
 3460 02f4 00       		.byte	0
 3461 02f5 0A       		.uleb128 0xa
 3462 02f6 2E040000 		.4byte	.LASF45
 3463 02fa 01       		.byte	0x1
 3464 02fb EA07     		.2byte	0x7ea
 3465 02fd 00000000 		.4byte	.LFB12
 3466 0301 60000000 		.4byte	.LFE12-.LFB12
 3467 0305 01       		.uleb128 0x1
 3468 0306 9C       		.byte	0x9c
 3469 0307 1B030000 		.4byte	0x31b
 3470 030b 0B       		.uleb128 0xb
 3471 030c 70040000 		.4byte	.LASF46
 3472 0310 01       		.byte	0x1
 3473 0311 EA07     		.2byte	0x7ea
 3474 0313 83000000 		.4byte	0x83
 3475 0317 02       		.uleb128 0x2
 3476 0318 91       		.byte	0x91
 3477 0319 74       		.sleb128 -12
 3478 031a 00       		.byte	0
 3479 031b 0E       		.uleb128 0xe
 3480 031c 1A060000 		.4byte	.LASF47
 3481 0320 01       		.byte	0x1
 3482 0321 0F08     		.2byte	0x80f
 3483 0323 00000000 		.4byte	.LFB13
 3484 0327 28000000 		.4byte	.LFE13-.LFB13
 3485 032b 01       		.uleb128 0x1
 3486 032c 9C       		.byte	0x9c
 3487 032d 10       		.uleb128 0x10
 3488 032e 72020000 		.4byte	.LASF87
 3489 0332 01       		.byte	0x1
 3490 0333 2508     		.2byte	0x825
 3491 0335 83000000 		.4byte	0x83
 3492 0339 00000000 		.4byte	.LFB14
 3493 033d 18000000 		.4byte	.LFE14-.LFB14
 3494 0341 01       		.uleb128 0x1
 3495 0342 9C       		.byte	0x9c
 3496 0343 0E       		.uleb128 0xe
 3497 0344 91010000 		.4byte	.LASF48
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 119


 3498 0348 01       		.byte	0x1
 3499 0349 3908     		.2byte	0x839
 3500 034b 00000000 		.4byte	.LFB15
 3501 034f 14000000 		.4byte	.LFE15-.LFB15
 3502 0353 01       		.uleb128 0x1
 3503 0354 9C       		.byte	0x9c
 3504 0355 0F       		.uleb128 0xf
 3505 0356 AD020000 		.4byte	.LASF49
 3506 035a 01       		.byte	0x1
 3507 035b 5508     		.2byte	0x855
 3508 035d 83000000 		.4byte	0x83
 3509 0361 00000000 		.4byte	.LFB16
 3510 0365 30000000 		.4byte	.LFE16-.LFB16
 3511 0369 01       		.uleb128 0x1
 3512 036a 9C       		.byte	0x9c
 3513 036b 8E030000 		.4byte	0x38e
 3514 036f 0B       		.uleb128 0xb
 3515 0370 EF040000 		.4byte	.LASF50
 3516 0374 01       		.byte	0x1
 3517 0375 5508     		.2byte	0x855
 3518 0377 83000000 		.4byte	0x83
 3519 037b 02       		.uleb128 0x2
 3520 037c 91       		.byte	0x91
 3521 037d 6C       		.sleb128 -20
 3522 037e 0C       		.uleb128 0xc
 3523 037f 6D030000 		.4byte	.LASF40
 3524 0383 01       		.byte	0x1
 3525 0384 5708     		.2byte	0x857
 3526 0386 83000000 		.4byte	0x83
 3527 038a 02       		.uleb128 0x2
 3528 038b 91       		.byte	0x91
 3529 038c 74       		.sleb128 -12
 3530 038d 00       		.byte	0
 3531 038e 0F       		.uleb128 0xf
 3532 038f 4E000000 		.4byte	.LASF51
 3533 0393 01       		.byte	0x1
 3534 0394 7008     		.2byte	0x870
 3535 0396 83000000 		.4byte	0x83
 3536 039a 00000000 		.4byte	.LFB17
 3537 039e 24000000 		.4byte	.LFE17-.LFB17
 3538 03a2 01       		.uleb128 0x1
 3539 03a3 9C       		.byte	0x9c
 3540 03a4 B8030000 		.4byte	0x3b8
 3541 03a8 0C       		.uleb128 0xc
 3542 03a9 1E000000 		.4byte	.LASF52
 3543 03ad 01       		.byte	0x1
 3544 03ae 7208     		.2byte	0x872
 3545 03b0 83000000 		.4byte	0x83
 3546 03b4 02       		.uleb128 0x2
 3547 03b5 91       		.byte	0x91
 3548 03b6 74       		.sleb128 -12
 3549 03b7 00       		.byte	0
 3550 03b8 11       		.uleb128 0x11
 3551 03b9 99000000 		.4byte	.LASF53
 3552 03bd 01       		.byte	0x1
 3553 03be 8C08     		.2byte	0x88c
 3554 03c0 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 120


 3555 03c4 18000000 		.4byte	.LFE18-.LFB18
 3556 03c8 01       		.uleb128 0x1
 3557 03c9 9C       		.byte	0x9c
 3558 03ca DE030000 		.4byte	0x3de
 3559 03ce 0B       		.uleb128 0xb
 3560 03cf C5010000 		.4byte	.LASF54
 3561 03d3 01       		.byte	0x1
 3562 03d4 8C08     		.2byte	0x88c
 3563 03d6 83000000 		.4byte	0x83
 3564 03da 02       		.uleb128 0x2
 3565 03db 91       		.byte	0x91
 3566 03dc 74       		.sleb128 -12
 3567 03dd 00       		.byte	0
 3568 03de 0D       		.uleb128 0xd
 3569 03df 46030000 		.4byte	.LASF55
 3570 03e3 01       		.byte	0x1
 3571 03e4 A808     		.2byte	0x8a8
 3572 03e6 D2000000 		.4byte	0xd2
 3573 03ea 00000000 		.4byte	.LFB19
 3574 03ee 48000000 		.4byte	.LFE19-.LFB19
 3575 03f2 01       		.uleb128 0x1
 3576 03f3 9C       		.byte	0x9c
 3577 03f4 35040000 		.4byte	0x435
 3578 03f8 0B       		.uleb128 0xb
 3579 03f9 02030000 		.4byte	.LASF56
 3580 03fd 01       		.byte	0x1
 3581 03fe A808     		.2byte	0x8a8
 3582 0400 6B000000 		.4byte	0x6b
 3583 0404 02       		.uleb128 0x2
 3584 0405 91       		.byte	0x91
 3585 0406 6F       		.sleb128 -17
 3586 0407 0B       		.uleb128 0xb
 3587 0408 C0030000 		.4byte	.LASF57
 3588 040c 01       		.byte	0x1
 3589 040d A808     		.2byte	0x8a8
 3590 040f D2000000 		.4byte	0xd2
 3591 0413 02       		.uleb128 0x2
 3592 0414 91       		.byte	0x91
 3593 0415 68       		.sleb128 -24
 3594 0416 0C       		.uleb128 0xc
 3595 0417 40000000 		.4byte	.LASF58
 3596 041b 01       		.byte	0x1
 3597 041c AA08     		.2byte	0x8aa
 3598 041e D2000000 		.4byte	0xd2
 3599 0422 02       		.uleb128 0x2
 3600 0423 91       		.byte	0x91
 3601 0424 70       		.sleb128 -16
 3602 0425 0C       		.uleb128 0xc
 3603 0426 00000000 		.4byte	.LASF59
 3604 042a 01       		.byte	0x1
 3605 042b AB08     		.2byte	0x8ab
 3606 042d 35040000 		.4byte	0x435
 3607 0431 02       		.uleb128 0x2
 3608 0432 91       		.byte	0x91
 3609 0433 74       		.sleb128 -12
 3610 0434 00       		.byte	0
 3611 0435 06       		.uleb128 0x6
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 121


 3612 0436 04       		.byte	0x4
 3613 0437 D2000000 		.4byte	0xd2
 3614 043b 0D       		.uleb128 0xd
 3615 043c C2040000 		.4byte	.LASF60
 3616 0440 01       		.byte	0x1
 3617 0441 CD08     		.2byte	0x8cd
 3618 0443 D2000000 		.4byte	0xd2
 3619 0447 00000000 		.4byte	.LFB20
 3620 044b 34000000 		.4byte	.LFE20-.LFB20
 3621 044f 01       		.uleb128 0x1
 3622 0450 9C       		.byte	0x9c
 3623 0451 74040000 		.4byte	0x474
 3624 0455 0B       		.uleb128 0xb
 3625 0456 02030000 		.4byte	.LASF56
 3626 045a 01       		.byte	0x1
 3627 045b CD08     		.2byte	0x8cd
 3628 045d 6B000000 		.4byte	0x6b
 3629 0461 02       		.uleb128 0x2
 3630 0462 91       		.byte	0x91
 3631 0463 6F       		.sleb128 -17
 3632 0464 0C       		.uleb128 0xc
 3633 0465 00000000 		.4byte	.LASF59
 3634 0469 01       		.byte	0x1
 3635 046a CF08     		.2byte	0x8cf
 3636 046c 35040000 		.4byte	0x435
 3637 0470 02       		.uleb128 0x2
 3638 0471 91       		.byte	0x91
 3639 0472 74       		.sleb128 -12
 3640 0473 00       		.byte	0
 3641 0474 0D       		.uleb128 0xd
 3642 0475 F3020000 		.4byte	.LASF61
 3643 0479 01       		.byte	0x1
 3644 047a E608     		.2byte	0x8e6
 3645 047c D2000000 		.4byte	0xd2
 3646 0480 00000000 		.4byte	.LFB21
 3647 0484 4C000000 		.4byte	.LFE21-.LFB21
 3648 0488 01       		.uleb128 0x1
 3649 0489 9C       		.byte	0x9c
 3650 048a CB040000 		.4byte	0x4cb
 3651 048e 0B       		.uleb128 0xb
 3652 048f 02030000 		.4byte	.LASF56
 3653 0493 01       		.byte	0x1
 3654 0494 E608     		.2byte	0x8e6
 3655 0496 6B000000 		.4byte	0x6b
 3656 049a 02       		.uleb128 0x2
 3657 049b 91       		.byte	0x91
 3658 049c 6F       		.sleb128 -17
 3659 049d 0B       		.uleb128 0xb
 3660 049e C0030000 		.4byte	.LASF57
 3661 04a2 01       		.byte	0x1
 3662 04a3 E608     		.2byte	0x8e6
 3663 04a5 D2000000 		.4byte	0xd2
 3664 04a9 02       		.uleb128 0x2
 3665 04aa 91       		.byte	0x91
 3666 04ab 68       		.sleb128 -24
 3667 04ac 0C       		.uleb128 0xc
 3668 04ad 40000000 		.4byte	.LASF58
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 122


 3669 04b1 01       		.byte	0x1
 3670 04b2 E808     		.2byte	0x8e8
 3671 04b4 D2000000 		.4byte	0xd2
 3672 04b8 02       		.uleb128 0x2
 3673 04b9 91       		.byte	0x91
 3674 04ba 70       		.sleb128 -16
 3675 04bb 0C       		.uleb128 0xc
 3676 04bc 00000000 		.4byte	.LASF59
 3677 04c0 01       		.byte	0x1
 3678 04c1 E908     		.2byte	0x8e9
 3679 04c3 35040000 		.4byte	0x435
 3680 04c7 02       		.uleb128 0x2
 3681 04c8 91       		.byte	0x91
 3682 04c9 74       		.sleb128 -12
 3683 04ca 00       		.byte	0
 3684 04cb 0D       		.uleb128 0xd
 3685 04cc 4F040000 		.4byte	.LASF62
 3686 04d0 01       		.byte	0x1
 3687 04d1 0509     		.2byte	0x905
 3688 04d3 D2000000 		.4byte	0xd2
 3689 04d7 00000000 		.4byte	.LFB22
 3690 04db 36000000 		.4byte	.LFE22-.LFB22
 3691 04df 01       		.uleb128 0x1
 3692 04e0 9C       		.byte	0x9c
 3693 04e1 04050000 		.4byte	0x504
 3694 04e5 0B       		.uleb128 0xb
 3695 04e6 02030000 		.4byte	.LASF56
 3696 04ea 01       		.byte	0x1
 3697 04eb 0509     		.2byte	0x905
 3698 04ed 6B000000 		.4byte	0x6b
 3699 04f1 02       		.uleb128 0x2
 3700 04f2 91       		.byte	0x91
 3701 04f3 6F       		.sleb128 -17
 3702 04f4 0C       		.uleb128 0xc
 3703 04f5 00000000 		.4byte	.LASF59
 3704 04f9 01       		.byte	0x1
 3705 04fa 0709     		.2byte	0x907
 3706 04fc 35040000 		.4byte	0x435
 3707 0500 02       		.uleb128 0x2
 3708 0501 91       		.byte	0x91
 3709 0502 74       		.sleb128 -12
 3710 0503 00       		.byte	0
 3711 0504 0A       		.uleb128 0xa
 3712 0505 17040000 		.4byte	.LASF63
 3713 0509 01       		.byte	0x1
 3714 050a 1D09     		.2byte	0x91d
 3715 050c 00000000 		.4byte	.LFB23
 3716 0510 A8000000 		.4byte	.LFE23-.LFB23
 3717 0514 01       		.uleb128 0x1
 3718 0515 9C       		.byte	0x9c
 3719 0516 66050000 		.4byte	0x566
 3720 051a 0B       		.uleb128 0xb
 3721 051b 02030000 		.4byte	.LASF56
 3722 051f 01       		.byte	0x1
 3723 0520 1D09     		.2byte	0x91d
 3724 0522 6B000000 		.4byte	0x6b
 3725 0526 02       		.uleb128 0x2
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 123


 3726 0527 91       		.byte	0x91
 3727 0528 5F       		.sleb128 -33
 3728 0529 0B       		.uleb128 0xb
 3729 052a 09030000 		.4byte	.LASF64
 3730 052e 01       		.byte	0x1
 3731 052f 1D09     		.2byte	0x91d
 3732 0531 6B000000 		.4byte	0x6b
 3733 0535 02       		.uleb128 0x2
 3734 0536 91       		.byte	0x91
 3735 0537 5E       		.sleb128 -34
 3736 0538 0C       		.uleb128 0xc
 3737 0539 18010000 		.4byte	.LASF23
 3738 053d 01       		.byte	0x1
 3739 053e 1F09     		.2byte	0x91f
 3740 0540 6B000000 		.4byte	0x6b
 3741 0544 02       		.uleb128 0x2
 3742 0545 91       		.byte	0x91
 3743 0546 6B       		.sleb128 -21
 3744 0547 0C       		.uleb128 0xc
 3745 0548 8B010000 		.4byte	.LASF65
 3746 054c 01       		.byte	0x1
 3747 054d 2009     		.2byte	0x920
 3748 054f 83000000 		.4byte	0x83
 3749 0553 02       		.uleb128 0x2
 3750 0554 91       		.byte	0x91
 3751 0555 6C       		.sleb128 -20
 3752 0556 0C       		.uleb128 0xc
 3753 0557 0E020000 		.4byte	.LASF66
 3754 055b 01       		.byte	0x1
 3755 055c 2109     		.2byte	0x921
 3756 055e 83000000 		.4byte	0x83
 3757 0562 02       		.uleb128 0x2
 3758 0563 91       		.byte	0x91
 3759 0564 64       		.sleb128 -28
 3760 0565 00       		.byte	0
 3761 0566 0D       		.uleb128 0xd
 3762 0567 E2010000 		.4byte	.LASF67
 3763 056b 01       		.byte	0x1
 3764 056c 4109     		.2byte	0x941
 3765 056e 6B000000 		.4byte	0x6b
 3766 0572 00000000 		.4byte	.LFB24
 3767 0576 5C000000 		.4byte	.LFE24-.LFB24
 3768 057a 01       		.uleb128 0x1
 3769 057b 9C       		.byte	0x9c
 3770 057c 9F050000 		.4byte	0x59f
 3771 0580 0B       		.uleb128 0xb
 3772 0581 02030000 		.4byte	.LASF56
 3773 0585 01       		.byte	0x1
 3774 0586 4109     		.2byte	0x941
 3775 0588 6B000000 		.4byte	0x6b
 3776 058c 02       		.uleb128 0x2
 3777 058d 91       		.byte	0x91
 3778 058e 6F       		.sleb128 -17
 3779 058f 0C       		.uleb128 0xc
 3780 0590 09030000 		.4byte	.LASF64
 3781 0594 01       		.byte	0x1
 3782 0595 4309     		.2byte	0x943
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 124


 3783 0597 6B000000 		.4byte	0x6b
 3784 059b 02       		.uleb128 0x2
 3785 059c 91       		.byte	0x91
 3786 059d 77       		.sleb128 -9
 3787 059e 00       		.byte	0
 3788 059f 11       		.uleb128 0x11
 3789 05a0 B6040000 		.4byte	.LASF68
 3790 05a4 01       		.byte	0x1
 3791 05a5 5B09     		.2byte	0x95b
 3792 05a7 00000000 		.4byte	.LFB25
 3793 05ab 28000000 		.4byte	.LFE25-.LFB25
 3794 05af 01       		.uleb128 0x1
 3795 05b0 9C       		.byte	0x9c
 3796 05b1 C5050000 		.4byte	0x5c5
 3797 05b5 0B       		.uleb128 0xb
 3798 05b6 02030000 		.4byte	.LASF56
 3799 05ba 01       		.byte	0x1
 3800 05bb 5B09     		.2byte	0x95b
 3801 05bd 6B000000 		.4byte	0x6b
 3802 05c1 02       		.uleb128 0x2
 3803 05c2 91       		.byte	0x91
 3804 05c3 77       		.sleb128 -9
 3805 05c4 00       		.byte	0
 3806 05c5 0F       		.uleb128 0xf
 3807 05c6 DF000000 		.4byte	.LASF69
 3808 05ca 01       		.byte	0x1
 3809 05cb 6F09     		.2byte	0x96f
 3810 05cd 6B000000 		.4byte	0x6b
 3811 05d1 00000000 		.4byte	.LFB26
 3812 05d5 30000000 		.4byte	.LFE26-.LFB26
 3813 05d9 01       		.uleb128 0x1
 3814 05da 9C       		.byte	0x9c
 3815 05db EF050000 		.4byte	0x5ef
 3816 05df 0B       		.uleb128 0xb
 3817 05e0 02030000 		.4byte	.LASF56
 3818 05e4 01       		.byte	0x1
 3819 05e5 6F09     		.2byte	0x96f
 3820 05e7 6B000000 		.4byte	0x6b
 3821 05eb 02       		.uleb128 0x2
 3822 05ec 91       		.byte	0x91
 3823 05ed 77       		.sleb128 -9
 3824 05ee 00       		.byte	0
 3825 05ef 11       		.uleb128 0x11
 3826 05f0 43010000 		.4byte	.LASF70
 3827 05f4 01       		.byte	0x1
 3828 05f5 8409     		.2byte	0x984
 3829 05f7 00000000 		.4byte	.LFB27
 3830 05fb 28000000 		.4byte	.LFE27-.LFB27
 3831 05ff 01       		.uleb128 0x1
 3832 0600 9C       		.byte	0x9c
 3833 0601 15060000 		.4byte	0x615
 3834 0605 0B       		.uleb128 0xb
 3835 0606 02030000 		.4byte	.LASF56
 3836 060a 01       		.byte	0x1
 3837 060b 8409     		.2byte	0x984
 3838 060d 6B000000 		.4byte	0x6b
 3839 0611 02       		.uleb128 0x2
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 125


 3840 0612 91       		.byte	0x91
 3841 0613 77       		.sleb128 -9
 3842 0614 00       		.byte	0
 3843 0615 11       		.uleb128 0x11
 3844 0616 9D020000 		.4byte	.LASF71
 3845 061a 01       		.byte	0x1
 3846 061b 9709     		.2byte	0x997
 3847 061d 00000000 		.4byte	.LFB28
 3848 0621 28000000 		.4byte	.LFE28-.LFB28
 3849 0625 01       		.uleb128 0x1
 3850 0626 9C       		.byte	0x9c
 3851 0627 3B060000 		.4byte	0x63b
 3852 062b 0B       		.uleb128 0xb
 3853 062c 02030000 		.4byte	.LASF56
 3854 0630 01       		.byte	0x1
 3855 0631 9709     		.2byte	0x997
 3856 0633 6B000000 		.4byte	0x6b
 3857 0637 02       		.uleb128 0x2
 3858 0638 91       		.byte	0x91
 3859 0639 77       		.sleb128 -9
 3860 063a 00       		.byte	0
 3861 063b 11       		.uleb128 0x11
 3862 063c AE030000 		.4byte	.LASF72
 3863 0640 01       		.byte	0x1
 3864 0641 AB09     		.2byte	0x9ab
 3865 0643 00000000 		.4byte	.LFB29
 3866 0647 28000000 		.4byte	.LFE29-.LFB29
 3867 064b 01       		.uleb128 0x1
 3868 064c 9C       		.byte	0x9c
 3869 064d 61060000 		.4byte	0x661
 3870 0651 0B       		.uleb128 0xb
 3871 0652 02030000 		.4byte	.LASF56
 3872 0656 01       		.byte	0x1
 3873 0657 AB09     		.2byte	0x9ab
 3874 0659 6B000000 		.4byte	0x6b
 3875 065d 02       		.uleb128 0x2
 3876 065e 91       		.byte	0x91
 3877 065f 77       		.sleb128 -9
 3878 0660 00       		.byte	0
 3879 0661 11       		.uleb128 0x11
 3880 0662 7A040000 		.4byte	.LASF73
 3881 0666 01       		.byte	0x1
 3882 0667 BF09     		.2byte	0x9bf
 3883 0669 00000000 		.4byte	.LFB30
 3884 066d 14000000 		.4byte	.LFE30-.LFB30
 3885 0671 01       		.uleb128 0x1
 3886 0672 9C       		.byte	0x9c
 3887 0673 87060000 		.4byte	0x687
 3888 0677 0B       		.uleb128 0xb
 3889 0678 EF040000 		.4byte	.LASF50
 3890 067c 01       		.byte	0x1
 3891 067d BF09     		.2byte	0x9bf
 3892 067f 6B000000 		.4byte	0x6b
 3893 0683 02       		.uleb128 0x2
 3894 0684 91       		.byte	0x91
 3895 0685 77       		.sleb128 -9
 3896 0686 00       		.byte	0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 126


 3897 0687 0E       		.uleb128 0xe
 3898 0688 B6000000 		.4byte	.LASF74
 3899 068c 01       		.byte	0x1
 3900 068d DE09     		.2byte	0x9de
 3901 068f 00000000 		.4byte	.LFB31
 3902 0693 20000000 		.4byte	.LFE31-.LFB31
 3903 0697 01       		.uleb128 0x1
 3904 0698 9C       		.byte	0x9c
 3905 0699 0A       		.uleb128 0xa
 3906 069a F8050000 		.4byte	.LASF75
 3907 069e 01       		.byte	0x1
 3908 069f F709     		.2byte	0x9f7
 3909 06a1 00000000 		.4byte	.LFB32
 3910 06a5 48000000 		.4byte	.LFE32-.LFB32
 3911 06a9 01       		.uleb128 0x1
 3912 06aa 9C       		.byte	0x9c
 3913 06ab BF060000 		.4byte	0x6bf
 3914 06af 0B       		.uleb128 0xb
 3915 06b0 5E040000 		.4byte	.LASF76
 3916 06b4 01       		.byte	0x1
 3917 06b5 F709     		.2byte	0x9f7
 3918 06b7 83000000 		.4byte	0x83
 3919 06bb 02       		.uleb128 0x2
 3920 06bc 91       		.byte	0x91
 3921 06bd 74       		.sleb128 -12
 3922 06be 00       		.byte	0
 3923 06bf 0A       		.uleb128 0xa
 3924 06c0 7A010000 		.4byte	.LASF77
 3925 06c4 01       		.byte	0x1
 3926 06c5 130A     		.2byte	0xa13
 3927 06c7 00000000 		.4byte	.LFB33
 3928 06cb 28000000 		.4byte	.LFE33-.LFB33
 3929 06cf 01       		.uleb128 0x1
 3930 06d0 9C       		.byte	0x9c
 3931 06d1 E5060000 		.4byte	0x6e5
 3932 06d5 0B       		.uleb128 0xb
 3933 06d6 73070000 		.4byte	.LASF78
 3934 06da 01       		.byte	0x1
 3935 06db 130A     		.2byte	0xa13
 3936 06dd 77000000 		.4byte	0x77
 3937 06e1 02       		.uleb128 0x2
 3938 06e2 91       		.byte	0x91
 3939 06e3 76       		.sleb128 -10
 3940 06e4 00       		.byte	0
 3941 06e5 0A       		.uleb128 0xa
 3942 06e6 0C010000 		.4byte	.LASF79
 3943 06ea 01       		.byte	0x1
 3944 06eb 260A     		.2byte	0xa26
 3945 06ed 00000000 		.4byte	.LFB34
 3946 06f1 84000000 		.4byte	.LFE34-.LFB34
 3947 06f5 01       		.uleb128 0x1
 3948 06f6 9C       		.byte	0x9c
 3949 06f7 0B070000 		.4byte	0x70b
 3950 06fb 0B       		.uleb128 0xb
 3951 06fc 07010000 		.4byte	.LASF31
 3952 0700 01       		.byte	0x1
 3953 0701 260A     		.2byte	0xa26
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 127


 3954 0703 83000000 		.4byte	0x83
 3955 0707 02       		.uleb128 0x2
 3956 0708 91       		.byte	0x91
 3957 0709 74       		.sleb128 -12
 3958 070a 00       		.byte	0
 3959 070b 12       		.uleb128 0x12
 3960 070c 5E030000 		.4byte	.LASF80
 3961 0710 01       		.byte	0x1
 3962 0711 490A     		.2byte	0xa49
 3963 0713 00000000 		.4byte	.LFB35
 3964 0717 24000000 		.4byte	.LFE35-.LFB35
 3965 071b 01       		.uleb128 0x1
 3966 071c 9C       		.byte	0x9c
 3967 071d 0A       		.uleb128 0xa
 3968 071e 00020000 		.4byte	.LASF81
 3969 0722 01       		.byte	0x1
 3970 0723 6D0A     		.2byte	0xa6d
 3971 0725 00000000 		.4byte	.LFB36
 3972 0729 64000000 		.4byte	.LFE36-.LFB36
 3973 072d 01       		.uleb128 0x1
 3974 072e 9C       		.byte	0x9c
 3975 072f 41070000 		.4byte	0x741
 3976 0733 13       		.uleb128 0x13
 3977 0734 6900     		.ascii	"i\000"
 3978 0736 01       		.byte	0x1
 3979 0737 6F0A     		.2byte	0xa6f
 3980 0739 83000000 		.4byte	0x83
 3981 073d 02       		.uleb128 0x2
 3982 073e 91       		.byte	0x91
 3983 073f 74       		.sleb128 -12
 3984 0740 00       		.byte	0
 3985 0741 12       		.uleb128 0x12
 3986 0742 92050000 		.4byte	.LASF82
 3987 0746 01       		.byte	0x1
 3988 0747 930A     		.2byte	0xa93
 3989 0749 00000000 		.4byte	.LFB37
 3990 074d 1C000000 		.4byte	.LFE37-.LFB37
 3991 0751 01       		.uleb128 0x1
 3992 0752 9C       		.byte	0x9c
 3993 0753 0E       		.uleb128 0xe
 3994 0754 67060000 		.4byte	.LASF83
 3995 0758 01       		.byte	0x1
 3996 0759 AB0A     		.2byte	0xaab
 3997 075b 00000000 		.4byte	.LFB38
 3998 075f 18000000 		.4byte	.LFE38-.LFB38
 3999 0763 01       		.uleb128 0x1
 4000 0764 9C       		.byte	0x9c
 4001 0765 0E       		.uleb128 0xe
 4002 0766 C6000000 		.4byte	.LASF84
 4003 076a 01       		.byte	0x1
 4004 076b C20A     		.2byte	0xac2
 4005 076d 00000000 		.4byte	.LFB39
 4006 0771 18000000 		.4byte	.LFE39-.LFB39
 4007 0775 01       		.uleb128 0x1
 4008 0776 9C       		.byte	0x9c
 4009 0777 0E       		.uleb128 0xe
 4010 0778 00060000 		.4byte	.LASF85
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 128


 4011 077c 01       		.byte	0x1
 4012 077d D90A     		.2byte	0xad9
 4013 077f 00000000 		.4byte	.LFB40
 4014 0783 18000000 		.4byte	.LFE40-.LFB40
 4015 0787 01       		.uleb128 0x1
 4016 0788 9C       		.byte	0x9c
 4017 0789 11       		.uleb128 0x11
 4018 078a 87070000 		.4byte	.LASF86
 4019 078e 01       		.byte	0x1
 4020 078f EF0A     		.2byte	0xaef
 4021 0791 00000000 		.4byte	.LFB41
 4022 0795 1C000000 		.4byte	.LFE41-.LFB41
 4023 0799 01       		.uleb128 0x1
 4024 079a 9C       		.byte	0x9c
 4025 079b AF070000 		.4byte	0x7af
 4026 079f 0B       		.uleb128 0xb
 4027 07a0 0E020000 		.4byte	.LASF66
 4028 07a4 01       		.byte	0x1
 4029 07a5 EF0A     		.2byte	0xaef
 4030 07a7 83000000 		.4byte	0x83
 4031 07ab 02       		.uleb128 0x2
 4032 07ac 91       		.byte	0x91
 4033 07ad 74       		.sleb128 -12
 4034 07ae 00       		.byte	0
 4035 07af 10       		.uleb128 0x10
 4036 07b0 27010000 		.4byte	.LASF88
 4037 07b4 01       		.byte	0x1
 4038 07b5 030B     		.2byte	0xb03
 4039 07b7 83000000 		.4byte	0x83
 4040 07bb 00000000 		.4byte	.LFB42
 4041 07bf 18000000 		.4byte	.LFE42-.LFB42
 4042 07c3 01       		.uleb128 0x1
 4043 07c4 9C       		.byte	0x9c
 4044 07c5 10       		.uleb128 0x10
 4045 07c6 F7030000 		.4byte	.LASF89
 4046 07ca 01       		.byte	0x1
 4047 07cb 170B     		.2byte	0xb17
 4048 07cd 83000000 		.4byte	0x83
 4049 07d1 00000000 		.4byte	.LFB43
 4050 07d5 18000000 		.4byte	.LFE43-.LFB43
 4051 07d9 01       		.uleb128 0x1
 4052 07da 9C       		.byte	0x9c
 4053 07db 11       		.uleb128 0x11
 4054 07dc DB020000 		.4byte	.LASF90
 4055 07e0 01       		.byte	0x1
 4056 07e1 390B     		.2byte	0xb39
 4057 07e3 00000000 		.4byte	.LFB44
 4058 07e7 34000000 		.4byte	.LFE44-.LFB44
 4059 07eb 01       		.uleb128 0x1
 4060 07ec 9C       		.byte	0x9c
 4061 07ed 01080000 		.4byte	0x801
 4062 07f1 0B       		.uleb128 0xb
 4063 07f2 14020000 		.4byte	.LASF91
 4064 07f6 01       		.byte	0x1
 4065 07f7 390B     		.2byte	0xb39
 4066 07f9 83000000 		.4byte	0x83
 4067 07fd 02       		.uleb128 0x2
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 129


 4068 07fe 91       		.byte	0x91
 4069 07ff 74       		.sleb128 -12
 4070 0800 00       		.byte	0
 4071 0801 10       		.uleb128 0x10
 4072 0802 2E020000 		.4byte	.LASF92
 4073 0806 01       		.byte	0x1
 4074 0807 5A0B     		.2byte	0xb5a
 4075 0809 83000000 		.4byte	0x83
 4076 080d 00000000 		.4byte	.LFB45
 4077 0811 18000000 		.4byte	.LFE45-.LFB45
 4078 0815 01       		.uleb128 0x1
 4079 0816 9C       		.byte	0x9c
 4080 0817 0E       		.uleb128 0xe
 4081 0818 51020000 		.4byte	.LASF93
 4082 081c 01       		.byte	0x1
 4083 081d 6E0B     		.2byte	0xb6e
 4084 081f 00000000 		.4byte	.LFB46
 4085 0823 14000000 		.4byte	.LFE46-.LFB46
 4086 0827 01       		.uleb128 0x1
 4087 0828 9C       		.byte	0x9c
 4088 0829 0F       		.uleb128 0xf
 4089 082a B9050000 		.4byte	.LASF94
 4090 082e 01       		.byte	0x1
 4091 082f 930B     		.2byte	0xb93
 4092 0831 EC000000 		.4byte	0xec
 4093 0835 00000000 		.4byte	.LFB47
 4094 0839 2C000000 		.4byte	.LFE47-.LFB47
 4095 083d 01       		.uleb128 0x1
 4096 083e 9C       		.byte	0x9c
 4097 083f 71080000 		.4byte	0x871
 4098 0843 0B       		.uleb128 0xb
 4099 0844 02030000 		.4byte	.LASF56
 4100 0848 01       		.byte	0x1
 4101 0849 930B     		.2byte	0xb93
 4102 084b 83000000 		.4byte	0x83
 4103 084f 02       		.uleb128 0x2
 4104 0850 91       		.byte	0x91
 4105 0851 6C       		.sleb128 -20
 4106 0852 0B       		.uleb128 0xb
 4107 0853 DD030000 		.4byte	.LASF95
 4108 0857 01       		.byte	0x1
 4109 0858 930B     		.2byte	0xb93
 4110 085a EC000000 		.4byte	0xec
 4111 085e 02       		.uleb128 0x2
 4112 085f 91       		.byte	0x91
 4113 0860 68       		.sleb128 -24
 4114 0861 0C       		.uleb128 0xc
 4115 0862 47000000 		.4byte	.LASF96
 4116 0866 01       		.byte	0x1
 4117 0867 950B     		.2byte	0xb95
 4118 0869 EC000000 		.4byte	0xec
 4119 086d 02       		.uleb128 0x2
 4120 086e 91       		.byte	0x91
 4121 086f 74       		.sleb128 -12
 4122 0870 00       		.byte	0
 4123 0871 0F       		.uleb128 0xf
 4124 0872 50010000 		.4byte	.LASF97
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 130


 4125 0876 01       		.byte	0x1
 4126 0877 AD0B     		.2byte	0xbad
 4127 0879 EC000000 		.4byte	0xec
 4128 087d 00000000 		.4byte	.LFB48
 4129 0881 1C000000 		.4byte	.LFE48-.LFB48
 4130 0885 01       		.uleb128 0x1
 4131 0886 9C       		.byte	0x9c
 4132 0887 9B080000 		.4byte	0x89b
 4133 088b 0B       		.uleb128 0xb
 4134 088c 02030000 		.4byte	.LASF56
 4135 0890 01       		.byte	0x1
 4136 0891 AD0B     		.2byte	0xbad
 4137 0893 83000000 		.4byte	0x83
 4138 0897 02       		.uleb128 0x2
 4139 0898 91       		.byte	0x91
 4140 0899 74       		.sleb128 -12
 4141 089a 00       		.byte	0
 4142 089b 14       		.uleb128 0x14
 4143 089c 9A070000 		.4byte	.LASF117
 4144 08a0 01       		.byte	0x1
 4145 08a1 C10B     		.2byte	0xbc1
 4146 08a3 00000000 		.4byte	.LFB49
 4147 08a7 44000000 		.4byte	.LFE49-.LFB49
 4148 08ab 01       		.uleb128 0x1
 4149 08ac 9C       		.byte	0x9c
 4150 08ad BF080000 		.4byte	0x8bf
 4151 08b1 13       		.uleb128 0x13
 4152 08b2 6900     		.ascii	"i\000"
 4153 08b4 01       		.byte	0x1
 4154 08b5 C30B     		.2byte	0xbc3
 4155 08b7 83000000 		.4byte	0x83
 4156 08bb 02       		.uleb128 0x2
 4157 08bc 91       		.byte	0x91
 4158 08bd 74       		.sleb128 -12
 4159 08be 00       		.byte	0
 4160 08bf 11       		.uleb128 0x11
 4161 08c0 20020000 		.4byte	.LASF98
 4162 08c4 01       		.byte	0x1
 4163 08c5 E60B     		.2byte	0xbe6
 4164 08c7 00000000 		.4byte	.LFB50
 4165 08cb C0000000 		.4byte	.LFE50-.LFB50
 4166 08cf 01       		.uleb128 0x1
 4167 08d0 9C       		.byte	0x9c
 4168 08d1 E5080000 		.4byte	0x8e5
 4169 08d5 0B       		.uleb128 0xb
 4170 08d6 EF050000 		.4byte	.LASF99
 4171 08da 01       		.byte	0x1
 4172 08db E60B     		.2byte	0xbe6
 4173 08dd E5080000 		.4byte	0x8e5
 4174 08e1 02       		.uleb128 0x2
 4175 08e2 91       		.byte	0x91
 4176 08e3 74       		.sleb128 -12
 4177 08e4 00       		.byte	0
 4178 08e5 06       		.uleb128 0x6
 4179 08e6 04       		.byte	0x4
 4180 08e7 83000000 		.4byte	0x83
 4181 08eb 11       		.uleb128 0x11
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 131


 4182 08ec 81040000 		.4byte	.LASF100
 4183 08f0 01       		.byte	0x1
 4184 08f1 140C     		.2byte	0xc14
 4185 08f3 00000000 		.4byte	.LFB51
 4186 08f7 38000000 		.4byte	.LFE51-.LFB51
 4187 08fb 01       		.uleb128 0x1
 4188 08fc 9C       		.byte	0x9c
 4189 08fd 20090000 		.4byte	0x920
 4190 0901 0B       		.uleb128 0xb
 4191 0902 7A030000 		.4byte	.LASF101
 4192 0906 01       		.byte	0x1
 4193 0907 140C     		.2byte	0xc14
 4194 0909 83000000 		.4byte	0x83
 4195 090d 02       		.uleb128 0x2
 4196 090e 91       		.byte	0x91
 4197 090f 6C       		.sleb128 -20
 4198 0910 0C       		.uleb128 0xc
 4199 0911 D4020000 		.4byte	.LASF102
 4200 0915 01       		.byte	0x1
 4201 0916 160C     		.2byte	0xc16
 4202 0918 83000000 		.4byte	0x83
 4203 091c 02       		.uleb128 0x2
 4204 091d 91       		.byte	0x91
 4205 091e 74       		.sleb128 -12
 4206 091f 00       		.byte	0
 4207 0920 11       		.uleb128 0x11
 4208 0921 27030000 		.4byte	.LASF103
 4209 0925 01       		.byte	0x1
 4210 0926 310C     		.2byte	0xc31
 4211 0928 00000000 		.4byte	.LFB52
 4212 092c 38000000 		.4byte	.LFE52-.LFB52
 4213 0930 01       		.uleb128 0x1
 4214 0931 9C       		.byte	0x9c
 4215 0932 55090000 		.4byte	0x955
 4216 0936 0B       		.uleb128 0xb
 4217 0937 7A030000 		.4byte	.LASF101
 4218 093b 01       		.byte	0x1
 4219 093c 310C     		.2byte	0xc31
 4220 093e 83000000 		.4byte	0x83
 4221 0942 02       		.uleb128 0x2
 4222 0943 91       		.byte	0x91
 4223 0944 6C       		.sleb128 -20
 4224 0945 0C       		.uleb128 0xc
 4225 0946 D4020000 		.4byte	.LASF102
 4226 094a 01       		.byte	0x1
 4227 094b 330C     		.2byte	0xc33
 4228 094d 83000000 		.4byte	0x83
 4229 0951 02       		.uleb128 0x2
 4230 0952 91       		.byte	0x91
 4231 0953 74       		.sleb128 -12
 4232 0954 00       		.byte	0
 4233 0955 11       		.uleb128 0x11
 4234 0956 49060000 		.4byte	.LASF104
 4235 095a 01       		.byte	0x1
 4236 095b 4E0C     		.2byte	0xc4e
 4237 095d 00000000 		.4byte	.LFB53
 4238 0961 38000000 		.4byte	.LFE53-.LFB53
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 132


 4239 0965 01       		.uleb128 0x1
 4240 0966 9C       		.byte	0x9c
 4241 0967 8A090000 		.4byte	0x98a
 4242 096b 0B       		.uleb128 0xb
 4243 096c 7A030000 		.4byte	.LASF101
 4244 0970 01       		.byte	0x1
 4245 0971 4E0C     		.2byte	0xc4e
 4246 0973 83000000 		.4byte	0x83
 4247 0977 02       		.uleb128 0x2
 4248 0978 91       		.byte	0x91
 4249 0979 6C       		.sleb128 -20
 4250 097a 0C       		.uleb128 0xc
 4251 097b D4020000 		.4byte	.LASF102
 4252 097f 01       		.byte	0x1
 4253 0980 500C     		.2byte	0xc50
 4254 0982 83000000 		.4byte	0x83
 4255 0986 02       		.uleb128 0x2
 4256 0987 91       		.byte	0x91
 4257 0988 74       		.sleb128 -12
 4258 0989 00       		.byte	0
 4259 098a 0A       		.uleb128 0xa
 4260 098b 8A030000 		.4byte	.LASF105
 4261 098f 01       		.byte	0x1
 4262 0990 6E0C     		.2byte	0xc6e
 4263 0992 00000000 		.4byte	.LFB54
 4264 0996 A0000000 		.4byte	.LFE54-.LFB54
 4265 099a 01       		.uleb128 0x1
 4266 099b 9C       		.byte	0x9c
 4267 099c CE090000 		.4byte	0x9ce
 4268 09a0 0B       		.uleb128 0xb
 4269 09a1 A6000000 		.4byte	.LASF106
 4270 09a5 01       		.byte	0x1
 4271 09a6 6E0C     		.2byte	0xc6e
 4272 09a8 83000000 		.4byte	0x83
 4273 09ac 02       		.uleb128 0x2
 4274 09ad 91       		.byte	0x91
 4275 09ae 6C       		.sleb128 -20
 4276 09af 0B       		.uleb128 0xb
 4277 09b0 7A030000 		.4byte	.LASF101
 4278 09b4 01       		.byte	0x1
 4279 09b5 6E0C     		.2byte	0xc6e
 4280 09b7 83000000 		.4byte	0x83
 4281 09bb 02       		.uleb128 0x2
 4282 09bc 91       		.byte	0x91
 4283 09bd 68       		.sleb128 -24
 4284 09be 0C       		.uleb128 0xc
 4285 09bf D4020000 		.4byte	.LASF102
 4286 09c3 01       		.byte	0x1
 4287 09c4 700C     		.2byte	0xc70
 4288 09c6 83000000 		.4byte	0x83
 4289 09ca 02       		.uleb128 0x2
 4290 09cb 91       		.byte	0x91
 4291 09cc 74       		.sleb128 -12
 4292 09cd 00       		.byte	0
 4293 09ce 15       		.uleb128 0x15
 4294 09cf EC000000 		.4byte	0xec
 4295 09d3 DE090000 		.4byte	0x9de
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 133


 4296 09d7 16       		.uleb128 0x16
 4297 09d8 E5000000 		.4byte	0xe5
 4298 09dc 04       		.byte	0x4
 4299 09dd 00       		.byte	0
 4300 09de 17       		.uleb128 0x17
 4301 09df CE050000 		.4byte	.LASF107
 4302 09e3 01       		.byte	0x1
 4303 09e4 23       		.byte	0x23
 4304 09e5 CE090000 		.4byte	0x9ce
 4305 09e9 05       		.uleb128 0x5
 4306 09ea 03       		.byte	0x3
 4307 09eb 00000000 		.4byte	CySysTickCallbacks
 4308 09ef 18       		.uleb128 0x18
 4309 09f0 88000000 		.4byte	.LASF108
 4310 09f4 01       		.byte	0x1
 4311 09f5 36       		.byte	0x36
 4312 09f6 83000000 		.4byte	0x83
 4313 09fa 05       		.uleb128 0x5
 4314 09fb 03       		.byte	0x3
 4315 09fc 00000000 		.4byte	CySysTickInitVar
 4316 0a00 18       		.uleb128 0x18
 4317 0a01 09040000 		.4byte	.LASF109
 4318 0a05 01       		.byte	0x1
 4319 0a06 1C       		.byte	0x1c
 4320 0a07 83000000 		.4byte	0x83
 4321 0a0b 05       		.uleb128 0x5
 4322 0a0c 03       		.byte	0x3
 4323 0a0d 00000000 		.4byte	cydelayFreqHz
 4324 0a11 18       		.uleb128 0x18
 4325 0a12 6B010000 		.4byte	.LASF110
 4326 0a16 01       		.byte	0x1
 4327 0a17 1D       		.byte	0x1d
 4328 0a18 83000000 		.4byte	0x83
 4329 0a1c 05       		.uleb128 0x5
 4330 0a1d 03       		.byte	0x3
 4331 0a1e 00000000 		.4byte	cydelayFreqKhz
 4332 0a22 18       		.uleb128 0x18
 4333 0a23 2A060000 		.4byte	.LASF111
 4334 0a27 01       		.byte	0x1
 4335 0a28 1E       		.byte	0x1e
 4336 0a29 6B000000 		.4byte	0x6b
 4337 0a2d 05       		.uleb128 0x5
 4338 0a2e 03       		.byte	0x3
 4339 0a2f 00000000 		.4byte	cydelayFreqMhz
 4340 0a33 18       		.uleb128 0x18
 4341 0a34 F3010000 		.4byte	.LASF112
 4342 0a38 01       		.byte	0x1
 4343 0a39 1F       		.byte	0x1f
 4344 0a3a 83000000 		.4byte	0x83
 4345 0a3e 05       		.uleb128 0x5
 4346 0a3f 03       		.byte	0x3
 4347 0a40 00000000 		.4byte	cydelay32kMs
 4348 0a44 15       		.uleb128 0x15
 4349 0a45 6B000000 		.4byte	0x6b
 4350 0a49 540A0000 		.4byte	0xa54
 4351 0a4d 16       		.uleb128 0x16
 4352 0a4e E5000000 		.4byte	0xe5
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 134


 4353 0a52 2D       		.byte	0x2d
 4354 0a53 00       		.byte	0
 4355 0a54 18       		.uleb128 0x18
 4356 0a55 E6030000 		.4byte	.LASF113
 4357 0a59 01       		.byte	0x1
 4358 0a5a 3B       		.byte	0x3b
 4359 0a5b 650A0000 		.4byte	0xa65
 4360 0a5f 05       		.uleb128 0x5
 4361 0a60 03       		.byte	0x3
 4362 0a61 00000000 		.4byte	cyImoFreqMhz2Reg
 4363 0a65 19       		.uleb128 0x19
 4364 0a66 440A0000 		.4byte	0xa44
 4365 0a6a 00       		.byte	0
 4366              		.section	.debug_abbrev,"",%progbits
 4367              	.Ldebug_abbrev0:
 4368 0000 01       		.uleb128 0x1
 4369 0001 11       		.uleb128 0x11
 4370 0002 01       		.byte	0x1
 4371 0003 25       		.uleb128 0x25
 4372 0004 0E       		.uleb128 0xe
 4373 0005 13       		.uleb128 0x13
 4374 0006 0B       		.uleb128 0xb
 4375 0007 03       		.uleb128 0x3
 4376 0008 0E       		.uleb128 0xe
 4377 0009 1B       		.uleb128 0x1b
 4378 000a 0E       		.uleb128 0xe
 4379 000b 55       		.uleb128 0x55
 4380 000c 17       		.uleb128 0x17
 4381 000d 11       		.uleb128 0x11
 4382 000e 01       		.uleb128 0x1
 4383 000f 10       		.uleb128 0x10
 4384 0010 17       		.uleb128 0x17
 4385 0011 00       		.byte	0
 4386 0012 00       		.byte	0
 4387 0013 02       		.uleb128 0x2
 4388 0014 24       		.uleb128 0x24
 4389 0015 00       		.byte	0
 4390 0016 0B       		.uleb128 0xb
 4391 0017 0B       		.uleb128 0xb
 4392 0018 3E       		.uleb128 0x3e
 4393 0019 0B       		.uleb128 0xb
 4394 001a 03       		.uleb128 0x3
 4395 001b 0E       		.uleb128 0xe
 4396 001c 00       		.byte	0
 4397 001d 00       		.byte	0
 4398 001e 03       		.uleb128 0x3
 4399 001f 24       		.uleb128 0x24
 4400 0020 00       		.byte	0
 4401 0021 0B       		.uleb128 0xb
 4402 0022 0B       		.uleb128 0xb
 4403 0023 3E       		.uleb128 0x3e
 4404 0024 0B       		.uleb128 0xb
 4405 0025 03       		.uleb128 0x3
 4406 0026 08       		.uleb128 0x8
 4407 0027 00       		.byte	0
 4408 0028 00       		.byte	0
 4409 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 135


 4410 002a 16       		.uleb128 0x16
 4411 002b 00       		.byte	0
 4412 002c 03       		.uleb128 0x3
 4413 002d 0E       		.uleb128 0xe
 4414 002e 3A       		.uleb128 0x3a
 4415 002f 0B       		.uleb128 0xb
 4416 0030 3B       		.uleb128 0x3b
 4417 0031 05       		.uleb128 0x5
 4418 0032 49       		.uleb128 0x49
 4419 0033 13       		.uleb128 0x13
 4420 0034 00       		.byte	0
 4421 0035 00       		.byte	0
 4422 0036 05       		.uleb128 0x5
 4423 0037 35       		.uleb128 0x35
 4424 0038 00       		.byte	0
 4425 0039 49       		.uleb128 0x49
 4426 003a 13       		.uleb128 0x13
 4427 003b 00       		.byte	0
 4428 003c 00       		.byte	0
 4429 003d 06       		.uleb128 0x6
 4430 003e 0F       		.uleb128 0xf
 4431 003f 00       		.byte	0
 4432 0040 0B       		.uleb128 0xb
 4433 0041 0B       		.uleb128 0xb
 4434 0042 49       		.uleb128 0x49
 4435 0043 13       		.uleb128 0x13
 4436 0044 00       		.byte	0
 4437 0045 00       		.byte	0
 4438 0046 07       		.uleb128 0x7
 4439 0047 15       		.uleb128 0x15
 4440 0048 00       		.byte	0
 4441 0049 27       		.uleb128 0x27
 4442 004a 19       		.uleb128 0x19
 4443 004b 00       		.byte	0
 4444 004c 00       		.byte	0
 4445 004d 08       		.uleb128 0x8
 4446 004e 16       		.uleb128 0x16
 4447 004f 00       		.byte	0
 4448 0050 03       		.uleb128 0x3
 4449 0051 0E       		.uleb128 0xe
 4450 0052 3A       		.uleb128 0x3a
 4451 0053 0B       		.uleb128 0xb
 4452 0054 3B       		.uleb128 0x3b
 4453 0055 0B       		.uleb128 0xb
 4454 0056 49       		.uleb128 0x49
 4455 0057 13       		.uleb128 0x13
 4456 0058 00       		.byte	0
 4457 0059 00       		.byte	0
 4458 005a 09       		.uleb128 0x9
 4459 005b 2E       		.uleb128 0x2e
 4460 005c 00       		.byte	0
 4461 005d 3F       		.uleb128 0x3f
 4462 005e 19       		.uleb128 0x19
 4463 005f 03       		.uleb128 0x3
 4464 0060 0E       		.uleb128 0xe
 4465 0061 3A       		.uleb128 0x3a
 4466 0062 0B       		.uleb128 0xb
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 136


 4467 0063 3B       		.uleb128 0x3b
 4468 0064 0B       		.uleb128 0xb
 4469 0065 27       		.uleb128 0x27
 4470 0066 19       		.uleb128 0x19
 4471 0067 11       		.uleb128 0x11
 4472 0068 01       		.uleb128 0x1
 4473 0069 12       		.uleb128 0x12
 4474 006a 06       		.uleb128 0x6
 4475 006b 40       		.uleb128 0x40
 4476 006c 18       		.uleb128 0x18
 4477 006d 9742     		.uleb128 0x2117
 4478 006f 19       		.uleb128 0x19
 4479 0070 00       		.byte	0
 4480 0071 00       		.byte	0
 4481 0072 0A       		.uleb128 0xa
 4482 0073 2E       		.uleb128 0x2e
 4483 0074 01       		.byte	0x1
 4484 0075 3F       		.uleb128 0x3f
 4485 0076 19       		.uleb128 0x19
 4486 0077 03       		.uleb128 0x3
 4487 0078 0E       		.uleb128 0xe
 4488 0079 3A       		.uleb128 0x3a
 4489 007a 0B       		.uleb128 0xb
 4490 007b 3B       		.uleb128 0x3b
 4491 007c 05       		.uleb128 0x5
 4492 007d 27       		.uleb128 0x27
 4493 007e 19       		.uleb128 0x19
 4494 007f 11       		.uleb128 0x11
 4495 0080 01       		.uleb128 0x1
 4496 0081 12       		.uleb128 0x12
 4497 0082 06       		.uleb128 0x6
 4498 0083 40       		.uleb128 0x40
 4499 0084 18       		.uleb128 0x18
 4500 0085 9642     		.uleb128 0x2116
 4501 0087 19       		.uleb128 0x19
 4502 0088 01       		.uleb128 0x1
 4503 0089 13       		.uleb128 0x13
 4504 008a 00       		.byte	0
 4505 008b 00       		.byte	0
 4506 008c 0B       		.uleb128 0xb
 4507 008d 05       		.uleb128 0x5
 4508 008e 00       		.byte	0
 4509 008f 03       		.uleb128 0x3
 4510 0090 0E       		.uleb128 0xe
 4511 0091 3A       		.uleb128 0x3a
 4512 0092 0B       		.uleb128 0xb
 4513 0093 3B       		.uleb128 0x3b
 4514 0094 05       		.uleb128 0x5
 4515 0095 49       		.uleb128 0x49
 4516 0096 13       		.uleb128 0x13
 4517 0097 02       		.uleb128 0x2
 4518 0098 18       		.uleb128 0x18
 4519 0099 00       		.byte	0
 4520 009a 00       		.byte	0
 4521 009b 0C       		.uleb128 0xc
 4522 009c 34       		.uleb128 0x34
 4523 009d 00       		.byte	0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 137


 4524 009e 03       		.uleb128 0x3
 4525 009f 0E       		.uleb128 0xe
 4526 00a0 3A       		.uleb128 0x3a
 4527 00a1 0B       		.uleb128 0xb
 4528 00a2 3B       		.uleb128 0x3b
 4529 00a3 05       		.uleb128 0x5
 4530 00a4 49       		.uleb128 0x49
 4531 00a5 13       		.uleb128 0x13
 4532 00a6 02       		.uleb128 0x2
 4533 00a7 18       		.uleb128 0x18
 4534 00a8 00       		.byte	0
 4535 00a9 00       		.byte	0
 4536 00aa 0D       		.uleb128 0xd
 4537 00ab 2E       		.uleb128 0x2e
 4538 00ac 01       		.byte	0x1
 4539 00ad 3F       		.uleb128 0x3f
 4540 00ae 19       		.uleb128 0x19
 4541 00af 03       		.uleb128 0x3
 4542 00b0 0E       		.uleb128 0xe
 4543 00b1 3A       		.uleb128 0x3a
 4544 00b2 0B       		.uleb128 0xb
 4545 00b3 3B       		.uleb128 0x3b
 4546 00b4 05       		.uleb128 0x5
 4547 00b5 27       		.uleb128 0x27
 4548 00b6 19       		.uleb128 0x19
 4549 00b7 49       		.uleb128 0x49
 4550 00b8 13       		.uleb128 0x13
 4551 00b9 11       		.uleb128 0x11
 4552 00ba 01       		.uleb128 0x1
 4553 00bb 12       		.uleb128 0x12
 4554 00bc 06       		.uleb128 0x6
 4555 00bd 40       		.uleb128 0x40
 4556 00be 18       		.uleb128 0x18
 4557 00bf 9642     		.uleb128 0x2116
 4558 00c1 19       		.uleb128 0x19
 4559 00c2 01       		.uleb128 0x1
 4560 00c3 13       		.uleb128 0x13
 4561 00c4 00       		.byte	0
 4562 00c5 00       		.byte	0
 4563 00c6 0E       		.uleb128 0xe
 4564 00c7 2E       		.uleb128 0x2e
 4565 00c8 00       		.byte	0
 4566 00c9 3F       		.uleb128 0x3f
 4567 00ca 19       		.uleb128 0x19
 4568 00cb 03       		.uleb128 0x3
 4569 00cc 0E       		.uleb128 0xe
 4570 00cd 3A       		.uleb128 0x3a
 4571 00ce 0B       		.uleb128 0xb
 4572 00cf 3B       		.uleb128 0x3b
 4573 00d0 05       		.uleb128 0x5
 4574 00d1 27       		.uleb128 0x27
 4575 00d2 19       		.uleb128 0x19
 4576 00d3 11       		.uleb128 0x11
 4577 00d4 01       		.uleb128 0x1
 4578 00d5 12       		.uleb128 0x12
 4579 00d6 06       		.uleb128 0x6
 4580 00d7 40       		.uleb128 0x40
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 138


 4581 00d8 18       		.uleb128 0x18
 4582 00d9 9742     		.uleb128 0x2117
 4583 00db 19       		.uleb128 0x19
 4584 00dc 00       		.byte	0
 4585 00dd 00       		.byte	0
 4586 00de 0F       		.uleb128 0xf
 4587 00df 2E       		.uleb128 0x2e
 4588 00e0 01       		.byte	0x1
 4589 00e1 3F       		.uleb128 0x3f
 4590 00e2 19       		.uleb128 0x19
 4591 00e3 03       		.uleb128 0x3
 4592 00e4 0E       		.uleb128 0xe
 4593 00e5 3A       		.uleb128 0x3a
 4594 00e6 0B       		.uleb128 0xb
 4595 00e7 3B       		.uleb128 0x3b
 4596 00e8 05       		.uleb128 0x5
 4597 00e9 27       		.uleb128 0x27
 4598 00ea 19       		.uleb128 0x19
 4599 00eb 49       		.uleb128 0x49
 4600 00ec 13       		.uleb128 0x13
 4601 00ed 11       		.uleb128 0x11
 4602 00ee 01       		.uleb128 0x1
 4603 00ef 12       		.uleb128 0x12
 4604 00f0 06       		.uleb128 0x6
 4605 00f1 40       		.uleb128 0x40
 4606 00f2 18       		.uleb128 0x18
 4607 00f3 9742     		.uleb128 0x2117
 4608 00f5 19       		.uleb128 0x19
 4609 00f6 01       		.uleb128 0x1
 4610 00f7 13       		.uleb128 0x13
 4611 00f8 00       		.byte	0
 4612 00f9 00       		.byte	0
 4613 00fa 10       		.uleb128 0x10
 4614 00fb 2E       		.uleb128 0x2e
 4615 00fc 00       		.byte	0
 4616 00fd 3F       		.uleb128 0x3f
 4617 00fe 19       		.uleb128 0x19
 4618 00ff 03       		.uleb128 0x3
 4619 0100 0E       		.uleb128 0xe
 4620 0101 3A       		.uleb128 0x3a
 4621 0102 0B       		.uleb128 0xb
 4622 0103 3B       		.uleb128 0x3b
 4623 0104 05       		.uleb128 0x5
 4624 0105 27       		.uleb128 0x27
 4625 0106 19       		.uleb128 0x19
 4626 0107 49       		.uleb128 0x49
 4627 0108 13       		.uleb128 0x13
 4628 0109 11       		.uleb128 0x11
 4629 010a 01       		.uleb128 0x1
 4630 010b 12       		.uleb128 0x12
 4631 010c 06       		.uleb128 0x6
 4632 010d 40       		.uleb128 0x40
 4633 010e 18       		.uleb128 0x18
 4634 010f 9742     		.uleb128 0x2117
 4635 0111 19       		.uleb128 0x19
 4636 0112 00       		.byte	0
 4637 0113 00       		.byte	0
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 139


 4638 0114 11       		.uleb128 0x11
 4639 0115 2E       		.uleb128 0x2e
 4640 0116 01       		.byte	0x1
 4641 0117 3F       		.uleb128 0x3f
 4642 0118 19       		.uleb128 0x19
 4643 0119 03       		.uleb128 0x3
 4644 011a 0E       		.uleb128 0xe
 4645 011b 3A       		.uleb128 0x3a
 4646 011c 0B       		.uleb128 0xb
 4647 011d 3B       		.uleb128 0x3b
 4648 011e 05       		.uleb128 0x5
 4649 011f 27       		.uleb128 0x27
 4650 0120 19       		.uleb128 0x19
 4651 0121 11       		.uleb128 0x11
 4652 0122 01       		.uleb128 0x1
 4653 0123 12       		.uleb128 0x12
 4654 0124 06       		.uleb128 0x6
 4655 0125 40       		.uleb128 0x40
 4656 0126 18       		.uleb128 0x18
 4657 0127 9742     		.uleb128 0x2117
 4658 0129 19       		.uleb128 0x19
 4659 012a 01       		.uleb128 0x1
 4660 012b 13       		.uleb128 0x13
 4661 012c 00       		.byte	0
 4662 012d 00       		.byte	0
 4663 012e 12       		.uleb128 0x12
 4664 012f 2E       		.uleb128 0x2e
 4665 0130 00       		.byte	0
 4666 0131 3F       		.uleb128 0x3f
 4667 0132 19       		.uleb128 0x19
 4668 0133 03       		.uleb128 0x3
 4669 0134 0E       		.uleb128 0xe
 4670 0135 3A       		.uleb128 0x3a
 4671 0136 0B       		.uleb128 0xb
 4672 0137 3B       		.uleb128 0x3b
 4673 0138 05       		.uleb128 0x5
 4674 0139 27       		.uleb128 0x27
 4675 013a 19       		.uleb128 0x19
 4676 013b 11       		.uleb128 0x11
 4677 013c 01       		.uleb128 0x1
 4678 013d 12       		.uleb128 0x12
 4679 013e 06       		.uleb128 0x6
 4680 013f 40       		.uleb128 0x40
 4681 0140 18       		.uleb128 0x18
 4682 0141 9642     		.uleb128 0x2116
 4683 0143 19       		.uleb128 0x19
 4684 0144 00       		.byte	0
 4685 0145 00       		.byte	0
 4686 0146 13       		.uleb128 0x13
 4687 0147 34       		.uleb128 0x34
 4688 0148 00       		.byte	0
 4689 0149 03       		.uleb128 0x3
 4690 014a 08       		.uleb128 0x8
 4691 014b 3A       		.uleb128 0x3a
 4692 014c 0B       		.uleb128 0xb
 4693 014d 3B       		.uleb128 0x3b
 4694 014e 05       		.uleb128 0x5
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 140


 4695 014f 49       		.uleb128 0x49
 4696 0150 13       		.uleb128 0x13
 4697 0151 02       		.uleb128 0x2
 4698 0152 18       		.uleb128 0x18
 4699 0153 00       		.byte	0
 4700 0154 00       		.byte	0
 4701 0155 14       		.uleb128 0x14
 4702 0156 2E       		.uleb128 0x2e
 4703 0157 01       		.byte	0x1
 4704 0158 03       		.uleb128 0x3
 4705 0159 0E       		.uleb128 0xe
 4706 015a 3A       		.uleb128 0x3a
 4707 015b 0B       		.uleb128 0xb
 4708 015c 3B       		.uleb128 0x3b
 4709 015d 05       		.uleb128 0x5
 4710 015e 27       		.uleb128 0x27
 4711 015f 19       		.uleb128 0x19
 4712 0160 11       		.uleb128 0x11
 4713 0161 01       		.uleb128 0x1
 4714 0162 12       		.uleb128 0x12
 4715 0163 06       		.uleb128 0x6
 4716 0164 40       		.uleb128 0x40
 4717 0165 18       		.uleb128 0x18
 4718 0166 9642     		.uleb128 0x2116
 4719 0168 19       		.uleb128 0x19
 4720 0169 01       		.uleb128 0x1
 4721 016a 13       		.uleb128 0x13
 4722 016b 00       		.byte	0
 4723 016c 00       		.byte	0
 4724 016d 15       		.uleb128 0x15
 4725 016e 01       		.uleb128 0x1
 4726 016f 01       		.byte	0x1
 4727 0170 49       		.uleb128 0x49
 4728 0171 13       		.uleb128 0x13
 4729 0172 01       		.uleb128 0x1
 4730 0173 13       		.uleb128 0x13
 4731 0174 00       		.byte	0
 4732 0175 00       		.byte	0
 4733 0176 16       		.uleb128 0x16
 4734 0177 21       		.uleb128 0x21
 4735 0178 00       		.byte	0
 4736 0179 49       		.uleb128 0x49
 4737 017a 13       		.uleb128 0x13
 4738 017b 2F       		.uleb128 0x2f
 4739 017c 0B       		.uleb128 0xb
 4740 017d 00       		.byte	0
 4741 017e 00       		.byte	0
 4742 017f 17       		.uleb128 0x17
 4743 0180 34       		.uleb128 0x34
 4744 0181 00       		.byte	0
 4745 0182 03       		.uleb128 0x3
 4746 0183 0E       		.uleb128 0xe
 4747 0184 3A       		.uleb128 0x3a
 4748 0185 0B       		.uleb128 0xb
 4749 0186 3B       		.uleb128 0x3b
 4750 0187 0B       		.uleb128 0xb
 4751 0188 49       		.uleb128 0x49
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 141


 4752 0189 13       		.uleb128 0x13
 4753 018a 02       		.uleb128 0x2
 4754 018b 18       		.uleb128 0x18
 4755 018c 00       		.byte	0
 4756 018d 00       		.byte	0
 4757 018e 18       		.uleb128 0x18
 4758 018f 34       		.uleb128 0x34
 4759 0190 00       		.byte	0
 4760 0191 03       		.uleb128 0x3
 4761 0192 0E       		.uleb128 0xe
 4762 0193 3A       		.uleb128 0x3a
 4763 0194 0B       		.uleb128 0xb
 4764 0195 3B       		.uleb128 0x3b
 4765 0196 0B       		.uleb128 0xb
 4766 0197 49       		.uleb128 0x49
 4767 0198 13       		.uleb128 0x13
 4768 0199 3F       		.uleb128 0x3f
 4769 019a 19       		.uleb128 0x19
 4770 019b 02       		.uleb128 0x2
 4771 019c 18       		.uleb128 0x18
 4772 019d 00       		.byte	0
 4773 019e 00       		.byte	0
 4774 019f 19       		.uleb128 0x19
 4775 01a0 26       		.uleb128 0x26
 4776 01a1 00       		.byte	0
 4777 01a2 49       		.uleb128 0x49
 4778 01a3 13       		.uleb128 0x13
 4779 01a4 00       		.byte	0
 4780 01a5 00       		.byte	0
 4781 01a6 00       		.byte	0
 4782              		.section	.debug_aranges,"",%progbits
 4783 0000 BC010000 		.4byte	0x1bc
 4784 0004 0200     		.2byte	0x2
 4785 0006 00000000 		.4byte	.Ldebug_info0
 4786 000a 04       		.byte	0x4
 4787 000b 00       		.byte	0
 4788 000c 0000     		.2byte	0
 4789 000e 0000     		.2byte	0
 4790 0010 00000000 		.4byte	.LFB2
 4791 0014 1C000000 		.4byte	.LFE2-.LFB2
 4792 0018 00000000 		.4byte	.LFB3
 4793 001c 18000000 		.4byte	.LFE3-.LFB3
 4794 0020 00000000 		.4byte	.LFB4
 4795 0024 48000000 		.4byte	.LFE4-.LFB4
 4796 0028 00000000 		.4byte	.LFB5
 4797 002c 34000000 		.4byte	.LFE5-.LFB5
 4798 0030 00000000 		.4byte	.LFB6
 4799 0034 44000000 		.4byte	.LFE6-.LFB6
 4800 0038 00000000 		.4byte	.LFB7
 4801 003c EC010000 		.4byte	.LFE7-.LFB7
 4802 0040 00000000 		.4byte	.LFB8
 4803 0044 74000000 		.4byte	.LFE8-.LFB8
 4804 0048 00000000 		.4byte	.LFB9
 4805 004c 2C000000 		.4byte	.LFE9-.LFB9
 4806 0050 00000000 		.4byte	.LFB10
 4807 0054 20000000 		.4byte	.LFE10-.LFB10
 4808 0058 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 142


 4809 005c 58000000 		.4byte	.LFE11-.LFB11
 4810 0060 00000000 		.4byte	.LFB12
 4811 0064 60000000 		.4byte	.LFE12-.LFB12
 4812 0068 00000000 		.4byte	.LFB13
 4813 006c 28000000 		.4byte	.LFE13-.LFB13
 4814 0070 00000000 		.4byte	.LFB14
 4815 0074 18000000 		.4byte	.LFE14-.LFB14
 4816 0078 00000000 		.4byte	.LFB15
 4817 007c 14000000 		.4byte	.LFE15-.LFB15
 4818 0080 00000000 		.4byte	.LFB16
 4819 0084 30000000 		.4byte	.LFE16-.LFB16
 4820 0088 00000000 		.4byte	.LFB17
 4821 008c 24000000 		.4byte	.LFE17-.LFB17
 4822 0090 00000000 		.4byte	.LFB18
 4823 0094 18000000 		.4byte	.LFE18-.LFB18
 4824 0098 00000000 		.4byte	.LFB19
 4825 009c 48000000 		.4byte	.LFE19-.LFB19
 4826 00a0 00000000 		.4byte	.LFB20
 4827 00a4 34000000 		.4byte	.LFE20-.LFB20
 4828 00a8 00000000 		.4byte	.LFB21
 4829 00ac 4C000000 		.4byte	.LFE21-.LFB21
 4830 00b0 00000000 		.4byte	.LFB22
 4831 00b4 36000000 		.4byte	.LFE22-.LFB22
 4832 00b8 00000000 		.4byte	.LFB23
 4833 00bc A8000000 		.4byte	.LFE23-.LFB23
 4834 00c0 00000000 		.4byte	.LFB24
 4835 00c4 5C000000 		.4byte	.LFE24-.LFB24
 4836 00c8 00000000 		.4byte	.LFB25
 4837 00cc 28000000 		.4byte	.LFE25-.LFB25
 4838 00d0 00000000 		.4byte	.LFB26
 4839 00d4 30000000 		.4byte	.LFE26-.LFB26
 4840 00d8 00000000 		.4byte	.LFB27
 4841 00dc 28000000 		.4byte	.LFE27-.LFB27
 4842 00e0 00000000 		.4byte	.LFB28
 4843 00e4 28000000 		.4byte	.LFE28-.LFB28
 4844 00e8 00000000 		.4byte	.LFB29
 4845 00ec 28000000 		.4byte	.LFE29-.LFB29
 4846 00f0 00000000 		.4byte	.LFB30
 4847 00f4 14000000 		.4byte	.LFE30-.LFB30
 4848 00f8 00000000 		.4byte	.LFB31
 4849 00fc 20000000 		.4byte	.LFE31-.LFB31
 4850 0100 00000000 		.4byte	.LFB32
 4851 0104 48000000 		.4byte	.LFE32-.LFB32
 4852 0108 00000000 		.4byte	.LFB33
 4853 010c 28000000 		.4byte	.LFE33-.LFB33
 4854 0110 00000000 		.4byte	.LFB34
 4855 0114 84000000 		.4byte	.LFE34-.LFB34
 4856 0118 00000000 		.4byte	.LFB35
 4857 011c 24000000 		.4byte	.LFE35-.LFB35
 4858 0120 00000000 		.4byte	.LFB36
 4859 0124 64000000 		.4byte	.LFE36-.LFB36
 4860 0128 00000000 		.4byte	.LFB37
 4861 012c 1C000000 		.4byte	.LFE37-.LFB37
 4862 0130 00000000 		.4byte	.LFB38
 4863 0134 18000000 		.4byte	.LFE38-.LFB38
 4864 0138 00000000 		.4byte	.LFB39
 4865 013c 18000000 		.4byte	.LFE39-.LFB39
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 143


 4866 0140 00000000 		.4byte	.LFB40
 4867 0144 18000000 		.4byte	.LFE40-.LFB40
 4868 0148 00000000 		.4byte	.LFB41
 4869 014c 1C000000 		.4byte	.LFE41-.LFB41
 4870 0150 00000000 		.4byte	.LFB42
 4871 0154 18000000 		.4byte	.LFE42-.LFB42
 4872 0158 00000000 		.4byte	.LFB43
 4873 015c 18000000 		.4byte	.LFE43-.LFB43
 4874 0160 00000000 		.4byte	.LFB44
 4875 0164 34000000 		.4byte	.LFE44-.LFB44
 4876 0168 00000000 		.4byte	.LFB45
 4877 016c 18000000 		.4byte	.LFE45-.LFB45
 4878 0170 00000000 		.4byte	.LFB46
 4879 0174 14000000 		.4byte	.LFE46-.LFB46
 4880 0178 00000000 		.4byte	.LFB47
 4881 017c 2C000000 		.4byte	.LFE47-.LFB47
 4882 0180 00000000 		.4byte	.LFB48
 4883 0184 1C000000 		.4byte	.LFE48-.LFB48
 4884 0188 00000000 		.4byte	.LFB49
 4885 018c 44000000 		.4byte	.LFE49-.LFB49
 4886 0190 00000000 		.4byte	.LFB50
 4887 0194 C0000000 		.4byte	.LFE50-.LFB50
 4888 0198 00000000 		.4byte	.LFB51
 4889 019c 38000000 		.4byte	.LFE51-.LFB51
 4890 01a0 00000000 		.4byte	.LFB52
 4891 01a4 38000000 		.4byte	.LFE52-.LFB52
 4892 01a8 00000000 		.4byte	.LFB53
 4893 01ac 38000000 		.4byte	.LFE53-.LFB53
 4894 01b0 00000000 		.4byte	.LFB54
 4895 01b4 A0000000 		.4byte	.LFE54-.LFB54
 4896 01b8 00000000 		.4byte	0
 4897 01bc 00000000 		.4byte	0
 4898              		.section	.debug_ranges,"",%progbits
 4899              	.Ldebug_ranges0:
 4900 0000 00000000 		.4byte	.LFB2
 4901 0004 1C000000 		.4byte	.LFE2
 4902 0008 00000000 		.4byte	.LFB3
 4903 000c 18000000 		.4byte	.LFE3
 4904 0010 00000000 		.4byte	.LFB4
 4905 0014 48000000 		.4byte	.LFE4
 4906 0018 00000000 		.4byte	.LFB5
 4907 001c 34000000 		.4byte	.LFE5
 4908 0020 00000000 		.4byte	.LFB6
 4909 0024 44000000 		.4byte	.LFE6
 4910 0028 00000000 		.4byte	.LFB7
 4911 002c EC010000 		.4byte	.LFE7
 4912 0030 00000000 		.4byte	.LFB8
 4913 0034 74000000 		.4byte	.LFE8
 4914 0038 00000000 		.4byte	.LFB9
 4915 003c 2C000000 		.4byte	.LFE9
 4916 0040 00000000 		.4byte	.LFB10
 4917 0044 20000000 		.4byte	.LFE10
 4918 0048 00000000 		.4byte	.LFB11
 4919 004c 58000000 		.4byte	.LFE11
 4920 0050 00000000 		.4byte	.LFB12
 4921 0054 60000000 		.4byte	.LFE12
 4922 0058 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 144


 4923 005c 28000000 		.4byte	.LFE13
 4924 0060 00000000 		.4byte	.LFB14
 4925 0064 18000000 		.4byte	.LFE14
 4926 0068 00000000 		.4byte	.LFB15
 4927 006c 14000000 		.4byte	.LFE15
 4928 0070 00000000 		.4byte	.LFB16
 4929 0074 30000000 		.4byte	.LFE16
 4930 0078 00000000 		.4byte	.LFB17
 4931 007c 24000000 		.4byte	.LFE17
 4932 0080 00000000 		.4byte	.LFB18
 4933 0084 18000000 		.4byte	.LFE18
 4934 0088 00000000 		.4byte	.LFB19
 4935 008c 48000000 		.4byte	.LFE19
 4936 0090 00000000 		.4byte	.LFB20
 4937 0094 34000000 		.4byte	.LFE20
 4938 0098 00000000 		.4byte	.LFB21
 4939 009c 4C000000 		.4byte	.LFE21
 4940 00a0 00000000 		.4byte	.LFB22
 4941 00a4 36000000 		.4byte	.LFE22
 4942 00a8 00000000 		.4byte	.LFB23
 4943 00ac A8000000 		.4byte	.LFE23
 4944 00b0 00000000 		.4byte	.LFB24
 4945 00b4 5C000000 		.4byte	.LFE24
 4946 00b8 00000000 		.4byte	.LFB25
 4947 00bc 28000000 		.4byte	.LFE25
 4948 00c0 00000000 		.4byte	.LFB26
 4949 00c4 30000000 		.4byte	.LFE26
 4950 00c8 00000000 		.4byte	.LFB27
 4951 00cc 28000000 		.4byte	.LFE27
 4952 00d0 00000000 		.4byte	.LFB28
 4953 00d4 28000000 		.4byte	.LFE28
 4954 00d8 00000000 		.4byte	.LFB29
 4955 00dc 28000000 		.4byte	.LFE29
 4956 00e0 00000000 		.4byte	.LFB30
 4957 00e4 14000000 		.4byte	.LFE30
 4958 00e8 00000000 		.4byte	.LFB31
 4959 00ec 20000000 		.4byte	.LFE31
 4960 00f0 00000000 		.4byte	.LFB32
 4961 00f4 48000000 		.4byte	.LFE32
 4962 00f8 00000000 		.4byte	.LFB33
 4963 00fc 28000000 		.4byte	.LFE33
 4964 0100 00000000 		.4byte	.LFB34
 4965 0104 84000000 		.4byte	.LFE34
 4966 0108 00000000 		.4byte	.LFB35
 4967 010c 24000000 		.4byte	.LFE35
 4968 0110 00000000 		.4byte	.LFB36
 4969 0114 64000000 		.4byte	.LFE36
 4970 0118 00000000 		.4byte	.LFB37
 4971 011c 1C000000 		.4byte	.LFE37
 4972 0120 00000000 		.4byte	.LFB38
 4973 0124 18000000 		.4byte	.LFE38
 4974 0128 00000000 		.4byte	.LFB39
 4975 012c 18000000 		.4byte	.LFE39
 4976 0130 00000000 		.4byte	.LFB40
 4977 0134 18000000 		.4byte	.LFE40
 4978 0138 00000000 		.4byte	.LFB41
 4979 013c 1C000000 		.4byte	.LFE41
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 145


 4980 0140 00000000 		.4byte	.LFB42
 4981 0144 18000000 		.4byte	.LFE42
 4982 0148 00000000 		.4byte	.LFB43
 4983 014c 18000000 		.4byte	.LFE43
 4984 0150 00000000 		.4byte	.LFB44
 4985 0154 34000000 		.4byte	.LFE44
 4986 0158 00000000 		.4byte	.LFB45
 4987 015c 18000000 		.4byte	.LFE45
 4988 0160 00000000 		.4byte	.LFB46
 4989 0164 14000000 		.4byte	.LFE46
 4990 0168 00000000 		.4byte	.LFB47
 4991 016c 2C000000 		.4byte	.LFE47
 4992 0170 00000000 		.4byte	.LFB48
 4993 0174 1C000000 		.4byte	.LFE48
 4994 0178 00000000 		.4byte	.LFB49
 4995 017c 44000000 		.4byte	.LFE49
 4996 0180 00000000 		.4byte	.LFB50
 4997 0184 C0000000 		.4byte	.LFE50
 4998 0188 00000000 		.4byte	.LFB51
 4999 018c 38000000 		.4byte	.LFE51
 5000 0190 00000000 		.4byte	.LFB52
 5001 0194 38000000 		.4byte	.LFE52
 5002 0198 00000000 		.4byte	.LFB53
 5003 019c 38000000 		.4byte	.LFE53
 5004 01a0 00000000 		.4byte	.LFB54
 5005 01a4 A0000000 		.4byte	.LFE54
 5006 01a8 00000000 		.4byte	0
 5007 01ac 00000000 		.4byte	0
 5008              		.section	.debug_line,"",%progbits
 5009              	.Ldebug_line0:
 5010 0000 39050000 		.section	.debug_str,"MS",%progbits,1
 5010      02004D00 
 5010      00000201 
 5010      FB0E0D00 
 5010      01010101 
 5011              	.LASF59:
 5012 0000 72616D56 		.ascii	"ramVectorTable\000"
 5012      6563746F 
 5012      72546162 
 5012      6C6500
 5013              	.LASF32:
 5014 000f 62675472 		.ascii	"bgTrim4\000"
 5014      696D3400 
 5015              	.LASF10:
 5016 0017 75696E74 		.ascii	"uint16\000"
 5016      313600
 5017              	.LASF52:
 5018 001e 696E7453 		.ascii	"intState\000"
 5018      74617465 
 5018      00
 5019              	.LASF26:
 5020 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5020      73436C6B 
 5020      57726974 
 5020      65486663 
 5020      6C6B4469 
 5021              	.LASF58:
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 146


 5022 0040 6F6C6449 		.ascii	"oldIsr\000"
 5022      737200
 5023              	.LASF96:
 5024 0047 72657456 		.ascii	"retVal\000"
 5024      616C00
 5025              	.LASF51:
 5026 004e 43794469 		.ascii	"CyDisableInts\000"
 5026      7361626C 
 5026      65496E74 
 5026      7300
 5027              	.LASF35:
 5028 005c 63757272 		.ascii	"currentImoTrim2Value\000"
 5028      656E7449 
 5028      6D6F5472 
 5028      696D3256 
 5028      616C7565 
 5029              	.LASF7:
 5030 0071 6C6F6E67 		.ascii	"long long unsigned int\000"
 5030      206C6F6E 
 5030      6720756E 
 5030      7369676E 
 5030      65642069 
 5031              	.LASF108:
 5032 0088 43795379 		.ascii	"CySysTickInitVar\000"
 5032      73546963 
 5032      6B496E69 
 5032      74566172 
 5032      00
 5033              	.LASF53:
 5034 0099 4379456E 		.ascii	"CyEnableInts\000"
 5034      61626C65 
 5034      496E7473 
 5034      00
 5035              	.LASF106:
 5036 00a6 696E7465 		.ascii	"interfaceNumber\000"
 5036      72666163 
 5036      654E756D 
 5036      62657200 
 5037              	.LASF74:
 5038 00b6 4379536F 		.ascii	"CySoftwareReset\000"
 5038      66747761 
 5038      72655265 
 5038      73657400 
 5039              	.LASF84:
 5040 00c6 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5040      73546963 
 5040      6B456E61 
 5040      626C6549 
 5040      6E746572 
 5041              	.LASF69:
 5042 00df 4379496E 		.ascii	"CyIntGetState\000"
 5042      74476574 
 5042      53746174 
 5042      6500
 5043              	.LASF6:
 5044 00ed 6C6F6E67 		.ascii	"long long int\000"
 5044      206C6F6E 
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 147


 5044      6720696E 
 5044      7400
 5045              	.LASF0:
 5046 00fb 7369676E 		.ascii	"signed char\000"
 5046      65642063 
 5046      68617200 
 5047              	.LASF31:
 5048 0107 66726571 		.ascii	"freq\000"
 5048      00
 5049              	.LASF79:
 5050 010c 43794465 		.ascii	"CyDelayFreq\000"
 5050      6C617946 
 5050      72657100 
 5051              	.LASF23:
 5052 0118 696E7465 		.ascii	"interruptState\000"
 5052      72727570 
 5052      74537461 
 5052      746500
 5053              	.LASF88:
 5054 0127 43795379 		.ascii	"CySysTickGetReload\000"
 5054      73546963 
 5054      6B476574 
 5054      52656C6F 
 5054      616400
 5055              	.LASF4:
 5056 013a 6C6F6E67 		.ascii	"long int\000"
 5056      20696E74 
 5056      00
 5057              	.LASF70:
 5058 0143 4379496E 		.ascii	"CyIntDisable\000"
 5058      74446973 
 5058      61626C65 
 5058      00
 5059              	.LASF97:
 5060 0150 43795379 		.ascii	"CySysTickGetCallback\000"
 5060      73546963 
 5060      6B476574 
 5060      43616C6C 
 5060      6261636B 
 5061              	.LASF9:
 5062 0165 75696E74 		.ascii	"uint8\000"
 5062      3800
 5063              	.LASF110:
 5064 016b 63796465 		.ascii	"cydelayFreqKhz\000"
 5064      6C617946 
 5064      7265714B 
 5064      687A00
 5065              	.LASF77:
 5066 017a 43794465 		.ascii	"CyDelayUs\000"
 5066      6C617955 
 5066      7300
 5067              	.LASF13:
 5068 0184 646F7562 		.ascii	"double\000"
 5068      6C6500
 5069              	.LASF65:
 5070 018b 73686966 		.ascii	"shift\000"
 5070      7400
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 148


 5071              	.LASF48:
 5072 0191 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5072      734C7664 
 5072      436C6561 
 5072      72496E74 
 5072      65727275 
 5073              	.LASF11:
 5074 01a8 75696E74 		.ascii	"uint32\000"
 5074      333200
 5075              	.LASF42:
 5076 01af 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 5076      73436C6B 
 5076      45636F52 
 5076      65616453 
 5076      74617475 
 5077              	.LASF54:
 5078 01c5 6D61736B 		.ascii	"mask\000"
 5078      00
 5079              	.LASF37:
 5080 01ca 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5080      73436C6B 
 5080      47657453 
 5080      7973636C 
 5080      6B536F75 
 5081              	.LASF67:
 5082 01e2 4379496E 		.ascii	"CyIntGetPriority\000"
 5082      74476574 
 5082      5072696F 
 5082      72697479 
 5082      00
 5083              	.LASF112:
 5084 01f3 63796465 		.ascii	"cydelay32kMs\000"
 5084      6C617933 
 5084      326B4D73 
 5084      00
 5085              	.LASF81:
 5086 0200 43795379 		.ascii	"CySysTickInit\000"
 5086      73546963 
 5086      6B496E69 
 5086      7400
 5087              	.LASF66:
 5088 020e 76616C75 		.ascii	"value\000"
 5088      6500
 5089              	.LASF91:
 5090 0214 636C6F63 		.ascii	"clockSource\000"
 5090      6B536F75 
 5090      72636500 
 5091              	.LASF98:
 5092 0220 43794765 		.ascii	"CyGetUniqueId\000"
 5092      74556E69 
 5092      71756549 
 5092      6400
 5093              	.LASF92:
 5094 022e 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5094      73546963 
 5094      6B476574 
 5094      436F756E 
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 149


 5094      74466C61 
 5095              	.LASF8:
 5096 0244 756E7369 		.ascii	"unsigned int\000"
 5096      676E6564 
 5096      20696E74 
 5096      00
 5097              	.LASF93:
 5098 0251 43795379 		.ascii	"CySysTickClear\000"
 5098      73546963 
 5098      6B436C65 
 5098      617200
 5099              	.LASF5:
 5100 0260 6C6F6E67 		.ascii	"long unsigned int\000"
 5100      20756E73 
 5100      69676E65 
 5100      6420696E 
 5100      7400
 5101              	.LASF87:
 5102 0272 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5102      734C7664 
 5102      47657449 
 5102      6E746572 
 5102      72757074 
 5103              	.LASF22:
 5104 028d 43795379 		.ascii	"CySysClkImoStop\000"
 5104      73436C6B 
 5104      496D6F53 
 5104      746F7000 
 5105              	.LASF71:
 5106 029d 4379496E 		.ascii	"CyIntSetPending\000"
 5106      74536574 
 5106      50656E64 
 5106      696E6700 
 5107              	.LASF49:
 5108 02ad 43795379 		.ascii	"CySysGetResetReason\000"
 5108      73476574 
 5108      52657365 
 5108      74526561 
 5108      736F6E00 
 5109              	.LASF3:
 5110 02c1 73686F72 		.ascii	"short unsigned int\000"
 5110      7420756E 
 5110      7369676E 
 5110      65642069 
 5110      6E7400
 5111              	.LASF102:
 5112 02d4 72656754 		.ascii	"regTmp\000"
 5112      6D7000
 5113              	.LASF90:
 5114 02db 43795379 		.ascii	"CySysTickSetClockSource\000"
 5114      73546963 
 5114      6B536574 
 5114      436C6F63 
 5114      6B536F75 
 5115              	.LASF61:
 5116 02f3 4379496E 		.ascii	"CyIntSetVector\000"
 5116      74536574 
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 150


 5116      56656374 
 5116      6F7200
 5117              	.LASF56:
 5118 0302 6E756D62 		.ascii	"number\000"
 5118      657200
 5119              	.LASF64:
 5120 0309 7072696F 		.ascii	"priority\000"
 5120      72697479 
 5120      00
 5121              	.LASF30:
 5122 0312 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5122      73436C6B 
 5122      57726974 
 5122      65496D6F 
 5122      46726571 
 5123              	.LASF103:
 5124 0327 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5124      73536574 
 5124      466C6173 
 5124      68416363 
 5124      65737341 
 5125              	.LASF55:
 5126 0346 4379496E 		.ascii	"CyIntSetSysVector\000"
 5126      74536574 
 5126      53797356 
 5126      6563746F 
 5126      7200
 5127              	.LASF17:
 5128 0358 72656733 		.ascii	"reg32\000"
 5128      3200
 5129              	.LASF80:
 5130 035e 43795379 		.ascii	"CySysTickStart\000"
 5130      73546963 
 5130      6B537461 
 5130      727400
 5131              	.LASF40:
 5132 036d 72657475 		.ascii	"returnStatus\000"
 5132      726E5374 
 5132      61747573 
 5132      00
 5133              	.LASF101:
 5134 037a 736F7572 		.ascii	"source\000"
 5134      636500
 5135              	.LASF19:
 5136 0381 73697A65 		.ascii	"sizetype\000"
 5136      74797065 
 5136      00
 5137              	.LASF105:
 5138 038a 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5138      73536574 
 5138      50657269 
 5138      70686572 
 5138      616C4163 
 5139              	.LASF72:
 5140 03ae 4379496E 		.ascii	"CyIntClearPending\000"
 5140      74436C65 
 5140      61725065 
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 151


 5140      6E64696E 
 5140      6700
 5141              	.LASF57:
 5142 03c0 61646472 		.ascii	"address\000"
 5142      65737300 
 5143              	.LASF33:
 5144 03c8 62675472 		.ascii	"bgTrim5\000"
 5144      696D3500 
 5145              	.LASF25:
 5146 03d0 73797363 		.ascii	"sysclkSource\000"
 5146      6C6B536F 
 5146      75726365 
 5146      00
 5147              	.LASF95:
 5148 03dd 66756E63 		.ascii	"function\000"
 5148      74696F6E 
 5148      00
 5149              	.LASF113:
 5150 03e6 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5150      6F467265 
 5150      714D687A 
 5150      32526567 
 5150      00
 5151              	.LASF89:
 5152 03f7 43795379 		.ascii	"CySysTickGetValue\000"
 5152      73546963 
 5152      6B476574 
 5152      56616C75 
 5152      6500
 5153              	.LASF109:
 5154 0409 63796465 		.ascii	"cydelayFreqHz\000"
 5154      6C617946 
 5154      72657148 
 5154      7A00
 5155              	.LASF63:
 5156 0417 4379496E 		.ascii	"CyIntSetPriority\000"
 5156      74536574 
 5156      5072696F 
 5156      72697479 
 5156      00
 5157              	.LASF12:
 5158 0428 666C6F61 		.ascii	"float\000"
 5158      7400
 5159              	.LASF45:
 5160 042e 43795379 		.ascii	"CySysLvdEnable\000"
 5160      734C7664 
 5160      456E6162 
 5160      6C6500
 5161              	.LASF20:
 5162 043d 63795379 		.ascii	"cySysTickCallback\000"
 5162      73546963 
 5162      6B43616C 
 5162      6C626163 
 5162      6B00
 5163              	.LASF62:
 5164 044f 4379496E 		.ascii	"CyIntGetVector\000"
 5164      74476574 
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 152


 5164      56656374 
 5164      6F7200
 5165              	.LASF76:
 5166 045e 6D696C6C 		.ascii	"milliseconds\000"
 5166      69736563 
 5166      6F6E6473 
 5166      00
 5167              	.LASF16:
 5168 046b 72656738 		.ascii	"reg8\000"
 5168      00
 5169              	.LASF46:
 5170 0470 74687265 		.ascii	"threshold\000"
 5170      73686F6C 
 5170      6400
 5171              	.LASF73:
 5172 047a 43794861 		.ascii	"CyHalt\000"
 5172      6C7400
 5173              	.LASF100:
 5174 0481 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5174      73536574 
 5174      52616D41 
 5174      63636573 
 5174      73417262 
 5175              	.LASF1:
 5176 049e 756E7369 		.ascii	"unsigned char\000"
 5176      676E6564 
 5176      20636861 
 5176      7200
 5177              	.LASF2:
 5178 04ac 73686F72 		.ascii	"short int\000"
 5178      7420696E 
 5178      7400
 5179              	.LASF68:
 5180 04b6 4379496E 		.ascii	"CyIntEnable\000"
 5180      74456E61 
 5180      626C6500 
 5181              	.LASF60:
 5182 04c2 4379496E 		.ascii	"CyIntGetSysVector\000"
 5182      74476574 
 5182      53797356 
 5182      6563746F 
 5182      7200
 5183              	.LASF28:
 5184 04d4 636C6B53 		.ascii	"clkSelect\000"
 5184      656C6563 
 5184      7400
 5185              	.LASF38:
 5186 04de 43795379 		.ascii	"CySysClkEcoStart\000"
 5186      73436C6B 
 5186      45636F53 
 5186      74617274 
 5186      00
 5187              	.LASF50:
 5188 04ef 72656173 		.ascii	"reason\000"
 5188      6F6E00
 5189              	.LASF116:
 5190 04f6 433A5C55 		.ascii	"C:\\Users\\Sarah\\Documents\\PSoC Creator\\CE210289"
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 153


 5190      73657273 
 5190      5C536172 
 5190      61685C44 
 5190      6F63756D 
 5191 0524 5F436170 		.ascii	"_CapSense_P4_Linear_Slider01\\PSoC_4_BLE_CapSense_S"
 5191      53656E73 
 5191      655F5034 
 5191      5F4C696E 
 5191      6561725F 
 5192 0556 6C696465 		.ascii	"lider_LED\\BLE_Capsense_LED_modified.cydsn\000"
 5192      725F4C45 
 5192      445C424C 
 5192      455F4361 
 5192      7073656E 
 5193              	.LASF14:
 5194 0580 63686172 		.ascii	"char\000"
 5194      00
 5195              	.LASF18:
 5196 0585 63796973 		.ascii	"cyisraddress\000"
 5196      72616464 
 5196      72657373 
 5196      00
 5197              	.LASF82:
 5198 0592 43795379 		.ascii	"CySysTickEnable\000"
 5198      73546963 
 5198      6B456E61 
 5198      626C6500 
 5199              	.LASF27:
 5200 05a2 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5200      73436C6B 
 5200      57726974 
 5200      65537973 
 5200      636C6B44 
 5201              	.LASF94:
 5202 05b9 43795379 		.ascii	"CySysTickSetCallback\000"
 5202      73546963 
 5202      6B536574 
 5202      43616C6C 
 5202      6261636B 
 5203              	.LASF107:
 5204 05ce 43795379 		.ascii	"CySysTickCallbacks\000"
 5204      73546963 
 5204      6B43616C 
 5204      6C626163 
 5204      6B7300
 5205              	.LASF36:
 5206 05e1 696D6F54 		.ascii	"imoTrim1Value\000"
 5206      72696D31 
 5206      56616C75 
 5206      6500
 5207              	.LASF99:
 5208 05ef 756E6971 		.ascii	"uniqueId\000"
 5208      75654964 
 5208      00
 5209              	.LASF75:
 5210 05f8 43794465 		.ascii	"CyDelay\000"
 5210      6C617900 
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 154


 5211              	.LASF85:
 5212 0600 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5212      73546963 
 5212      6B446973 
 5212      61626C65 
 5212      496E7465 
 5213              	.LASF47:
 5214 061a 43795379 		.ascii	"CySysLvdDisable\000"
 5214      734C7664 
 5214      44697361 
 5214      626C6500 
 5215              	.LASF111:
 5216 062a 63796465 		.ascii	"cydelayFreqMhz\000"
 5216      6C617946 
 5216      7265714D 
 5216      687A00
 5217              	.LASF41:
 5218 0639 43795379 		.ascii	"CySysClkEcoStop\000"
 5218      73436C6B 
 5218      45636F53 
 5218      746F7000 
 5219              	.LASF104:
 5220 0649 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5220      73536574 
 5220      446D6163 
 5220      41636365 
 5220      73734172 
 5221              	.LASF83:
 5222 0667 43795379 		.ascii	"CySysTickStop\000"
 5222      73546963 
 5222      6B53746F 
 5222      7000
 5223              	.LASF39:
 5224 0675 74696D65 		.ascii	"timeoutUs\000"
 5224      6F757455 
 5224      7300
 5225              	.LASF29:
 5226 067f 64697669 		.ascii	"divider\000"
 5226      64657200 
 5227              	.LASF44:
 5228 0687 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5228      73436C6B 
 5228      57726974 
 5228      6545636F 
 5228      44697600 
 5229              	.LASF15:
 5230 069b 63797374 		.ascii	"cystatus\000"
 5230      61747573 
 5230      00
 5231              	.LASF114:
 5232 06a4 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5232      4320342E 
 5232      392E3320 
 5232      32303135 
 5232      30333033 
 5233 06d7 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5233      20726576 
ARM GAS  C:\Users\Sarah\AppData\Local\Temp\ccxyy6Wd.s 			page 155


 5233      6973696F 
 5233      6E203232 
 5233      31323230 
 5234 070a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5234      66756E63 
 5234      74696F6E 
 5234      2D736563 
 5234      74696F6E 
 5235              	.LASF21:
 5236 0732 43795379 		.ascii	"CySysClkImoStart\000"
 5236      73436C6B 
 5236      496D6F53 
 5236      74617274 
 5236      00
 5237              	.LASF34:
 5238 0743 6E657749 		.ascii	"newImoTrim2Value\000"
 5238      6D6F5472 
 5238      696D3256 
 5238      616C7565 
 5238      00
 5239              	.LASF115:
 5240 0754 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5240      72617465 
 5240      645F536F 
 5240      75726365 
 5240      5C50536F 
 5241              	.LASF78:
 5242 0773 6D696372 		.ascii	"microseconds\000"
 5242      6F736563 
 5242      6F6E6473 
 5242      00
 5243              	.LASF24:
 5244 0780 746D7052 		.ascii	"tmpReg\000"
 5244      656700
 5245              	.LASF86:
 5246 0787 43795379 		.ascii	"CySysTickSetReload\000"
 5246      73546963 
 5246      6B536574 
 5246      52656C6F 
 5246      616400
 5247              	.LASF117:
 5248 079a 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5248      73546963 
 5248      6B536572 
 5248      76696365 
 5248      43616C6C 
 5249              	.LASF43:
 5250 07b4 72657475 		.ascii	"returnValue\000"
 5250      726E5661 
 5250      6C756500 
 5251              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
